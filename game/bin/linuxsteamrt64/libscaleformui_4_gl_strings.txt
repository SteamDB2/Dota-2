
!
!!! ExecuteEvent finished '%s' = %p for %s
!!! ExecuteEvent started '%s' = %p for %s
!=
!@
!P
!`
"
"  mapped to "
" - GFX file format expected
" is created
"%s"
"%s" = "%s"
"@
"P
#
#;
#@
#P
#bML
#base
#base is NULL
#empty#
#include
#include is NULL
#int#
#version 120uniform mat4 cxmul;uniform mat4 cxmul1;uniform sampler2D tex[2];varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor_original = texture2D(tex[int(0.0)], tc0);vec4 fcolor_source   = texture2D(tex[int(1.0)], tc1);gl_FragColor = (fcolor_original) * ( cxmul) + (fcolor_source) * ( cxmul1);}
#version 120uniform mat4 mvp;attribute vec2 atc;attribute vec4 pos;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc = atc;}
#version 120uniform mat4 mvp;attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;void main() {gl_Position = (pos) * ( mvp);color = acolor;factor = afactor;}
#version 120uniform mat4 mvp;attribute vec4 acolor;attribute vec4 pos;varying vec4 color;void main() {gl_Position = (pos) * ( mvp);color = acolor;}
#version 120uniform mat4 mvp;attribute vec4 pos;void main() {gl_Position = (pos) * ( mvp);}
#version 120uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
#version 120uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
#version 120uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 pos;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);}
#version 120uniform mat4 mvp;uniform vec4 texgen[4];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = (pos) * ( mvp);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);factor = afactor;}
#version 120uniform mat4 vfmuniforms[24];attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc = atc;}
#version 120uniform mat4 vfmuniforms[24];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;factor = afactor;}
#version 120uniform mat4 vfmuniforms[24];attribute vec4 acolor;attribute vec4 pos;attribute float vbatch;varying vec4 color;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);color = acolor;}
#version 120uniform mat4 vfmuniforms[24];attribute vec4 pos;attribute float vbatch;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[144];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 3.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 6.0 + 1.0+ 0.1)];factor = afactor;}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc = atc;fucxadd = vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 2.0 + 1.0+ 0.1)];}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec2 tc;varying vec4 vcolor;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);vcolor = acolor * vfuniforms[int(vbatch * 2.0 + 1.0+ 0.1)] + vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1)];tc = atc;}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 1.0)]);factor = afactor;}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;fucxadd = vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 2.0 + 1.0+ 0.1)];factor = afactor;}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec4 pos;attribute float vbatch;varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);color = acolor;fucxadd = vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 2.0 + 1.0+ 0.1)];}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 1.0)]);factor = afactor;}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 pos;attribute float vbatch;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 4.0 + 1.0+ 0.1)];factor = afactor;}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 3.0)]);factor = afactor;}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 4.0 + 1.0+ 0.1)];factor = afactor;}
#version 120uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];attribute vec4 pos;attribute float vbatch;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)];}
#version 120uniform sampler2D srctex;uniform sampler2D tex;varying vec2 tc;void main() {vec4 fchannels = texture2D(tex, tc);gl_FragColor  = texture2D(srctex, vec2(fchannels.r, 0.125));gl_FragColor += texture2D(srctex, vec2(fchannels.g, 0.375));gl_FragColor += texture2D(srctex, vec2(fchannels.b, 0.625));gl_FragColor += texture2D(srctex, vec2(fchannels.a, 0.875));}
#version 120uniform sampler2D tex;varying vec2 tc;varying vec4 vcolor;void main() {vec4 c = vcolor;c.a = c.a * texture2D(tex, tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec2 tc;varying vec4 vcolor;void main() {vec4 c = vcolor;c.a = c.a * texture2D(tex, tc).a;gl_FragColor = c;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec2 tc;varying vec4 vcolor;void main() {vec4 c = vcolor;c.a = c.a * texture2D(tex, tc).a;gl_FragColor = c;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 factor;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 factor;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 factor;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);vec4 diff = fcolor0 - fcolor1;vec4 oneValue = vec4(1.0/255.0, 1.0/255.0, 1.0/255.0, 1.0/255.0 );vec4 ltZero = (sign(diff)+vec4(1.0,1,1.0,1))*-0.25;vec4 partDiff = oneValue * (sign(ltZero)+vec4(1.0,1,1.0,1));vec4 wrapDiff = fract(diff + vec4(1.0,1,1.0,1)) + partDiff;float rgbdiff = sign(dot(wrapDiff.rgb, vec3(1.0,1,1.0)));gl_FragColor = mix( vec4(1.0,1,1.0, wrapDiff.a), vec4(wrapDiff.rgb, 1.0), rgbdiff );}
#version 120uniform sampler2D tex[2];varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);float inAlpha = fcolor_src.a;gl_FragColor.a = 1.0;gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
#version 120uniform sampler2D tex[2];varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);float inAlpha = fcolor_src.a;gl_FragColor.a = inAlpha;gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
#version 120uniform sampler2D tex[2];varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);float inAlpha = fcolor_src.a;gl_FragColor.a = mix(inAlpha, 1.0, fcolor_org.a);gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec2 tc0;varying vec2 tc1;varying vec2 tc2;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);vec4 fcolor_alp = texture2D(tex[int(2.0)], tc2);float inAlpha = fcolor_src.a * fcolor_alp.a;gl_FragColor.a = 1.0;gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
#version 120uniform sampler2D tex[3];varying vec2 tc0;varying vec2 tc1;varying vec2 tc2;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);vec4 fcolor_alp = texture2D(tex[int(2.0)], tc2);float inAlpha = fcolor_src.a * fcolor_alp.a;gl_FragColor.a = inAlpha;gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
#version 120uniform sampler2D tex[3];varying vec2 tc0;varying vec2 tc1;varying vec2 tc2;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);vec4 fcolor_alp = texture2D(tex[int(2.0)], tc2);float inAlpha = fcolor_src.a * fcolor_alp.a;gl_FragColor.a = mix(inAlpha, 1.0, fcolor_org.a);gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
#version 120uniform sampler2D tex[3];varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec4 factor;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec4 factor;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[3];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 factor;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 factor;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 factor;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor) * (cxmul) + cxadd * (gl_FragColor.a + cxadd.a);gl_FragColor = gl_FragColor;}
#version 120uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor) * (cxmul) + cxadd * (gl_FragColor.a + cxadd.a);gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;varying vec4 factor;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor) * (cxmul) + cxadd * (gl_FragColor.a + cxadd.a);gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;varying vec4 factor;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor) * (cxmul) + cxadd * (gl_FragColor.a + cxadd.a);gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;attribute vec2 atc;attribute vec4 pos;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc = atc;fucxadd = cxadd;fucxmul = cxmul;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;attribute vec4 acolor;attribute vec2 atc;attribute vec4 pos;varying vec2 tc;varying vec4 vcolor;void main() {gl_Position = (pos) * ( mvp);vcolor = acolor * cxmul + cxadd;tc = atc;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = (pos) * ( mvp);color = acolor;fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;attribute vec4 acolor;attribute vec4 pos;varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = (pos) * ( mvp);color = acolor;fucxadd = cxadd;fucxmul = cxmul;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 pos;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[4];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = (pos) * ( mvp);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];attribute vec2 atc;attribute vec4 pos;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc = atc;fucxadd = cxadd;fucxmul = cxmul;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];attribute vec4 acolor;attribute vec2 atc;attribute vec4 pos;varying vec2 tc;varying vec4 vcolor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);vcolor = acolor * cxmul + cxadd;tc = atc;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];attribute vec4 acolor;attribute vec4 pos;varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;fucxadd = cxadd;fucxmul = cxmul;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 pos;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;}
#version 120uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[4];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 120uniform vec4 cxmul;void main() {gl_FragColor = cxmul;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 cxmul;void main() {gl_FragColor = cxmul;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 cxmul;void main() {gl_FragColor = cxmul;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);float  i = 0.0;for (i = -fsize.x; i <= fsize.x; i++){{color += texture2D(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.gl_FragColor = color * fsize.w;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);float  i = 0.0;for (i = -fsize.x; i <= fsize.x; i++){{color += texture2D(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.gl_FragColor = color * fsize.w;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.gl_FragColor = color * fsize.w;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.gl_FragColor = color * fsize.w;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - gl_FragColor.a) * fsize.z, 0.0, 1.0);gl_FragColor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - gl_FragColor.a) * fsize.z, 0.0, 1.0);gl_FragColor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - gl_FragColor.a) * fsize.z, 0.0, 1.0);gl_FragColor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - gl_FragColor.a) * fsize.z, 0.0, 1.0);gl_FragColor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor = scolor * clamp(gl_FragColor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor = scolor * clamp(gl_FragColor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor = scolor * clamp(gl_FragColor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor = scolor * clamp(gl_FragColor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;gl_FragColor = scolor * clamp(gl_FragColor.a * fsize.z, 0.0, 1.0);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;gl_FragColor = scolor * clamp(gl_FragColor.a * fsize.z, 0.0, 1.0);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r) * base.a;gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r)) * base.a;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r) * base.a;gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r)) * base.a;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r) * base.a;gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r)) * base.a;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r) * base.a;gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r)) * base.a;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r);gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r));gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r);gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r));gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;gl_FragColor = ((scolor * gl_FragColor.a + scolor2 * gl_FragColor.r)*(1.0-base.a) + base);gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;gl_FragColor = ((scolor * gl_FragColor.a + scolor2 * gl_FragColor.r)*(1.0-base.a) + base);gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;gl_FragColor = ((scolor * gl_FragColor.a + scolor2 * gl_FragColor.r)*(1.0-base.a) + base);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2D(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;gl_FragColor = ((scolor * gl_FragColor.a + scolor2 * gl_FragColor.r)*(1.0-base.a) + base);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2D(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2D(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120uniform vec4 mvp[2];attribute vec2 atc;attribute vec4 pos;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc = atc;}
#version 120uniform vec4 mvp[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;factor = afactor;}
#version 120uniform vec4 mvp[2];attribute vec4 acolor;attribute vec4 pos;varying vec4 color;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;}
#version 120uniform vec4 mvp[2];attribute vec4 pos;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);}
#version 120uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
#version 120uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
#version 120uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 pos;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);}
#version 120uniform vec4 mvp[2];uniform vec4 texgen[4];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);factor = afactor;}
#version 120uniform vec4 mvp[2];uniform vec4 texgen[4];attribute vec4 pos;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);}
#version 120uniform vec4 mvp[2];uniform vec4 texgen[6];attribute vec4 pos;varying vec2 tc0;varying vec2 tc1;varying vec2 tc2;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);tc2.x = dot(pos, texgen[int(4.0)]);tc2.y = dot(pos, texgen[int(5.0)]);}
#version 120uniform vec4 vfuniforms[144];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 6.0 + 1.0+ 0.1)];factor = afactor;}
#version 120uniform vec4 vfuniforms[144];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1 + 1.0)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 3.0)]);factor = afactor;}
#version 120uniform vec4 vfuniforms[144];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 6.0 + 1.0+ 0.1)];factor = afactor;}
#version 120uniform vec4 vfuniforms[144];attribute vec4 pos;attribute float vbatch;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 6.0 + 2.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(vbatch * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(vbatch * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 6.0 + 1.0+ 0.1)];}
#version 120uniform vec4 vfuniforms[192];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 2.0+ 0.1 + 1.0)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 3.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 8.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 8.0 + 1.0+ 0.1)];factor = afactor;}
#version 120uniform vec4 vfuniforms[48];attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);tc = atc;}
#version 120uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 1.0)]);color = acolor;factor = afactor;}
#version 120uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec4 pos;attribute float vbatch;varying vec4 color;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);color = acolor;}
#version 120uniform vec4 vfuniforms[48];attribute vec4 pos;attribute float vbatch;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);}
#version 120uniform vec4 vfuniforms[96];attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);tc = atc;fucxadd = vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)];}
#version 120uniform vec4 vfuniforms[96];attribute vec4 acolor;attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec2 tc;varying vec4 vcolor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);vcolor = acolor * vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)] + vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];tc = atc;}
#version 120uniform vec4 vfuniforms[96];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 1.0)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);factor = afactor;}
#version 120uniform vec4 vfuniforms[96];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);color = acolor;fucxadd = vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 4.0 + 1.0+ 0.1)];factor = afactor;}
#version 120uniform vec4 vfuniforms[96];attribute vec4 acolor;attribute vec4 pos;attribute float vbatch;varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);color = acolor;fucxadd = vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)];}
#version 120uniform vec4 vfuniforms[96];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);factor = afactor;}
#version 120uniform vec4 vfuniforms[96];attribute vec4 pos;attribute float vbatch;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);}
#version 120varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 factor;void main() {gl_FragColor = color;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 factor;void main() {gl_FragColor = color;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 factor;void main() {gl_FragColor = color;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;void main() {gl_FragColor = color;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
#version 120varying vec4 color;void main() {gl_FragColor = color;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 factor;out vec4 fcolor;void main() {fcolor = color;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 factor;out vec4 fcolor;void main() {fcolor = color;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 factor;out vec4 fcolor;void main() {fcolor = color;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;out vec4 fcolor;void main() {fcolor = color;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enablein vec4 color;out vec4 fcolor;void main() {fcolor = color;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];in vec2 atc;in vec4 pos;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);tc = atc;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);color = acolor;factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];in vec4 acolor;in vec4 pos;out vec4 color;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);color = acolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];in vec4 pos;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[144];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc0;out vec2 tc1;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);tc0.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 3.0)]);fucxadd = vfuniforms[int(gl_InstanceID * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 6.0 + 1.0+ 0.1)];factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec2 atc;in vec4 pos;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);tc = atc;fucxadd = vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 2.0 + 1.0+ 0.1)];}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 acolor;in vec2 atc;in vec4 pos;out vec2 tc;out vec4 vcolor;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);vcolor = acolor * vfuniforms[int(gl_InstanceID * 2.0 + 1.0+ 0.1)] + vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1)];tc = atc;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);color = acolor;tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 1.0)]);factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);color = acolor;fucxadd = vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 2.0 + 1.0+ 0.1)];factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 acolor;in vec4 pos;out vec4 color;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);color = acolor;fucxadd = vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 2.0 + 1.0+ 0.1)];}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 1.0)]);factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 pos;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 1.0)]);}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);color = acolor;tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 4.0 + 1.0+ 0.1)];factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc0;out vec2 tc1;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);tc0.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1 + 3.0)]);factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 4.0 + 1.0+ 0.1)];factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];in vec4 pos;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(gl_InstanceID * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 4.0 + 1.0+ 0.1)];}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec2 tc;in vec4 vcolor;out vec4 fcolor;void main() {vec4 c = vcolor;c.a = c.a * texture(tex, tc).r;fcolor = c;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec2 tc;in vec4 vcolor;out vec4 fcolor;void main() {vec4 c = vcolor;c.a = c.a * texture(tex, tc).r;fcolor = c;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec2 tc;in vec4 vcolor;out vec4 fcolor;void main() {vec4 c = vcolor;c.a = c.a * texture(tex, tc).r;fcolor = c;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[3];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 cxmul;out vec4 fcolor;void main() {fcolor = cxmul;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 cxmul;out vec4 fcolor;void main() {fcolor = cxmul;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 cxmul;out vec4 fcolor;void main() {fcolor = cxmul;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[144];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 1.0)]);color = acolor;tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(gl_InstanceID * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 6.0 + 1.0+ 0.1)];factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[144];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc0;out vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 0.0+ 0.1 + 1.0)]);tc0.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 3.0)]);factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[144];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(gl_InstanceID * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 6.0 + 1.0+ 0.1)];factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[144];in vec4 pos;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 2.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(gl_InstanceID * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 6.0 + 1.0+ 0.1)];}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[192];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc0;out vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 8.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 8.0 + 2.0+ 0.1 + 1.0)]);tc0.x = dot(pos, vfuniforms[int(gl_InstanceID * 8.0 + 4.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(gl_InstanceID * 8.0 + 4.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(gl_InstanceID * 8.0 + 4.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(gl_InstanceID * 8.0 + 4.0+ 0.1 + 3.0)]);fucxadd = vfuniforms[int(gl_InstanceID * 8.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 8.0 + 1.0+ 0.1)];factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[48];in vec2 atc;in vec4 pos;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 1.0)]);tc = atc;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[48];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 1.0)]);color = acolor;factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[48];in vec4 acolor;in vec4 pos;out vec4 color;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 1.0)]);color = acolor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[48];in vec4 pos;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 2.0 + 0.0+ 0.1 + 1.0)]);}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[96];in vec2 atc;in vec4 pos;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 1.0)]);tc = atc;fucxadd = vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 4.0 + 1.0+ 0.1)];}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[96];in vec4 acolor;in vec2 atc;in vec4 pos;out vec2 tc;out vec4 vcolor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 1.0)]);vcolor = acolor * vfuniforms[int(gl_InstanceID * 4.0 + 1.0+ 0.1)] + vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1)];tc = atc;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[96];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1 + 1.0)]);color = acolor;tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 1.0)]);factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[96];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 1.0)]);color = acolor;fucxadd = vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 4.0 + 1.0+ 0.1)];factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[96];in vec4 acolor;in vec4 pos;out vec4 color;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 1.0)]);color = acolor;fucxadd = vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(gl_InstanceID * 4.0 + 1.0+ 0.1)];}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[96];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 1.0)]);factor = afactor;}
#version 150#extension GL_ARB_draw_instanced : enableuniform vec4 vfuniforms[96];in vec4 pos;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 0.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(gl_InstanceID * 4.0 + 2.0+ 0.1 + 1.0)]);}
#version 150in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150in vec4 color;in vec4 factor;out vec4 fcolor;void main() {fcolor = color;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150in vec4 color;in vec4 factor;out vec4 fcolor;void main() {fcolor = color;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150in vec4 color;in vec4 factor;out vec4 fcolor;void main() {fcolor = color;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150in vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150in vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150in vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150in vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150in vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150in vec4 color;in vec4 fucxadd;in vec4 fucxmul;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150in vec4 color;out vec4 fcolor;void main() {fcolor = color;fcolor = fcolor;}
#version 150in vec4 color;out vec4 fcolor;void main() {fcolor = color;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150in vec4 color;out vec4 fcolor;void main() {fcolor = color;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform mat4 cxmul;uniform mat4 cxmul1;uniform sampler2D tex[2];in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor_original = texture(tex[int(0.0)], tc0);vec4 fcolor_source   = texture(tex[int(1.0)], tc1);fcolor = (fcolor_original) * ( cxmul) + (fcolor_source) * ( cxmul1);}
#version 150uniform mat4 mvp;in vec2 atc;in vec4 pos;out vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc = atc;}
#version 150uniform mat4 mvp;in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;void main() {gl_Position = (pos) * ( mvp);color = acolor;factor = afactor;}
#version 150uniform mat4 mvp;in vec4 acolor;in vec4 pos;out vec4 color;void main() {gl_Position = (pos) * ( mvp);color = acolor;}
#version 150uniform mat4 mvp;in vec4 pos;void main() {gl_Position = (pos) * ( mvp);}
#version 150uniform mat4 mvp;uniform vec4 texgen[2];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec2 tc;void main() {gl_Position = (pos) * ( mvp);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
#version 150uniform mat4 mvp;uniform vec4 texgen[2];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
#version 150uniform mat4 mvp;uniform vec4 texgen[2];in vec4 pos;out vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);}
#version 150uniform mat4 mvp;uniform vec4 texgen[4];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc0;out vec2 tc1;void main() {gl_Position = (pos) * ( mvp);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);factor = afactor;}
#version 150uniform mat4 vfmuniforms[24];in vec2 atc;in vec4 pos;in float vbatch;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc = atc;}
#version 150uniform mat4 vfmuniforms[24];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;factor = afactor;}
#version 150uniform mat4 vfmuniforms[24];in vec4 acolor;in vec4 pos;in float vbatch;out vec4 color;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);color = acolor;}
#version 150uniform mat4 vfmuniforms[24];in vec4 pos;in float vbatch;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[144];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc0;out vec2 tc1;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 3.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 6.0 + 1.0+ 0.1)];factor = afactor;}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec2 atc;in vec4 pos;in float vbatch;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc = atc;fucxadd = vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 2.0 + 1.0+ 0.1)];}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 acolor;in vec2 atc;in vec4 pos;in float vbatch;out vec2 tc;out vec4 vcolor;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);vcolor = acolor * vfuniforms[int(vbatch * 2.0 + 1.0+ 0.1)] + vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1)];tc = atc;}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 1.0)]);factor = afactor;}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;fucxadd = vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 2.0 + 1.0+ 0.1)];factor = afactor;}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 acolor;in vec4 pos;in float vbatch;out vec4 color;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);color = acolor;fucxadd = vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 2.0 + 1.0+ 0.1)];}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 1.0)]);factor = afactor;}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];in vec4 pos;in float vbatch;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 4.0 + 1.0+ 0.1)];factor = afactor;}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc0;out vec2 tc1;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 3.0)]);factor = afactor;}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 4.0 + 1.0+ 0.1)];factor = afactor;}
#version 150uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];in vec4 pos;in float vbatch;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)];}
#version 150uniform sampler2D srctex;uniform sampler2D tex;in vec2 tc;out vec4 fcolor;void main() {vec4 fchannels = texture(tex, tc);fcolor  = texture(srctex, vec2(fchannels.r, 0.125));fcolor += texture(srctex, vec2(fchannels.g, 0.375));fcolor += texture(srctex, vec2(fchannels.b, 0.625));fcolor += texture(srctex, vec2(fchannels.a, 0.875));}
#version 150uniform sampler2D tex;in vec2 tc;in vec4 vcolor;out vec4 fcolor;void main() {vec4 c = vcolor;c.a = c.a * texture(tex, tc).r;fcolor = c;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec2 tc;in vec4 vcolor;out vec4 fcolor;void main() {vec4 c = vcolor;c.a = c.a * texture(tex, tc).r;fcolor = c;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec2 tc;in vec4 vcolor;out vec4 fcolor;void main() {vec4 c = vcolor;c.a = c.a * texture(tex, tc).r;fcolor = c;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 color;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex,tc);vec4 fcolor1 = color;fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);vec4 diff = fcolor0 - fcolor1;vec4 oneValue = vec4(1.0/255.0, 1.0/255.0, 1.0/255.0, 1.0/255.0 );vec4 ltZero = (sign(diff)+vec4(1.0,1,1.0,1))*-0.25;vec4 partDiff = oneValue * (sign(ltZero)+vec4(1.0,1,1.0,1));vec4 wrapDiff = fract(diff + vec4(1.0,1,1.0,1)) + partDiff;float rgbdiff = sign(dot(wrapDiff.rgb, vec3(1.0,1,1.0)));fcolor = mix( vec4(1.0,1,1.0, wrapDiff.a), vec4(wrapDiff.rgb, 1.0), rgbdiff );}
#version 150uniform sampler2D tex[2];in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor_org = texture(tex[int(0.0)], tc0);vec4 fcolor_src = texture(tex[int(1.0)], tc1);float inAlpha = fcolor_src.a;fcolor.a = 1.0;fcolor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / fcolor.a);}
#version 150uniform sampler2D tex[2];in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor_org = texture(tex[int(0.0)], tc0);vec4 fcolor_src = texture(tex[int(1.0)], tc1);float inAlpha = fcolor_src.a;fcolor.a = inAlpha;fcolor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / fcolor.a);}
#version 150uniform sampler2D tex[2];in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor_org = texture(tex[int(0.0)], tc0);vec4 fcolor_src = texture(tex[int(1.0)], tc1);float inAlpha = fcolor_src.a;fcolor.a = mix(inAlpha, 1.0, fcolor_org.a);fcolor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / fcolor.a);}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[2];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc0;in vec2 tc1;out vec4 fcolor;void main() {vec4 fcolor0 = texture(tex[int(0.0)], tc0);vec4 fcolor1 = texture(tex[int(1.0)], tc1);fcolor = mix(fcolor1, fcolor0, factor.r);fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec2 tc0;in vec2 tc1;in vec2 tc2;out vec4 fcolor;void main() {vec4 fcolor_org = texture(tex[int(0.0)], tc0);vec4 fcolor_src = texture(tex[int(1.0)], tc1);vec4 fcolor_alp = texture(tex[int(2.0)], tc2);float inAlpha = fcolor_src.a * fcolor_alp.a;fcolor.a = 1.0;fcolor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / fcolor.a);}
#version 150uniform sampler2D tex[3];in vec2 tc0;in vec2 tc1;in vec2 tc2;out vec4 fcolor;void main() {vec4 fcolor_org = texture(tex[int(0.0)], tc0);vec4 fcolor_src = texture(tex[int(1.0)], tc1);vec4 fcolor_alp = texture(tex[int(2.0)], tc2);float inAlpha = fcolor_src.a * fcolor_alp.a;fcolor.a = inAlpha;fcolor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / fcolor.a);}
#version 150uniform sampler2D tex[3];in vec2 tc0;in vec2 tc1;in vec2 tc2;out vec4 fcolor;void main() {vec4 fcolor_org = texture(tex[int(0.0)], tc0);vec4 fcolor_src = texture(tex[int(1.0)], tc1);vec4 fcolor_alp = texture(tex[int(2.0)], tc2);float inAlpha = fcolor_src.a * fcolor_alp.a;fcolor.a = mix(inAlpha, 1.0, fcolor_org.a);fcolor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / fcolor.a);}
#version 150uniform sampler2D tex[3];in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150uniform sampler2D tex[3];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 factor;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.a *= factor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform sampler2D tex[4];in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {float c0 = float((texture(tex[int(0.0)], tc).r - 16./255.) * 1.164);float U0 = float(texture(tex[int(1.0)], tc).r - 128./255.);float V0 = float(texture(tex[int(2.0)], tc).r - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture(tex[int(3.0)], tc).r;fcolor = c;fcolor = fcolor * fucxmul + fucxadd;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor) * (cxmul) + cxadd * (fcolor.a + cxadd.a);fcolor = fcolor;}
#version 150uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor) * (cxmul) + cxadd * (fcolor.a + cxadd.a);fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor) * (cxmul) + cxadd * (fcolor.a + cxadd.a);fcolor.a *= factor.a;fcolor = fcolor;}
#version 150uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;in vec4 factor;in vec2 tc;out vec4 fcolor;void main() {fcolor = texture(tex,tc);fcolor = (fcolor) * (cxmul) + cxadd * (fcolor.a + cxadd.a);fcolor.a *= factor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;in vec2 atc;in vec4 pos;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc = atc;fucxadd = cxadd;fucxmul = cxmul;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;in vec4 acolor;in vec2 atc;in vec4 pos;out vec2 tc;out vec4 vcolor;void main() {gl_Position = (pos) * ( mvp);vcolor = acolor * cxmul + cxadd;tc = atc;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = (pos) * ( mvp);color = acolor;fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;in vec4 acolor;in vec4 pos;out vec4 color;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = (pos) * ( mvp);color = acolor;fucxadd = cxadd;fucxmul = cxmul;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[2];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( mvp);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[2];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[2];in vec4 pos;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[4];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc0;out vec2 tc1;void main() {gl_Position = (pos) * ( mvp);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];in vec2 atc;in vec4 pos;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc = atc;fucxadd = cxadd;fucxmul = cxmul;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];in vec4 acolor;in vec2 atc;in vec4 pos;out vec2 tc;out vec4 vcolor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);vcolor = acolor * cxmul + cxadd;tc = atc;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];in vec4 acolor;in vec4 pos;out vec4 color;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;fucxadd = cxadd;fucxmul = cxmul;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[2];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[2];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[2];in vec4 pos;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;}
#version 150uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[4];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc0;out vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
#version 150uniform vec4 cxmul;out vec4 fcolor;void main() {fcolor = cxmul;fcolor = fcolor;}
#version 150uniform vec4 cxmul;out vec4 fcolor;void main() {fcolor = cxmul;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 cxmul;out vec4 fcolor;void main() {fcolor = cxmul;fcolor.rgb = vec3(fcolor.a, fcolor.a, fcolor.a);fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);float  i = 0.0;for (i = -fsize.x; i <= fsize.x; i++){{color += textureLod(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.fcolor = color * fsize.w;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);float  i = 0.0;for (i = -fsize.x; i <= fsize.x; i++){{color += textureLod(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.fcolor = color * fsize.w;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.fcolor = color * fsize.w;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.fcolor = color * fsize.w;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor = scolor * clamp(fcolor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;fcolor -= knockout;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor = scolor * clamp(fcolor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;fcolor -= knockout;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor = scolor * clamp(fcolor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor = scolor * clamp(fcolor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - fcolor.a) * fsize.z, 0.0, 1.0);fcolor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;fcolor -= knockout;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - fcolor.a) * fsize.z, 0.0, 1.0);fcolor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;fcolor -= knockout;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - fcolor.a) * fsize.z, 0.0, 1.0);fcolor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - fcolor.a) * fsize.z, 0.0, 1.0);fcolor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.fcolor = color * fsize.w;fcolor = scolor * clamp(fcolor.a * fsize.z, 0.0, 1.0);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.fcolor = color * fsize.w;fcolor = scolor * clamp(fcolor.a * fsize.z, 0.0, 1.0);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - fcolor.a - fcolor.r) * base.a;fcolor = (scolor * fcolor.a + scolor2 * fcolor.r + base* (1.0 - fcolor.a - fcolor.r)) * base.a;fcolor -= knockout;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - fcolor.a - fcolor.r) * base.a;fcolor = (scolor * fcolor.a + scolor2 * fcolor.r + base* (1.0 - fcolor.a - fcolor.r)) * base.a;fcolor -= knockout;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - fcolor.a - fcolor.r) * base.a;fcolor = (scolor * fcolor.a + scolor2 * fcolor.r + base* (1.0 - fcolor.a - fcolor.r)) * base.a;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - fcolor.a - fcolor.r) * base.a;fcolor = (scolor * fcolor.a + scolor2 * fcolor.r + base* (1.0 - fcolor.a - fcolor.r)) * base.a;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - fcolor.a - fcolor.r);fcolor = (scolor * fcolor.a + scolor2 * fcolor.r + base* (1.0 - fcolor.a - fcolor.r));fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - fcolor.a - fcolor.r);fcolor = (scolor * fcolor.a + scolor2 * fcolor.r + base* (1.0 - fcolor.a - fcolor.r));fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;fcolor = ((scolor * fcolor.a + scolor2 * fcolor.r)*(1.0-base.a) + base);fcolor -= knockout;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;fcolor = ((scolor * fcolor.a + scolor2 * fcolor.r)*(1.0-base.a) + base);fcolor -= knockout;fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;fcolor = ((scolor * fcolor.a + scolor2 * fcolor.r)*(1.0-base.a) + base);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;vec4 base = textureLod(srctex, tc * srctexscale.xy, 0.0);fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;fcolor = ((scolor * fcolor.a + scolor2 * fcolor.r)*(1.0-base.a) + base);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);fcolor = (scolor * fcolor.a + scolor2 * fcolor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D tex;uniform vec4 texscale;in vec4 fucxadd;in vec4 fucxmul;in vec2 tc;out vec4 fcolor;void main() {fcolor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += textureLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += textureLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.fcolor = color * fsize.w;fcolor.ar = clamp((1.0 - fcolor.ar * fsize.z) - (1.0 - fcolor.ra * fsize.z), 0.0, 1.0);fcolor = (scolor * fcolor.a + scolor2 * fcolor.r);fcolor = (fcolor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;fcolor += fucxadd * fcolor.a;fcolor.rgb = fcolor.rgb * fcolor.a;fcolor = fcolor;}
#version 150uniform vec4 mvp[2];in vec2 atc;in vec4 pos;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc = atc;}
#version 150uniform vec4 mvp[2];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;factor = afactor;}
#version 150uniform vec4 mvp[2];in vec4 acolor;in vec4 pos;out vec4 color;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;}
#version 150uniform vec4 mvp[2];in vec4 pos;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);}
#version 150uniform vec4 mvp[2];uniform vec4 texgen[2];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
#version 150uniform vec4 mvp[2];uniform vec4 texgen[2];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
#version 150uniform vec4 mvp[2];uniform vec4 texgen[2];in vec4 pos;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);}
#version 150uniform vec4 mvp[2];uniform vec4 texgen[4];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc0;out vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);factor = afactor;}
#version 150uniform vec4 mvp[2];uniform vec4 texgen[4];in vec4 pos;out vec2 tc0;out vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);}
#version 150uniform vec4 mvp[2];uniform vec4 texgen[6];in vec4 pos;out vec2 tc0;out vec2 tc1;out vec2 tc2;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);tc2.x = dot(pos, texgen[int(4.0)]);tc2.y = dot(pos, texgen[int(5.0)]);}
#version 150uniform vec4 vfuniforms[144];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 6.0 + 1.0+ 0.1)];factor = afactor;}
#version 150uniform vec4 vfuniforms[144];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc0;out vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1 + 1.0)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 3.0)]);factor = afactor;}
#version 150uniform vec4 vfuniforms[144];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 6.0 + 1.0+ 0.1)];factor = afactor;}
#version 150uniform vec4 vfuniforms[144];in vec4 pos;in float vbatch;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 6.0 + 2.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(vbatch * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(vbatch * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 6.0 + 1.0+ 0.1)];}
#version 150uniform vec4 vfuniforms[192];in vec4 afactor;in vec4 pos;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc0;out vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 2.0+ 0.1 + 1.0)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 3.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 8.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 8.0 + 1.0+ 0.1)];factor = afactor;}
#version 150uniform vec4 vfuniforms[48];in vec2 atc;in vec4 pos;in float vbatch;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);tc = atc;}
#version 150uniform vec4 vfuniforms[48];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 1.0)]);color = acolor;factor = afactor;}
#version 150uniform vec4 vfuniforms[48];in vec4 acolor;in vec4 pos;in float vbatch;out vec4 color;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);color = acolor;}
#version 150uniform vec4 vfuniforms[48];in vec4 pos;in float vbatch;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);}
#version 150uniform vec4 vfuniforms[96];in vec2 atc;in vec4 pos;in float vbatch;out vec4 fucxadd;out vec4 fucxmul;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);tc = atc;fucxadd = vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)];}
#version 150uniform vec4 vfuniforms[96];in vec4 acolor;in vec2 atc;in vec4 pos;in float vbatch;out vec2 tc;out vec4 vcolor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);vcolor = acolor * vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)] + vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];tc = atc;}
#version 150uniform vec4 vfuniforms[96];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 1.0)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);factor = afactor;}
#version 150uniform vec4 vfuniforms[96];in vec4 acolor;in vec4 afactor;in vec4 pos;out vec4 color;out vec4 factor;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);color = acolor;fucxadd = vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 4.0 + 1.0+ 0.1)];factor = afactor;}
#version 150uniform vec4 vfuniforms[96];in vec4 acolor;in vec4 pos;in float vbatch;out vec4 color;out vec4 fucxadd;out vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);color = acolor;fucxadd = vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)];}
#version 150uniform vec4 vfuniforms[96];in vec4 afactor;in vec4 pos;out vec4 factor;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);factor = afactor;}
#version 150uniform vec4 vfuniforms[96];in vec4 pos;in float vbatch;out vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);}
$
$@
$IMECandidateListFont
$ORIGIN
$P
$tI
$version
%
%-120s
%-120s - %s
%.10g
%.11g
%.12g
%.13g
%.14g
%.1g
%.2g
%.3g
%.4g
%.5g
%.6g
%.7g
%.8g
%.9g
%02u:%02u:%02u
%3d %3d %3d %3d %3d %3d %3d %3d
%4u %4u %4u %4u %4u %4u %4u %4u
%50.50s: %2.2d bits == '%s'
%@
%A %b %d
%P
%X
%cHasMetadata
%cUseActionScript3
%cUseNetwork
%d %d %d %d
%d %s %d %02d:%02d:%02d +0000
%d total counted strings.
%d%s
%d.%d
%d:00
%f %f %f %f
%g %g %g %g
%hd
%hu
%i %i %i %i
%i Element handles (Count: %i):
%ld
%ld%c
%lg
%lld
%llu
%ls [wstring, len = %d]
%p Depth = %d
%s
%s ...<truncated>
%s allocation count overflow
%s allocation count overflow( %llu > %llu )
%s%d
%s%s%s.%s
%s,
%s, CallFrame('%s') - unknown frame
%s.attachAudio() needs one Argument
%s.attachBitmap() failed - depth (%d) must be >= 0
%s.attachBitmap() failed - no image set in BitmapData.
%s.attachBitmap() failed - the argument is not a BitmapData.
%s.attachMovie("%s") failed - depth (%d) must be >= 0
%s.attachMovie() failed - "%s" is not a movieclip.
%s.attachMovie() failed - export name "%s" is not found.
%s.removeMovieClip() failed - depth must be >= 0
%s.setImageSubstitutions() failed for #%d element - 'image' is not specified or not a BitmapData
%s.setImageSubstitutions() failed for #%d element - image has one zero dimension
%s.setImageSubstitutions() failed for #%d element - length of subString should not exceed 15 characters
%s.setImageSubstitutions() failed for #%d element - subString should be specified
%s.setImageSubstitutions() failed: parameter should be either 'null', object or array
%s/%s
%s/%s.swf
%s/%sfontmapping.cfg
%s/fontlib_en.swf
%s/images/avatars/default_184.png
%s/images/avatars/default_32.png
%s/images/avatars/default_64.png
%s: %s
%s: string format requested %d chars
%s::CreateNewObject returned NULL during creation of %s class instance.
%s=
%sGFxShaders-%08x.cache
&
&#x9;
&#xA;
&#xD;
&ACC=f
&AE=f
&AR=1.0
&AVD=f
&COL=color
&DEB=f
&DP=72
&EV=f
&IME=
&L=en
&LFD=f
&M=
&MP3=f
&MP3=t
&OS=
&PR=f
&PT=External
&R=
&SA=f
&SA=t
&SB=f
&SP=f
&SV=f
&V=
&VE=f
&WD=f
&amp;
&apos;
&gt;
&lt;
&nbsp;
&quot;
'
(
( def. "%s" )
()
(*%s*),
(*MARK) must have an argument
(*VERB) not recognized
(>q
(?R or (?[+-]digits must be followed by )
(@
(P
(a=
(knN
(none)
(redMultiplier=
(scolor * color.a + scolor2 * color.r)
(scolor * color.a)
(truncated)
)
)!@#$%^&*(
)@
)P
*
*         +| {0:4.4} {1:4.4}|| {2:4.4} {3:4.4}|| {4:4.4} {5:4.4}|| {6:4.4} {7:4.4}|
* (move)
* (replace)
*** Scaleform Mutex Disabled!
*** Scaleform Mutex Enabled!
*** no tag loader for type %d
*.*
*0"Z
*::
*@
*Bytes@%p*
*N9Scaleform3GFx3AS212_GLOBAL__N_119CandidateListLoaderE
*P
*ZN12CScaleformUI8ShutdownEvE25CRender2DShutdownCallback
*ZN12CScaleformUI8ShutdownEvE26CRenderHALShutdownCallback
*ZN9Scaleform3GFx16MovieBindProcess13FinishBindingEvE16ImagePackVisitor
*ZN9Scaleform3GFx3AS212SharedObject18ComputeSizeInBytesEPNS1_11EnvironmentEE17DataSizeEstimator
*ZN9Scaleform3GFx3AS212SharedObject5FlushEPNS1_11EnvironmentEPNS0_19SharedObjectVisitorEE10DataWriter
*ZN9Scaleform3GFx3AS213AsBroadcaster16BroadcastMessageEPNS1_11EnvironmentEPNS1_15ObjectInterfaceERKNS0_8ASStringEiiE19LocalInvokeCallback
*ZN9Scaleform3GFx3AS213GlobalContext4InitEPNS0_9MovieImplEE13MemberVisitor
*ZN9Scaleform3GFx3AS213LoadVarsProto8ToStringERKNS1_6FnCallEE13MemberVisitor
*ZN9Scaleform3GFx3AS215MovieClipObject12Set__proto__EPNS1_15ASStringContextEPNS1_6ObjectEE13MemberVisitor
*ZN9Scaleform3GFx3AS216ExecutionContext15EnumerateOpCodeEiE18EnumerateOpVisitor
*ZN9Scaleform3GFx3AS221TextFieldCtorFunction11GetFontListERKNS1_6FnCallEE12FontsVisitor
*ZN9Scaleform3GFx3AS29AvmSprite17InitObjectMembersERKNS1_6FnCallEE11InitVisitor
*ZN9Scaleform3GFx3AS2L24GAS_GlobalASSetPropFlagsERKNS1_6FnCallEE13MemberVisitor
*ZN9Scaleform3GFx3AS37Classes7fl_text4Font14enumerateFontsERNS1_4SPtrINS1_9Instances2fl5ArrayEEEbE12FontsVisitor
*ZN9Scaleform3GFx3AS39MovieRoot11UnloadMovieEPNS1_9Instances10fl_display6LoaderEbbE17TextFormatVisitor
*ZN9Scaleform3GFx3AS39MovieRoot8CheckAvmEvE6Loader
*ZN9Scaleform3GFx6Stream20ReadStringWithLengthEPNS_6StringEE12StringReader
*ZNK9Scaleform3GFx23AS2ValueObjectInterface12VisitMembersEPvPNS0_5Value15ObjectInterface10ObjVisitorEbE12VisitorProxy
*ZNK9Scaleform3GFx3AS29AvmSprite12VisitMembersEPNS1_15ASStringContextEPNS1_15ObjectInterface13MemberVisitorEjPKS5_E7Visitor
+
+@
+Infinity
+OQv
+P
,
, '
, alphaMultiplier=
, alphaOffset=
, b=
, blueMultiplier=
, blueOffset=
, c=
, d=
, greenMultiplier=
, greenOffset=
, height=
, redOffset=
, tx=
, ty=
, width=
, y=
, z=
,@
,P
-
-- sprite END, char id = %d --
-------------- %s = %s
---------------Tag type = %d, Tag length = %d
---------------Tag type = %d, Tag length = %d, offset = %d
---enumerate - Push: %s
---enumerate - Push: NULL
-->
-./
-> %s
-@
-Infinity
-P
-as2
-forcepack
-gl_disable_binary_shaders
-ignoreswf
-newlayout
-noscaleform
-oldlayout
-sfmutex
-sfstats
-sse2
-sse3
-sse4
.
...
../public/ordered_constructor.h
../public/tier1/utlleanvector.h
../public/tier1/utllinkedlist.h
../public/tier1/utlrbtree.h
../public/tier2/fieldpath.h
.Ee
.forcepack
.prototype
.pvr
.sif
.tga
.vtex_c
.vtf
/
/>
/P8i
/content/
/game/
0
0 = off, 1 = on
01234567
0123456789
0123456789*+
0123456789ABCDEF
0123456789abcdef
0@
0A
0P
0X
0x%016llX
0x%p
0x%p, "%s" %s
0x{0:x}
0x{0:x}-0x{1:x}
1
1.2.7
1.5.13
1.5.2
10CMovieSlot
10ConCommand
10IAppSystem
11CCallResultI22CScaleformImageCreator22HTTPRequestCompleted_tE
11CCallResultI22CScaleformImageCreator32RemoteStorageDownloadUGCResult_tE
12CEmptyConVar
12CScaleformUI
12CThreadEvent
12IScaleformUI
13CCallbackBase
13CCallbackImplILi12EE
13CCallbackImplILi20EE
13ISFTextObject
14CBaseAppSystemI12IScaleformUIE
14ConCommandBase
15CTier0AppSystemI12IScaleformUIE
15CTier1AppSystemI12IScaleformUILi0EE
15CTier2AppSystemI12IScaleformUILi0EE
15CTier3AppSystemI12IScaleformUILi0EE
16CDefaultAccessor
16CInitializeHALGL
16SFTextObjectImpl
17CScaleformLogging
17FlashArrayVisitor
18CCountedStringPool
18CScaleformSysAlloc
18CUtlCharConversion
18FlashObjectVisitor
19CThreadCommandQueue
19IKeyValuesErrorSpew
19ISchemaSearchTesterIPK16CSchemaClassInfoE
19TextBoxArrayVisitor
1@
1P
2
20CPostConnectCallback
20CScaleformFileOpener
20CScaleformMemoryFile
21CUtlCStringConversion
21IDeviceThreadCallback
21IKeyValuesDumpContext
22CAmpAppControlCallback
22CRenderDeviceCallbacks
22CScaleformImageCreator
22CSchemaInstallCallback
22Scaleform_GlueUserData
23CScaleformMovieUserData
23CScaleformTextClipboard
23CSplitScreenAddedConVar
23IConCommandBaseAccessor
24CScaleformCallbackHolder
24CriMvFileReaderInterface
256 levels of recursion is reached
26CDefaultKeyValuesErrorSpew
26IRenderDeviceEventListener
27CScaleformTranslatorAdapter
27CThreadCommandQueueCallback
27IKeyValuesDumpContextAsText
29CKeyValuesDumpContextAsDevMsg
29Scaleform_GlueFunctionHandler
2@
2P
3
31IForceVirtualInheritanceHandler
32CScaleformFunctionHandlerAdapter
33CScaleformUIFunctionHandlerObject
3@
3C
3P
3rdParty/expat-2.1.0/lib/xmlparse.c
4
4.2.23
4@
4C
4P
5
5@
5P
6
6ConVar
7
7IConVar
8
8@
8C%0.f
8CFmtStrNILi256ELb0EE
8P
8b  16-May-2010
9
9@
9CBaseSlot
9CCallbackI22CScaleformImageCreator19AvatarImageLoaded_tLb0EE
9CCallbackI22CScaleformImageCreator20PersonaStateChange_tLb0EE
9P
:
: {0}.
:+<_>?~
:./
:/
:1X:
:@
:P
:X1:
;
;=,-./`
;@
;P
<
<!--
</
</A>
</B>
</FONT>
</I>
</U>
<< NULL >>
<=
<?
<@
<A HREF="{0}">
<B>
<FONT
<I>
<IMG SRC="
<NULL>
<P
<TEXTFORMAT
<U>
<bad type>
<disasm is disabled>
<invalid interface>
<invalid>
<noname>
<null>
<undefined>
<unknown>
=
==
========== MOVIE VIEW FUNCTIONS FOR %s ======
========== RENDERER FUNCTIONS ===============
=@
=P
>
>!h
><
></TEXTFORMAT>
>=
>jm
?
?"N
?(3w
?>
???
?N9Scaleform6Render14MatrixPoolImpl16HMatrixConstantsE
?Vs
@
@&LH
@(
@0
@33*@
@@
@A
@C-- action record:
@L
@P
@initialize@
@keyPress@
@wKA
A
A stream must start with a complete key frame
A':
A8
ABCDEFGHIJKLMNOPQRSTUVWXYZ
ABI version mismatch
ACCEPT
ACTIONSCRIPT2
ACTIONSCRIPT3
ACTIVITY
ADDED
ADDED_TO_STAGE
ADVANCED
ALIGN
ALIGN="
ALIGN_TYPE is wrong, please fix
ALPHA="#{0:X:.2}"
ALPHANUMERIC_FULL
ALPHANUMERIC_HALF
ALTERNATE
ALWAYS
AMF0
AMF3
ANSI
ANSI_X3.4-1968
ANSI_X3.4-1986
ANY)
ANYCRLF)
APPLICATION
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!
AS Instructions
AS3 VM
AS3 socket buffer
ASBinaryData
ASCII conversion buffer too small
ASSetPropFlags
ASString
ASYNC_ERROR
ASnative
ATI1N
ATI2N
ATI_DST16
ATI_DST24
ATTLIST
AT_TARGET
AUTO
AVM1Movie
AbcConstPool
AccessibilityImplementation
AccessibilityProperties
Action buffer dict length exceeded
ActionScript
ActionScript Memory leaks in movie '%s', including %d string nodes
ActionScript version mismatched between main and import '%s' files
ActionScriptMismatch
ActionScriptVersion
ActivityEvent
AddFrameName(%d, '%s') -- frame is out of range (frameCount = %d; skipping
AddFrameName(%d, '%s') -- frame name already assigned to frame %d; overriding
AddInputConsumer
AddKeyInputConsumer
AddMouseInputConsumer
Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d
AdvanceSlot
AllocCount
AllocInternal
Allocated
Allow scaleform log spew
Amp
An extra frame is found for sprite id = %d, framecnt = %d, actual frames = %d
An image with resource id %d is not found in resource table.
AnalogStickNavigationDisabled
AnimGraphEditorUtils001
AnimationSystemUtils_001
AnimationSystem_001
AntiAliasType
Any
AppControl
AppLifecycleEvent
Application built with libpng-%.20s but running with %.20s
Application must supply a known background gamma
Application transferred too few scanlines
Application transferred too many scanlines
ApplicationDomain
Applying FontMap: "
Apr
Arabic
ArgumentError
Arial
Arithmetic table 0x%02x was not defined
Armenian
Array.sort - sorting failed, check your sort functor
AsBroadcaster
Ascent = %d, Descent = %d, Leading = %d
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetSystem001
AssetSystemTest001
AsyncErrorEvent
At marker 0x%02x, recovery action %d
Attaching a bitmap with class '%s' failed
Attaching a font with class '%s' failed
Attempt to set buffer size beyond max ignored
Attempt to write read-only property %s.%s, ignored
Aug
AutoReloadChangedFlashFiles
AutoSize = %d, Selectable = %d, Border = %d, Html = %d, UseDeviceFont = %d
Avatar not present, requesting from Steam
Avestan
AvmSprite::SpriteGotoAndPlay needs one arg
AvmSprite::SpriteGotoAndStop needs one arg
B
B(
B0
BACKQUOTE
BACKSLASH
BACKSPACE
BASELINE
BC6H
BC7
BEST
BEVEL
BGR565
BGR888_BLUESCREEN
BGRA1010102
BGRA4444
BGRA5551
BGRA8888_LINEAR
BGRX8888_LINEAR
BIG_ENDIAN
BINARY
BL
BLOCKINDENT
BLOCKINDENT="{0}"
BLUE
BOLD
BOLD_ITALIC
BOTTOM_LEFT
BOTTOM_RIGHT
BP
BSR_ANYCRLF)
BSR_UNICODE)
BUBBLING_PHASE
BUTTON_CLICK_MAJOR
BUTTON_CLICK_MINOR
BUTTON_MOUSE_OVER
Backing store not supported
Bad expression operator: '%c%c', expected C style boolean expression operator.
Bad expression syntax: '%s', expected a single matching pair of enclosing braces.
Bad expression token: %c
BakedLODBuilderMgr001
Balinese
Bamum
Batak
Batches
BeginFrame
BeginScene
BenchmarkService001
Bengali
BinaryProperties_GetValue
Bind
BindRenderTarget
BitmapChar = %d
BitmapData::LoadBitmap: LoadMovieImageCallback failed to load image "%s"
BitmapDataChannel
BitmapFilter
BitmapFilterQuality
BitmapFilterType
Bitstream not supported by this decoder
Bitstream required feature not supported by this decoder
BlendMode
Bogus DAC index %d
Bogus DAC value 0x%x
Bogus DHT index %d
Bogus DQT index %d
Bogus Huffman table definition
Bogus JPEG colorspace
Bogus buffer control mode
Bogus input colorspace
Bogus marker length
Bogus sampling factors
Bogus virtual array access
Bold
Bookkeeping
Bopomofo
Brahmi
Braille
Branch destination %d is out of action buffer bounds!
Break
Buffer error in compressed datastream in %s chunk
Buffer passed to JPEG library is too small
Buginese
Buhid
ButtonDef::Read - Audio library is not set. Skipping sound definitions.
C
CAMERA
CANCEL
CAPSLOCK
CAPS_LOCK
CAPTURING_PHASE
CASEINSENSITIVE
CCIR601 sampling not implemented yet
CCommand::Tokenize: Encountered command which overflows the argument buffer.. Clamped!
CCommand::Tokenize: Encountered command which overflows the tokenizer buffer.. Skipping!
CDATA
CDATA[CDATA[CDATA[
CFiber::AllocPooledFiber(CFiber::SizeBuckets_t, unsigned long)
CFiber::ReachedZeroReferences()
CFiber::SetThreadFiberMemoryRange(unsigned long)
CHINESE
CLAMP
CLASS
CLOSE
CLOSING
CMemAllocSystemInitialize
COLOR="#{0:X:.6}"
COLORCORRECTION_VERSION_1
COMMA
COMMAND
COMMIT
CONNECT
CONTEXT_MENU
CONTROL
CR)
CRC error
CRLF)
CRT
CSMSettings
CSMTextSettings, id = %d
CScaleformCallbackHolder CUtlMemoryPoolMT
CScaleformFileOpener::Open( %s, 0x%8.8x )
CScaleformImageCreator::Steam_OnImageDownloadComplete: No image delegate for received image url
CScaleformImageCreator::Steam_OnImageDownloadComplete: Status code %d for URL: %s
CScaleformImageCreator::Steam_OnImageDownloadComplete: phantom call
CScaleformUI::Value_GetMember: trying to find a member by name (%s) under a null object
CThreadEvent::CThreadEvent(bool)
CThreadEvent::Set()
CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
CThreadRWLock::LockForWrite()
CThreadRWLock::UnlockWrite()
CThreadRWLock::WaitForRead()
CThreadSpinRWLock::LockForRead()
CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
CThreadSpinRWLock::UnlockRead()
CThreadSpinRWLock::UnlockWrite()
CThreadSyncObject::WaitImpl(unsigned int)
CThreadSyncObject::~CThreadSyncObject()
CURSOR_CHANGE
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlLinkedList overflow! (exhausted index range)
CUtlLinkedList overflow! (exhausted memory allocator)
CUtlMemoryPoolBase
CUtlMemoryPoolBase: Cannot specify 0 elements to grow each time!
CUtlRBTree overflow with %u elements!
CW
CWE
CXXABI_1.3
Call stack
Call to NULL read function
Call to NULL write function
CallFrame
CallFrame('%d') - unknown frame
CallFunction - '%s' is not a function
CallFunction - attempt to call invalid function
CallMethod "as a function" - pushed object is not a function object
CallMethod - '%s' is not a method
CallMethod - '%s' on invalid object.
CallMethod - '%s.%s' is not a method
CallMethod - can't find method %s
CallMethod - can't find method %s.%s
Called GetLargeFriendAvatar for %u
Can't add Average filter after starting
Can't add Paeth filter after starting
Can't add Up filter after starting
Can't create object with unknown class '%s'
Can't create object with unknown ctor
Can't create or decode image.
Can't discard critical data on CRC error
Can't dispatch '%s' - exception is not cleared
Can't extend the unknown class.
Can't extend with unknown super class.
Can't find method '%s' to invoke.
Can't find method '%s.%s' to invoke.
Can't load image %s - appropriate reader is not installed.
Can't open %s
Can't read completely ABCData at offset %d
Can't set both read_data_fn and write_data_fn in the same structure
Can't write sCAL (buffer too small)
Can't write tRNS with an alpha channel
Canadian_Aboriginal
Canceled
Cannot quantize more than %d color components
Cannot quantize to fewer than %d colors
Cannot quantize to more than %d colors
Cannot transcode due to multiple use of quantization table %d
Capabilities
CapsStyle
Carian
Catch
Caution: quantization tables are too coarse for baseline JPEG
Cc
Cf
Cham
ChangeCallbackOnChange
ChangeCallbackOnChangeOrCreate
CharCodeStrings
CharDefs
CharId = %d  depth = %d  mat =
CharId = %d, Depth = %d
Cherokee
Child Footprint
Child Heaps
Class: %s, Script %s
ClassTraits
ClipDepth = %d
Closed temporary file %s
ClrDsp
ClrLn
Cn
Co
CodePage = %s, Italic = %d, Bold = %d
Codec does not implement requested capability
ColorMatrixFilter
CommandLine
Common
Component %d: %dhx%dv q=%d
Component %d: dc=%d ac=%d
Component index %d: mismatching sampling ratio %d:%d, %d:%d, %c
Compressed
Compression window is being reset to 512
ConMsg(char const*, ...)
ConVar(%s) defined with infinite float value (%s)
ConVarRef %s doesn't point to an existing ConVar
Conditional Error: %s
ConfigurationSystem_001
ConnectInterfaces
ContextMenuBuiltInItems
ContextMenuClipboardItems
ContextMenuEvent
ContextMenuItem
ConvolutionFilter
Coptic
Copyright (C) 2010, Thomas G. Lane, Guido Vollbeding
Corrupt JPEG data: %u extraneous bytes before marker 0x%02x
Corrupt JPEG data: bad Huffman code
Corrupt JPEG data: bad arithmetic code
Corrupt JPEG data: found marker 0x%02x instead of RST%d
Corrupt JPEG data: premature end of data segment
Corrupt frame detected
Corrupted file %s, kerning table of the font '%s' is longer than tagLength.
Corrupted shape detected in file %s
Could not read tag DefineCompactedFont. Broken gfx file.
Counters
CreateImageFromUGCFile called with an unknown image format
CreateImageFromUGCFile failed to find ImageFileHandlerRegistry
CreateInterface
CreateRawImageFromSteamAvatar %d
CreateRawImageFromSteamAvatar %d failed
CreateRawImageFromSteamAvatar( %d ) returned width %d height %d
Creating new CSteamAvatar entry for %u
Creating new ImageDelegate entry for %u size %d
Cs
Cuneiform
CurrentState
Cypriot
Cyrillic
D
D(
D0
D15S1
D16
D16_SHADOW
D24FS8
D24X4S4
D24X8
D24X8_SHADOW
D32
DAPI AttachMovie() depth requested (%d) for symbol "%s" is too large. Using next highest index (%d) instead.
DARKEN
DARK_COLOR
DCT coefficient out of range
DCT scaled block size %dx%d not supported
DEACTIVATE
DEFAULT
DEFINE group contains more than one branch
DELETEKEY
DEMO
DESCENDING
DEVICE
DIFFERENCE
DISPLAYING
DISPLAY_STATUS_WINDOW
DOCTYPE
DOUBLE_CLICK
DP
DXT1
DXT1_ONEBITALPHA
DXT3
DXT5
DXT5"
DXT5_NM
DYNAMIC
Data error in compressed datastream in %s chunk
DataEvent
Debug HUD
Debug Memory
Debug Tracker
DebugInfo
DebugTextureInfo001
Dec
Decompression Error
Decompression error
DefBitsLossless2: tagInfo.TagType = %d, id = %d, fmt = %d, w = %d, h = %d
Default image loader failed to load '%s'
Define Arithmetic Table 0x%02x: 0x%02x
Define Huffman Table 0x%02x
Define Quantization Table %d  precision %d
Define Restart Interval %u
DefineBinaryData: CharId = %d
DefineExternalGradientImage: tagInfo.TagType = %d, id = 0x%X, fmt = %d, name = '%s', size = %d
DefineExternalImage: tagInfo.TagType = %d, id = 0x%X, fmt = %d, name = '%s', exp = '%s', w = %d, h = %d
DefinitionError
DelChr
DelLn
Delete
Deprecated tag 1004 - DefineGradientMapLoader encountered, ignored
Deseret
DevMsg
DevMsg(char const*, ...)
Devanagari
DictLookup(%d) is out of bounds
Dictionary
Didn't expect more than one scan
DisableAnalogStickNavigation
DisplacementMapFilter
DisplacementMapFilterMode
Display
DisplayObjContainer::ReplaceDisplayObject() - unknown cid = %d
DisplayObjectContainer
DisplayObjectEx
DistributeEvent
DoAbcLoader: flags = 0x%X, name = '%s', dataSize = %d
Don't know how to export Resource '%s'
DotaCardGameClient_001
Down
DrawProcessedComplexMeshes
DrawProcessedPrimitive
DrawText Manager
DrawText::ProcessImageTags: can't find a resource for export name '%s'
DrawText::ProcessImageTags: can't find a resource since there is no moviedef
DrawText::ProcessImageTags: can't load the image '%s'
DrawableCompare
DrawableCopyPixels
DrawableCxform
DrawableMerge
DrawablePaletteMap
DropShadowFilter
Duplicate PLTE chunk
Duplicate bKGD chunk
Duplicate cHRM chunk
Duplicate gAMA chunk
Duplicate hIST chunk
Duplicate iCCP chunk
Duplicate oFFs chunk
Duplicate pCAL chunk
Duplicate pHYs chunk
Duplicate sBIT chunk
Duplicate sCAL chunk
Duplicate sRGB chunk
Duplicate tIME chunk
Duplicate tRNS chunk
Dynamic Granularity
E
EDGEAA_DISABLE
EDGEAA_INHERIT
EDGEAA_OFF
EDGEAA_ON
ELEMENT
ELEMENT_NODE
EMBEDDED
EMPTY
EMPTY - ok for slot zero only!
ENTER_FRAME
ENTITIES
ENTITY
EQUAL
ERASE
ESCAPE
EW
EXACT_FIT
EXITING
EXIT_FRAME
EXPORTSYSTEM_INTERFACE_VERSION_001
EXT_texture_compression_s3tc
EarlyInit_Tier0
EconItemToolModel_001
EditTextChar, id = %d
EditTextChar, varname = %s, text = %s
Egyptian_Hieroglyphs
Embedded profile length in iCCP chunk is negative
Embedded profile length too large in iCCP chunk
Empty JPEG image (DNL not supported)
Empty font: "
Empty input file
Empty language field in iTXt chunk
End Of Image
End of iterated list
EndMaskSubmit
EngineServiceMgr001
EnsureCapacity
EnvironmentMapBuilder_001
Error #{0}
Error in loading candidate list from
Error reading %s
Error text not found (please report)
Error: CScaleformFileOpener cannot open '%s' for writing. Writing not supported.
Error: CScaleformFileOpener failed to open '%s'
Error: GFxZlibState is not set - can't load zipped image data
Error: Invalid Vorbis audio data.
Error: Invoked method (%s) is not a function
Error: Invoked method (%s.%s) is not a function
Error: NetStream.Play requires one argument (file name)
Error: NetStream.SetSoundSpatial requires at least one argument (position)
Error: NetStream.seek requires one argument (offset)
Error: NetStream.setBufferTime requires one argument (time)
Error: NetStream.setNumberOfFramePools requires one argument (pools)
Error: NetStream.setOpenTimeout requires one argument (timeout)
Error: NetStream.setReloadThresholdTime requires one argument (time)
Error: Null or invalid 'this' is used for a method of %s class.
Error: Too few parameters for Object.registerClass (%d)
Error: Video.attachVideo requires one argument (NetStream object)
Ethiopic
EvalError
EventPhase
EventSystem001
Exceeded size limit while expanding chunk
Exec
ExportInfo: tagType = %d, tool ver = %d.%d, imgfmt = %d, prefix = '%s', swfname = '%s', flags = 0x%X
Exported      : "{0}" {1} found.
Exported      : "{0}" {1} not found.
ExternalInterface
ExternalInterface.call - handler is not installed.
ExternalInterface::marshallExceptions is not supported.
ExternalInterface::objectID is not supported.
Extra compressed data
Extra compression data
F
FACE
FACE="{0}"
FAIL
FCVAR_NEVER_AS_STRING
FC_Other
FIXED
FLASH1
FLASH10_FLAGS
FLASH2
FLASH3
FLASH4
FLASH5
FLASH6
FLASH7
FLASH8
FLASH9
FLUSHED
FOCUS_IN
FOCUS_OUT
FRAME_CONSTRUCTED
FSCommand:
FULLSCREEN
FULL_SCREEN
FULL_SCREEN_INTERACTIVE
Failed loading SWF "%s": ActionScript version mismatch
Failed loading SWF file "
Failed loading URL "%s"
Failed to CreateImageFromUGCFile as couldn't access ISteamRemoteStorage
Failed to allocate MFQE framebuffer
Failed to allocate bool decoder %d
Failed to allocate bool decoder 0
Failed to allocate frame buffers
Failed to allocate pbi->de_thread_data
Failed to allocate pbi->h_decoding_thread
Failed to allocate pbi->h_event_start_decoding
Failed to allocate pbi->mb_row_di
Failed to allocate pbi->mbc
Failed to allocate pbi->mt_current_mb_col
Failed to allocate pbi->mt_uabove_row
Failed to allocate pbi->mt_uabove_row[i]
Failed to allocate pbi->mt_uleft_col
Failed to allocate pbi->mt_uleft_col[i]
Failed to allocate pbi->mt_vabove_row
Failed to allocate pbi->mt_vabove_row[i]
Failed to allocate pbi->mt_vleft_col
Failed to allocate pbi->mt_vleft_col[i]
Failed to allocate pbi->mt_yabove_row
Failed to allocate pbi->mt_yabove_row[i]
Failed to allocate pbi->mt_yleft_col
Failed to allocate pbi->mt_yleft_col[i]
Failed to bind SWF file "
Failed to create temporary file %s
Failed to decode frame
Failed to destroy codec
Failed to get imageindex from Steam.  Returned %d
Failed to initialize decoder
Failed to load SWF file "
Failed to load image '
False
Feb
FieldPathEncodeFinish
File change watching failed for '%s', retraversing
FileFilter
FileReference
FileReferenceList
FillStyle read type = 0x%X
Find
FlagType = %s, GridFit = %s
FlattenedSerializersVersion001
FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified! String: "%s"
FocusManager
Font "
Font '%s%s%s' has no hinting chars (any of 'HEFTUVWXZ' and 'zxvwy'). Auto-Hinting disabled.
Font id = %d is referring to non-font resource in text field id = %d, def text = '%s'
Font not found.
Font: id = %d
FontCache
FontData
FontHeight = %f
FontLib not installed.
FontManager_001
FontProvider not installed.
FontRequest
FontStyle
FontTextureInfo: tagInfo.TagType = %d, id = 0x%X, fmt = %d, name = '%s', w = %d, h = %d
FontType
ForceUpdateImages
FormatV
Fractional sampling not implemented yet
Frame %d: Null NextPattern after %p, count = %d
Frame Profile
Freed EMS handle %u
Freed XMS handle %u
Fri
FullScreenEvent
Function
Function is not an object for static method '%s'.
G
GAME
GAMECONSOLE
GCC: (Ubuntu 4.8.1-2ubuntu1~12.04+steamrt2+srt1) 4.8.1
GCC: (Ubuntu/Linaro 4.6.4-1ubuntu1~12.04) 4.6.4
GCC: (crosstool-NG 1.17.0) 4.6.3
GESTURE
GESTURE_PAN
GESTURE_PRESS_AND_TAP
GESTURE_ROTATE
GESTURE_SWIPE
GESTURE_TWO_FINGER_TAP
GESTURE_ZOOM
GFxShaders.cache
GFxShadersV2
GFx_ButtonLoader - AS2 support is not installed. Actions are skipped.
GFx_ButtonLoader - AS3 Button shouldn't have AS2 actions. Skipped.
GFx_ButtonSoundLoader: Audio library is not set.
GFx_DefineBitsJpeg2Loader: charid = %d pos = 0x%x
GFx_DefineBitsJpeg3Loader: charid = %d pos = %d
GFx_DefineBitsJpeg4Loader: charid = %d pos = %d deblocking = %d
GFx_DefineExternalSoundLoader: Audio library is not set.
GFx_DefineExternalStreamSoundLoader: Audio library is not set.
GFx_DefineFontInfoLoader - can't find FontResource w/ id %d
GFx_DefineSoundLoader: Audio library is not set.
GFx_DefineVideoStream: Video library is not set.
GFx_DoActionLoader - AS2 support is not installed. Tag is skipped.
GFx_DoActionLoader - DoAction tag shouldn't appear in AS3 swf. Tag is skipped.
GFx_DoInitActionLoader - AS2 support is not installed. Tag is skipped.
GFx_DoInitActionLoader - DoInitAction tag shouldn't appear in AS3 swf. Tag is skipped.
GFx_InflateWrapper() Inflate() returned %d
GFx_InflateWrapper() InflateEnd() return %d
GFx_InflateWrapper() inflateInit() returned %d
GFx_PlaceObject2Loader - AS2 support is not installed. Tag is skipped.
GFx_PlaceObject3Loader - AS2 support is not installed. Tag is skipped.
GFx_ReadFillStyles: count = %d
GFx_ReadStrokeStyles: count = %d
GFx_ReadStrokeStyles: count2 = %d
GFx_RemoveObjectLoader - AS2 support is not installed. Tag is skipped.
GFx_SoundStreamBlockLoader: Audio library is not set.
GFx_SoundStreamHeadLoader: Audio library is not set.
GFx_StartSoundLoader: Audio library is not set.
GLIBCXX_3.4
GLIBC_2.11
GLIBC_2.14
GLIBC_2.15
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.3.2
GLIBC_2.3.4
GLIBC_2.4
GL_ARB_get_program_binary
GL_ARB_sync
GL_GREMEDY_string_marker
GMT
GMT+
GMT-
GNU
GREEN
GameInterface
GamePad
GamePadAnalogEvent
GameResourceServiceClientV001
GameResourceServiceServerV001
GameUIService_001
General
GenerateCodeBasedManifestName: Invalid CodeBasedManifestType_t %d
Georgian
GesturePhase
GetAppID
GetCPUInformation
GetCompositionString
GetOSVersion
GetPathData
GetPathData failed for read only CFieldPath
GetResourceManifestCount
GetResourceManifests
GetUGCDetails failed? (UGC=%08X%08X nFileSizeInBytes=%d).
GetVariable
GetVariable failed: can't resolve the path "%s"
GetVariableRaw("%s") failed, returning UNDEFINED.
Getter method is null.
Glagolitic
GlyphCache
GlyphRecords: count = %d
Gothic
GradientBevelFilter
GradientGen
GradientGlowFilter
GradientType
Greek
GridFitType
Gujarati
Gurmukhi
H
H(
H0
HAL::drawMaskClearRectangles
HAND
HARDLIGHT
HEAD
HEIGHT
HEIGHT="{0}"
HF
HIDE_NSURI_METHODS
HIDE_OBJECT
HIGH
HIGHDPI
HORIZONTAL
HP
HREF
HSPACE
HSPACE="{0}"
HTML_BOUNDS_CHANGE
HTML_DOM_INITIALIZE
HTML_RENDER
HTTPStatusEvent
HTTP_RESPONSE_STATUS
HTTP_STATUS
HammerMapLoader001
Han
HandleIMEEvent
Handles (Count: %i):
HangWatchdog_IndicateActivity
Hangul
Hanunoo
HasBlending, %d
HasColor
HasFilters
HasFont: font id = %d
HasFontClass: font class = %s
HasLayout = %d, CodePage = %s, Italic = %d, Bold = %d
HasLayout: alignment = %d, leftmarg = %f, rightmarg = %f, indent = %f, leading = %f
HasMaxLength: len = %d
Heap Summary
Heartbeat
Hebrew
Help
HelpSystem_001
Hide
HideCursor
Hiragana
HitTest
Home
HookUpConfigValue
HostStateMgr001
Huffman code size table overflow
Huffman table 0x%02x was not defined
I
IA88
IBEAM
IBM367
IBitmapDrawable
ID
ID3
ID3Info
ID="{0}"
IDREF
IDREFS
IDynamicPropertyOutput
IDynamicPropertyWriter
IGNORE
IMEConversionMode
IMEEx
IME_COMPOSITION
IMG
IMPLIED
INCLUDE
INCLUDE_ACCESSORS
INCLUDE_BASES
INCLUDE_CONSTRUCTOR
INCLUDE_INTERFACES
INCLUDE_METADATA
INCLUDE_METHODS
INCLUDE_TRAITS
INCLUDE_VARIABLES
INIT
INNER
INTZRAWZDF16DF24ATI2ATI1
INVALID
INVERT
IO_ERROR
IQuickTime001
ISFTextObject::SetText called on an uninitialized object ( text = '%S' )
ISO-8859-1
ISO646-US
ISO_646.irv:1991
ISearchableText
ISimpleTextSelection
If enabled, controller input is translated to regular keyboard keys
Ignoring PLTE chunk in grayscale PNG
Ignoring attempt to set cHRM RGB triangle with zero area
Ignoring attempt to set negative chromaticity value
Ignoring attempt to write 16-bit bKGD chunk when bit_depth is 8
Ignoring attempt to write 16-bit tRNS chunk when bit_depth is 8
Ignoring attempt to write bKGD chunk out-of-range for bit_depth
Ignoring attempt to write tRNS chunk out-of-range for bit_depth
Ignoring bad adaptive filter type
Ignoring cHRM chunk with negative chromaticities
Ignoring extra png_read_update_info() call; row buffer not reallocated
Ignoring extra png_start_read_image() call; row buffer not reallocated
Ignoring gAMA chunk with out of range gamma
Ignoring iCCP chunk with declared size = %u and actual length = %u
Ignoring incorrect cHRM value when sRGB is also present
Ignoring incorrect gAMA value when sRGB is also present
Ignoring nonzero compression type in iCCP chunk
Ignoring request to write a PLTE chunk in grayscale PNG
IiGM
IllegalOperationError
Image '%s' wasn't created in ProcessImageTags
Image file handler registry is not installed - can't load image data
Image file handler registry is not installed - can't load jpeg image data
Image height exceeds user limit in IHDR
Image height is zero in IHDR
Image is not created.
Image is not created: can't find ImageCreator.
Image is null in ImageShapeCharacterDef ctor.
Image is too high to process with png_read_png()
Image resource creation failed - ImageCreator not installed
Image too wide for this implementation
Image width exceeds user limit in IHDR
Image width is zero in IHDR
ImageCreator is not installed, failed to load image "%s"
ImageCreator is not installed,failed to load image "%s"
ImageCreator is null in DrawText::ProcessImageTags
ImageCreator is null in ImageShapeCharacterDef ctor
ImageCreator is null in ProceedImageSubstitution
ImageCreator is null in ProcessImageTags
ImageCreator is null in UpdateImageSubstitution
ImageCreator::LoadProtocolImage failed to load image "%s"
ImageData
ImageRequest
Imperial_Aramaic
Import failed - resource '%s' is not exported from movie '%s'
Imports       : "{0}" {1} found in "{2}".
Imports       : "{0}" {1} import delegates to font library.
Imports       : "{0}" {1} not found.
Improper call to JPEG library in state %d
Incomplete compressed datastream in %s chunk
Inconsistent progression sequence for component %d coefficient %d
Incorrect IEND chunk length
Incorrect bKGD chunk index value
Incorrect bKGD chunk length
Incorrect buffer dimensions
Incorrect cHRM chunk length
Incorrect gAMA chunk length
Incorrect hIST chunk length
Incorrect oFFs chunk length
Incorrect pHYs chunk length
Incorrect sBIT chunk length
Incorrect sRGB chunk length
Incorrect tIME chunk length
Incorrect tRNS chunk length
Inherited
InitState
Input file read error
InputService_001
InputStackSystemVersion001
InputSystemVersion001
InsChr
InsLn
Inscriptional_Pahlavi
Inscriptional_Parthian
Insert
InstallChangeCallback called with NULL callback, ignoring!!!
InstallChangeCallback ignoring duplicate change callback!!!
InstallSchemaBindings
Instance
InstanceTraits
Insufficient memory (case %d)
Insufficient memory for hIST chunk data
Insufficient memory for pCAL parameter
Insufficient memory for pCAL params
Insufficient memory for pCAL purpose
Insufficient memory for pCAL units
Insufficient memory to process iCCP chunk
Insufficient memory to process iCCP profile
Insufficient memory to process text chunk
Insufficient memory to store iTXt chunk
Insufficient memory to store text
Insufficient memory to store zTXt chunk
Intentionally vague touch behavior for %p
InteractiveObject
InteractiveObjectEx
Interlace handling should be turned on when using png_read_image
Internal
InterpolationMethod
Invalid Date
Invalid GetProperty query, property number %d
Invalid IHDR chunk
Invalid IHDR data
Invalid JPEG file structure: SOS before SOF
Invalid JPEG file structure: missing SOS marker
Invalid JPEG file structure: two SOF markers
Invalid JPEG file structure: two SOI markers
Invalid Namespace type
Invalid PLTE after IDAT
Invalid SOS parameters for sequential JPEG
Invalid SWF file: failed to load frame #%d since total frames counter is %d
Invalid SWF file: failed to load init action frame #%d since total frames counter is %d
Invalid SWF file: failed to load sprite's frame #%d since total frames counter is %d
Invalid SetProperty request, property number %d
Invalid attempt to read row data
Invalid bKGD after IDAT
Invalid background palette index
Invalid bit depth for RGB image
Invalid bit depth for RGBA image
Invalid bit depth for grayscale image
Invalid bit depth for grayscale+alpha image
Invalid bit depth for paletted image
Invalid bit depth in IHDR
Invalid cHRM after IDAT
Invalid cHRM blue point
Invalid cHRM green point
Invalid cHRM red point
Invalid cHRM white point
Invalid color quantization mode change
Invalid color type in IHDR
Invalid color type/bit depth combination in IHDR
Invalid component ID %d in SOS
Invalid compression type specified
Invalid crop request
Invalid filter method in IHDR
Invalid filter type specified
Invalid format for pCAL parameter
Invalid frame height
Invalid frame sync code
Invalid frame width
Invalid gAMA after IDAT
Invalid hIST after IDAT
Invalid iCCP after IDAT
Invalid image color type specified
Invalid image height in IHDR
Invalid image width in IHDR
Invalid interlace type specified
Invalid local register %d, stack only has %d entries
Invalid memory pool code %d
Invalid movie clip path; neither string nor object
Invalid nominal size for DefineCompactedFont, font %s. Broken gfx file.
Invalid number of colors in palette
Invalid number of histogram entries specified
Invalid number of transparent colors specified
Invalid oFFs after IDAT
Invalid pCAL after IDAT
Invalid pCAL data
Invalid pCAL equation type
Invalid pCAL parameters for equation type
Invalid pHYs after IDAT
Invalid palette chunk
Invalid palette length
Invalid palette size, hIST allocation skipped
Invalid parameter
Invalid path '%s'
Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d
Invalid progressive parameters at scan script entry %d
Invalid reference frame
Invalid sBIT after IDAT
Invalid sBIT depth specified
Invalid sCAL after IDAT
Invalid sCAL chunk ignored: bad height format
Invalid sCAL chunk ignored: bad width format
Invalid sCAL height
Invalid sCAL height ignored
Invalid sCAL ignored: invalid unit
Invalid sCAL unit
Invalid sCAL width
Invalid sCAL width ignored
Invalid sPLT after IDAT
Invalid sRGB after IDAT
Invalid sRGB rendering intent specified
Invalid scan script at entry %d
Invalid tRNS after IDAT
Invalid time specified for tIME chunk
Invalid zlib compression method or flags in IDAT
InvalidSWFError
Invoke
InvokeAction
InvokeParsed('%s','%s') - invalid char '%c'
InvokeParsed('%s','%s') - invalid format '%%%c'
InvokeParsed('%s','%s') - invalid format '%%h%c'
InvokeParsed('%s','%s') - invalid format '%%l%c'
Invoked method %s is not a function
Invoked method %s.%s is not a function
Invoked method '%s' is not a function
Invoked method '%s.%s' is not a function
Invoked method (%s) is not a function
Invoked method (%s) is null
Invoked method (%s.%s) is not a function
Invoked method (%s.%s) is null
IsCandidateList
IsCursorVisible
IsLangBar
IsStatusWindow
Italic
J
J(
J0
JAPANESE_HIRAGANA
JAPANESE_KATAKANA_FULL
JAPANESE_KATAKANA_HALF
JFIF APP0 marker: version %d.%02d, density %dx%d  %d
JFIF extension marker: JPEG-compressed thumbnail image, length %u
JFIF extension marker: RGB thumbnail image, length %u
JFIF extension marker: palette thumbnail image, length %u
JFIF extension marker: type 0x%02x, length %u
JP
JPEG datastream contains no image
JPEG parameter struct mismatch: library thinks size is %u, caller expects %u
JPEGMEM
JUSTIFY
Jan
Javanese
JointStyle
Jpeg System is not installed - can't load jpeg image data
Jul
Jun
K
KERNING
KERNING="{0:sw:1:0}"
KEYNAME_BEGIN
KEYNAME_BREAK
KEYNAME_CLEARDISPLAY
KEYNAME_CLEARLINE
KEYNAME_DELETE
KEYNAME_DELETECHAR
KEYNAME_DELETELINE
KEYNAME_DOWNARROW
KEYNAME_END
KEYNAME_EXECUTE
KEYNAME_F1
KEYNAME_F10
KEYNAME_F11
KEYNAME_F12
KEYNAME_F13
KEYNAME_F14
KEYNAME_F15
KEYNAME_F16
KEYNAME_F17
KEYNAME_F18
KEYNAME_F19
KEYNAME_F2
KEYNAME_F20
KEYNAME_F21
KEYNAME_F22
KEYNAME_F23
KEYNAME_F24
KEYNAME_F25
KEYNAME_F26
KEYNAME_F27
KEYNAME_F28
KEYNAME_F29
KEYNAME_F3
KEYNAME_F30
KEYNAME_F31
KEYNAME_F32
KEYNAME_F33
KEYNAME_F34
KEYNAME_F35
KEYNAME_F4
KEYNAME_F5
KEYNAME_F6
KEYNAME_F7
KEYNAME_F8
KEYNAME_F9
KEYNAME_FIND
KEYNAME_HELP
KEYNAME_HOME
KEYNAME_INSERT
KEYNAME_INSERTCHAR
KEYNAME_INSERTLINE
KEYNAME_LEFTARROW
KEYNAME_MENU
KEYNAME_MODESWITCH
KEYNAME_NEXT
KEYNAME_PAGEDOWN
KEYNAME_PAGEUP
KEYNAME_PAUSE
KEYNAME_PREV
KEYNAME_PRINT
KEYNAME_PRINTSCREEN
KEYNAME_REDO
KEYNAME_RESET
KEYNAME_RIGHTARROW
KEYNAME_SCROLLLOCK
KEYNAME_SELECT
KEYNAME_STOP
KEYNAME_SYSREQ
KEYNAME_SYSTEM
KEYNAME_UNDO
KEYNAME_UPARROW
KEYNAME_USER
KEY_DOWN
KEY_FOCUS_CHANGE
KEY_UP
KNQ
KOREAN
KV Conditional Evaluation Error
Kaithi
Kannada
Katakana
Kayah_Li
KerningCount = %d
KeyIsDown needs one Argument (the key code)
KeyIsToggled needs one Argument (the key code)
KeyLocation
KeyValueCache001
KeyValues Error: %s in file %s
KeyValues::ParseIncludedKeys: Couldn't load included keyvalue file %s
KeyValues::RecursiveSaveToFile: TODO, missing code for TYPE_COLOR.
KeyValues::SaveToFile: couldn't open file "%s" in path "%s".
KeyValuesSystem
Keyboard
Kharoshthi
Khmer
L
L&
L(
L0
LAYER
LB
LCD
LEADING
LEADING="{0}"
LEFTBRACKET
LEFTMARGIN
LEFTMARGIN="{0}"
LEFT_BUTTON
LETTERSPACING
LETTERSPACING="{0}"
LE_BGRA8888
LE_BGRX8888
LF)
LI
LIGHTEN
LIGHT_COLOR
LINEAR_ABGR8888
LINEAR_ARGB8888
LINEAR_BGR888
LINEAR_BGRA8888
LINEAR_BGRX5551
LINEAR_BGRX8888
LINEAR_D24S8
LINEAR_I8
LINEAR_RGB
LINEAR_RGB888
LINEAR_RGBA16161616
LINEAR_RGBA8888
LINK
LINK_MOUSE_OUT
LINK_MOUSE_OVER
LINUX
LINUX 8,0,0,0
LITTLE_ENDIAN
LMb#
LN10
LN2
LNX 10,1,0,0
LOCALE
LOCAL_STORAGE
LOCAL_TRUSTED
LOCAL_WITH_FILE
LOCAL_WITH_NETWORK
LOCATION_CHANGE
LOG10E
LOG2E
LOG_GENERAL
LOW
LOWVIOLENCE
LP
Label[%d] = { %d, "%s" }
LangCode = %d
Lao
Latin
Leaked string content: %s
Lepcha
Limbu
LineScaleMode
Linear_B
Lisu
Ll
Lm
Lo
Load a scaleform font provider?
LoadFromBuffer: expected '{', found '%s'
LoadKVFile
LoadVars
LoadVars.addRequestHeader is not implemented.
LoadVars.send is not implemented.
LoadVars.sendAndLoad is not implemented.
Loader - Stream-end tag hit, but not at the end of the file yet; stopping for safety
Loader - unable to read compressed SWF data; GFxZlibState is not set.
Loader failed to open "
Loader failed to open '%s', FileOpener not installe
Loader failed to open '%s', FileOpener not installed
Loader read failed - file does not start with a SWF header
Loader read failed - no mExporterInfo tag in GFX file header
LocManager
Local Footprint
Local Used Space
LocalConnection
Localize_001
LoggingSystem_IsChannelEnabled
LoggingSystem_Log
LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
LoggingSystem_LogDirect(int, LoggingSeverity_t, Color, char const*)
LoggingSystem_RegisterLoggingChannel
Logic Error in CExpressionEvaluator
Lt
Lu
Lycian
Lydian
M
M0@
MARK
MATCHFRAMEWORK_001
MAX_ALLOC_CHUNK is wrong, please fix
MAX_VALUE
MCAdvance
MD_Other
MDiskDataForResourceType
MEDIUM
MENU_ITEM_SELECT
MENU_SELECT
MGiI
MICROPHONE
MIDDLE
MIDDLE_BUTTON
MIDDLE_CLICK
MIDDLE_MOUSE_DOWN
MIDDLE_MOUSE_UP
MIN_VALUE
MITER
MNG features are not allowed in a PNG datastream
MNetworkBitCount
MNetworkChangeCallback
MNetworkEncoder
MNetworkOverride_Invalid
MNetworkSerializer
MNetworkUserGroup
MODEL_PROCESSING_SCRIPT_INTERFACE_001
MODEL_PROCESSING_SERVICES_INTERFACE_001
MOUSE_FOCUS_CHANGE
MOUSE_LEAVE
MOUSE_MOVE
MOUSE_WHEEL
MV_Other
Malayalam
Malformed iCCP chunk
Malformed iTXt chunk
Mandaic
MapListService_001
Mar
MaterialUtils_001
Math
MatrixPool
Maximum supported image dimension is %u pixels
May
Mc
Me
Meetei_Mayek
MemAlloc_AllocFunc
MemAlloc_FreeFunc
Memory allocation error
Memory allocation failed while processing sCAL
MeshCacheManagement
MeshStagingBuffer
MeshSystem001
MeshUtils001
Messages
Method '%s' is not found.
Method '%s.%s' is not found.
Miscellaneous marker 0x%02x, length %u
Missing "%s" glyph '%c' (0x%x) in "%s".Font has %u glyphs, ranges %s.Search log: %s
Missing 'fontlib' key
Missing Huffman code table entry
Missing IHDR before IDAT
Missing IHDR before PLTE
Missing IHDR before bKGD
Missing IHDR before cHRM
Missing IHDR before gAMA
Missing IHDR before hIST
Missing IHDR before iCCP
Missing IHDR before iTXt
Missing IHDR before oFFs
Missing IHDR before pCAL
Missing IHDR before pHYs
Missing IHDR before sBIT
Missing IHDR before sCAL
Missing IHDR before sPLT
Missing IHDR before sRGB
Missing IHDR before tEXt
Missing IHDR before tRNS
Missing IHDR before zTXt
Missing PLTE before IDAT
Missing PLTE before bKGD
Missing PLTE before cHRM
Missing PLTE before hIST
Missing PLTE before tRNS
Mn
ModeSw
ModelDocUtils001
Mon
Mongolian
MorphCharacterDef, first shape:
MorphCharacterDef, second shape:
MorphShape
Mouse
MouseCursor
MouseCursorEvent
Movie resource: "{0}" {1} found, requires faux
Movie resource: "{0}" {1} found.
Movie resource: "{0}" {1} not found.
Movie resource: "{0}" {1} ref found, requires FontLib/Map/Provider.
MovieClipLoader
MovieData "
MovieDef
MovieDef  "
MovieImpl::GotoLabeledFrame('%s') unknown label
MovieView
MovieView "
Msg
Multitouch
MultitouchInputMode
Myanmar
N
N14MDmElementType45CValueSearchTester_ClassIntrospectionHandle_tE
N24CFieldPathHuffmanEncoder12InternalNodeE
N24CFieldPathHuffmanEncoder5INodeE
N24CFieldPathHuffmanEncoder8LeafNodeE
N24MDiskDataForResourceType45CValueSearchTester_ClassIntrospectionHandle_tE
N9Scaleform10MemoryFileE
N9Scaleform10MemoryHeap12LimitHandlerE
N9Scaleform10MemoryHeapE
N9Scaleform11FmtResourceE
N9Scaleform11NumericBaseE
N9Scaleform12BufferedFileE
N9Scaleform12MemItemExtraE
N9Scaleform12MemoryHeapMHE
N9Scaleform12RefCountBaseINS_12MemItemExtraELi2EEE
N9Scaleform12RefCountBaseINS_18AmpMovieObjectDescELi2EEE
N9Scaleform12RefCountBaseINS_3GFx10ASUserDataELi2EEE
N9Scaleform12RefCountBaseINS_3GFx10LoadStatesELi2EEE
N9Scaleform12RefCountBaseINS_3GFx10LoaderImplELi2EEE
N9Scaleform12RefCountBaseINS_3GFx11ResourceLib12ResourceSlotELi2EEE
N9Scaleform12RefCountBaseINS_3GFx11ResourceLibELi2EEE
N9Scaleform12RefCountBaseINS_3GFx12ASIMEManagerELi513EEE
N9Scaleform12RefCountBaseINS_3GFx12MovieDataDef16LoadTaskDataBaseELi265EEE
N9Scaleform12RefCountBaseINS_3GFx12MovieDefImpl12BindTaskDataELi2EEE
N9Scaleform12RefCountBaseINS_3GFx12StateBagImplELi2EEE
N9Scaleform12RefCountBaseINS_3GFx13KeyboardStateELi2EEE
N9Scaleform12RefCountBaseINS_3GFx13MemoryContextELi2EEE
N9Scaleform12RefCountBaseINS_3GFx14LoadUpdateSyncELi265EEE
N9Scaleform12RefCountBaseINS_3GFx15ASMovieRootBaseELi327EEE
N9Scaleform12RefCountBaseINS_3GFx15ASStringManagerELi324EEE
N9Scaleform12RefCountBaseINS_3GFx15FunctionHandlerELi2EEE
N9Scaleform12RefCountBaseINS_3GFx15ResourceLibBaseELi2EEE
N9Scaleform12RefCountBaseINS_3GFx18GFxMovieDefImplKeyELi2EEE
N9Scaleform12RefCountBaseINS_3GFx18MovieDefBindStatesELi2EEE
N9Scaleform12RefCountBaseINS_3GFx19ASIntervalTimerIntfELi323EEE
N9Scaleform12RefCountBaseINS_3GFx20ImageFileInfoKeyDataELi2EEE
N9Scaleform12RefCountBaseINS_3GFx24GFxSystemFontResourceKeyELi261EEE
N9Scaleform12RefCountBaseINS_3GFx26GFxMovieDataDefFileKeyDataELi2EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP11ServerStateELi578EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP12FuncTreeItemELi2EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP12FunctionDescELi578EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP12MovieProfileELi578EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP12ProfileFrameELi578EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP18MovieFunctionStatsELi578EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP20MovieSourceLineStatsELi578EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP21MovieInstructionStats17ScriptBufferStatsELi578EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP21MovieInstructionStatsELi578EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP22MovieFunctionTreeStatsELi2EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP7MessageELi580EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP9ImageInfoELi578EEE
N9Scaleform12RefCountBaseINS_3GFx3AMP9ViewStats22BufferInstructionTimesELi582EEE
N9Scaleform12RefCountBaseINS_3GFx3AS213XMLFileLoaderELi326EEE
N9Scaleform12RefCountBaseINS_3GFx3AS215ASCSSFileLoaderELi2EEE
N9Scaleform12RefCountBaseINS_3GFx3AS216ActionBufferDataELi264EEE
N9Scaleform12RefCountBaseINS_3GFx3AS217RefCountCollectorILi323EEELi323EEE
N9Scaleform12RefCountBaseINS_3GFx3AS311SoundObjectELi323EEE
N9Scaleform12RefCountBaseINS_3GFx3AS313AbcDataBufferELi264EEE
N9Scaleform12RefCountBaseINS_3GFx3AS315NotifyLoadInitCELi2EEE
N9Scaleform12RefCountBaseINS_3GFx3AS315PtrReleaseProxyILi328EEELi328EEE
N9Scaleform12RefCountBaseINS_3GFx3AS317RefCountCollectorILi328EEELi328EEE
N9Scaleform12RefCountBaseINS_3GFx3AS324NamespaceInstanceFactoryELi336EEE
N9Scaleform12RefCountBaseINS_3GFx3XML13ParserHandlerELi326EEE
N9Scaleform12RefCountBaseINS_3GFx4TaskELi2EEE
N9Scaleform12RefCountBaseINS_3GFx5MovieELi327EEE
N9Scaleform12RefCountBaseINS_3GFx5StateELi2EEE
N9Scaleform12RefCountBaseINS_3GFx9MovieImpl17WideStringStorageELi327EEE
N9Scaleform12RefCountBaseINS_3LogELi2EEE
N9Scaleform12RefCountBaseINS_4FileELi2EEE
N9Scaleform12RefCountBaseINS_5Sound12SoundChannelELi4EEE
N9Scaleform12RefCountBaseINS_5Sound13SoundRenderer11AuxStreamerELi4EEE
N9Scaleform12RefCountBaseINS_6Render10GlyphCacheELi2EEE
N9Scaleform12RefCountBaseINS_6Render10RenderSyncELi2EEE
N9Scaleform12RefCountBaseINS_6Render10Renderer2DELi65EEE
N9Scaleform12RefCountBaseINS_6Render10TextLayoutELi74EEE
N9Scaleform12RefCountBaseINS_6Render11ComplexFillELi71EEE
N9Scaleform12RefCountBaseINS_6Render11ContextImpl11ContextLockELi69EEE
N9Scaleform12RefCountBaseINS_6Render11ContextImpl8RTHandle10HandleDataELi69EEE
N9Scaleform12RefCountBaseINS_6Render11ImageUpdateELi2EEE
N9Scaleform12RefCountBaseINS_6Render11MatrixStateELi65EEE
N9Scaleform12RefCountBaseINS_6Render12GradientDataELi257EEE
N9Scaleform12RefCountBaseINS_6Render12TextureGlyphELi2EEE
N9Scaleform12RefCountBaseINS_6Render13MaskPrimitiveELi67EEE
N9Scaleform12RefCountBaseINS_6Render13ThreadCommandELi2EEE
N9Scaleform12RefCountBaseINS_6Render13UserDataState4DataELi2EEE
N9Scaleform12RefCountBaseINS_6Render14DICommandQueueELi2EEE
N9Scaleform12RefCountBaseINS_6Render14MatrixPoolImpl10MatrixPoolELi73EEE
N9Scaleform12RefCountBaseINS_6Render14MeshKeyManagerELi65EEE
N9Scaleform12RefCountBaseINS_6Render14MorphShapeDataELi71EEE
N9Scaleform12RefCountBaseINS_6Render14Scale9GridDataELi2EEE
N9Scaleform12RefCountBaseINS_6Render14Scale9GridInfoELi71EEE
N9Scaleform12RefCountBaseINS_6Render14Scale9GridRectELi71EEE
N9Scaleform12RefCountBaseINS_6Render14StereoImplBaseELi2EEE
N9Scaleform12RefCountBaseINS_6Render14TextureManagerELi72EEE
N9Scaleform12RefCountBaseINS_6Render15FilterPrimitiveELi67EEE
N9Scaleform12RefCountBaseINS_6Render17UserDataPrimitiveELi67EEE
N9Scaleform12RefCountBaseINS_6Render18ShapeDataInterfaceELi71EEE
N9Scaleform12RefCountBaseINS_6Render18SystemVertexFormatELi2EEE
N9Scaleform12RefCountBaseINS_6Render19DepthStencilSurfaceELi72EEE
N9Scaleform12RefCountBaseINS_6Render19MeshProvider_RCImplELi2EEE
N9Scaleform12RefCountBaseINS_6Render19RenderBufferManagerELi72EEE
N9Scaleform12RefCountBaseINS_6Render19TextureManagerLocksELi72EEE
N9Scaleform12RefCountBaseINS_6Render20DrawableImageContextELi2EEE
N9Scaleform12RefCountBaseINS_6Render20PrimitiveFillManagerELi71EEE
N9Scaleform12RefCountBaseINS_6Render21ViewMatrix3DPrimitiveELi67EEE
N9Scaleform12RefCountBaseINS_6Render22FontCacheHandleManagerELi75EEE
N9Scaleform12RefCountBaseINS_6Render27ProjectionMatrix3DPrimitiveELi67EEE
N9Scaleform12RefCountBaseINS_6Render3HALELi65EEE
N9Scaleform12RefCountBaseINS_6Render4FontELi75EEE
N9Scaleform12RefCountBaseINS_6Render4JPEG9ExtraDataELi2EEE
N9Scaleform12RefCountBaseINS_6Render4RectIfEELi2EEE
N9Scaleform12RefCountBaseINS_6Render4Text10FontHandleELi74EEE
N9Scaleform12RefCountBaseINS_6Render4Text13EditorKitBaseELi74EEE
N9Scaleform12RefCountBaseINS_6Render4Text15FontManagerBaseELi74EEE
N9Scaleform12RefCountBaseINS_6Render4Text21CompositionStringBaseELi74EEE
N9Scaleform12RefCountBaseINS_6Render4Text7DocViewELi74EEE
N9Scaleform12RefCountBaseINS_6Render6FilterELi2EEE
N9Scaleform12RefCountBaseINS_6Render7TextureELi72EEE
N9Scaleform12RefCountBaseINS_6Render8MeshBaseELi68EEE
N9Scaleform12RefCountBaseINS_6Render9FilterSetELi2EEE
N9Scaleform12RefCountBaseINS_6Render9Matrix3x4IfEELi2EEE
N9Scaleform12RefCountBaseINS_6Render9Matrix4x4IfEELi2EEE
N9Scaleform12RefCountBaseINS_6Render9PrimitiveELi67EEE
N9Scaleform12RefCountBaseINS_7MemItemELi2EEE
N9Scaleform12RefCountBaseINS_8AmpStatsELi2EEE
N9Scaleform12RefCountBaseINS_8WaitableELi2EEE
N9Scaleform12RefCountImplE
N9Scaleform12StrFormatterE
N9Scaleform12SysAllocBaseE
N9Scaleform12UnopenedFileE
N9Scaleform13BoolFormatterE
N9Scaleform13FileConstantsE
N9Scaleform13LongFormatterE
N9Scaleform13RefCountBaseVINS_6Render5ImageELi3EEE
N9Scaleform13RefCountVImplE
N9Scaleform15DoubleFormatterE
N9Scaleform15NewOverrideBaseILi2EEE
N9Scaleform15NewOverrideBaseILi323EEE
N9Scaleform15NewOverrideBaseILi326EEE
N9Scaleform15NewOverrideBaseILi328EEE
N9Scaleform15NewOverrideBaseILi329EEE
N9Scaleform15NewOverrideBaseILi338EEE
N9Scaleform15NewOverrideBaseILi65EEE
N9Scaleform15NewOverrideBaseILi6EEE
N9Scaleform15NewOverrideBaseILi71EEE
N9Scaleform15NewOverrideBaseILi72EEE
N9Scaleform15RefCountBaseNTSINS_3GFx13CompactedFontINS_16ArrayPagedLH_PODIhLi12ELi256ELi261EEEEELi261EEE
N9Scaleform15RefCountBaseNTSINS_3GFx13CompactedFontINS_17ArrayUnsafeLH_PODIhLi261EEEEELi261EEE
N9Scaleform15RefCountBaseNTSINS_3GFx13FontCompactorELi261EEE
N9Scaleform15RefCountBaseNTSINS_3GFx14DrawingContextELi322EEE
N9Scaleform15RefCountBaseNTSINS_3GFx15DrawTextManagerELi2EEE
N9Scaleform15RefCountBaseNTSINS_3GFx15FontGlyphPackerELi2EEE
N9Scaleform15RefCountBaseNTSINS_3GFx16ResourceFileInfoELi2EEE
N9Scaleform15RefCountBaseNTSINS_3GFx16TextureGlyphDataELi261EEE
N9Scaleform15RefCountBaseNTSINS_3GFx17FontManagerStatesELi327EEE
N9Scaleform15RefCountBaseNTSINS_3GFx19SharedObjectVisitorELi2EEE
N9Scaleform15RefCountBaseNTSINS_3GFx20SubImageResourceInfoELi2EEE
N9Scaleform15RefCountBaseNTSINS_3GFx3AS212ActionBufferELi323EEE
N9Scaleform15RefCountBaseNTSINS_3GFx3AS213GlobalContextELi323EEE
N9Scaleform15RefCountBaseNTSINS_3GFx3AS318NetStreamInterfaceELi323EEE
N9Scaleform15RefCountBaseNTSINS_3GFx3XML13ObjectManagerELi326EEE
N9Scaleform15RefCountBaseNTSINS_3GFx3XML4NodeELi326EEE
N9Scaleform15RefCountBaseNTSINS_3GFx3XML6PrefixELi326EEE
N9Scaleform15RefCountBaseNTSINS_3GFx3XML8RootNodeELi326EEE
N9Scaleform15RefCountBaseNTSINS_3GFx5Video10VideoSoundELi6EEE
N9Scaleform15RefCountBaseNTSINS_3GFx5Video11VideoPlayer10SyncObjectELi6EEE
N9Scaleform15RefCountBaseNTSINS_3GFx5Video11VideoReaderELi6EEE
N9Scaleform15RefCountBaseNTSINS_3GFx5Video12VideoDecoderELi6EEE
N9Scaleform15RefCountBaseNTSINS_3GFx5Video15AS2VideoSupportELi6EEE
N9Scaleform15RefCountBaseNTSINS_3GFx5Video15AS3VideoSupportELi6EEE
N9Scaleform15RefCountBaseNTSINS_3GFx5Video16VideoSoundSystemELi6EEE
N9Scaleform15RefCountBaseNTSINS_3GFx5Video17VideoReaderConfigELi6EEE
N9Scaleform15RefCountBaseNTSINS_3GFx6Sprite15ActiveSoundItemELi327EEE
N9Scaleform15RefCountBaseNTSINS_3GFx8DrawTextELi325EEE
N9Scaleform15RefCountBaseNTSINS_6Render11GlyphRasterELi75EEE
N9Scaleform15RefCountBaseNTSINS_6Render13PrimitiveFillELi71EEE
N9Scaleform15RefCountBaseNTSINS_6Render4Text10StyledTextELi74EEE
N9Scaleform15RefCountBaseNTSINS_6Render4Text10TextFilterELi74EEE
N9Scaleform15RefCountBaseNTSINS_6Render4Text7DocView16DocumentListenerELi74EEE
N9Scaleform15RefCountBaseNTSINS_6Render4Text9AllocatorELi74EEE
N9Scaleform15RefCountBaseNTSINS_6Render6BundleELi67EEE
N9Scaleform15RefCountNTSImplE
N9Scaleform15SwitchFormatterE
N9Scaleform16AcquireInterfaceE
N9Scaleform16RefCountImplCoreE
N9Scaleform17ResourceFormatterE
N9Scaleform18AmpMovieObjectDescE
N9Scaleform19RefCountNTSImplCoreE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi257EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi261EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi264EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi265EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi2EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi323EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi324EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi326EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi327EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi328EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi336EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi4EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi513EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi578EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi580EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi582EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi65EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi67EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi68EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi69EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi71EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi72EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi73EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi74EEE
N9Scaleform20RefCountBaseStatImplINS_12RefCountImplELi75EEE
N9Scaleform20RefCountBaseStatImplINS_13RefCountVImplELi3EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi261EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi2EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi322EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi323EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi325EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi326EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi327EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi67EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi6EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi71EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi74EEE
N9Scaleform20RefCountBaseStatImplINS_15RefCountNTSImplELi75EEE
N9Scaleform20RefCountBaseStatImplINS_23RefCountWeakSupportImplELi322EEE
N9Scaleform22StatInfo_InterfaceImplINS_10MemoryStatEEE
N9Scaleform22StatInfo_InterfaceImplINS_11CounterStatEEE
N9Scaleform22StatInfo_InterfaceImplINS_9TimerStatEEE
N9Scaleform23DefaultAcquireInterfaceE
N9Scaleform23RefCountBaseWeakSupportINS_3GFx17DisplayObjectBaseELi322EEE
N9Scaleform23RefCountBaseWeakSupportINS_3GFx5Video13VideoProviderELi327EEE
N9Scaleform23RefCountWeakSupportImplE
N9Scaleform26SemaphoreWaitableIncrementE
N9Scaleform34Mutex_AreadyLockedAcquireInterfaceE
N9Scaleform3GFx10AS3SupportE
N9Scaleform3GFx10ASUserDataE
N9Scaleform3GFx10ExecuteTagE
N9Scaleform3GFx10FileOpenerE
N9Scaleform3GFx10FontHandleE
N9Scaleform3GFx10LoadStatesE
N9Scaleform3GFx10LoaderImplE
N9Scaleform3GFx10LoaderTaskE
N9Scaleform3GFx10TextKeyMapE
N9Scaleform3GFx10TranslatorE
N9Scaleform3GFx10URLBuilderE
N9Scaleform3GFx11ASSoundIntfE
N9Scaleform3GFx11DisplayList13MemberVisitorE
N9Scaleform3GFx11FontManagerE
N9Scaleform3GFx11LoadProcessE
N9Scaleform3GFx11ResourceKey12KeyInterfaceE
N9Scaleform3GFx11ResourceLib12ResourceSlotE
N9Scaleform3GFx11ResourceLibE
N9Scaleform3GFx11TimelineDefE
N9Scaleform3GFx11ZlibSupportE
N9Scaleform3GFx12ASIMEManager14IMEFuncHandlerE
N9Scaleform3GFx12ASIMEManagerE
N9Scaleform3GFx12CharacterDefE
N9Scaleform3GFx12DrawTextImplE
N9Scaleform3GFx12FontResourceE
N9Scaleform3GFx12ImageCreatorE
N9Scaleform3GFx12LoadVarsTaskE
N9Scaleform3GFx12MovieDataDef12LoadTaskDataE
N9Scaleform3GFx12MovieDataDef16LoadTaskDataBaseE
N9Scaleform3GFx12MovieDataDefE
N9Scaleform3GFx12MovieDefImpl12BindTaskDataE
N9Scaleform3GFx12MovieDefImplE
N9Scaleform3GFx12ParseControlE
N9Scaleform3GFx12ResourceData13DataInterfaceE
N9Scaleform3GFx12StateBagImplE
N9Scaleform3GFx12TextFieldDefE
N9Scaleform3GFx13AvmButtonBaseE
N9Scaleform3GFx13AvmSpriteBaseE
N9Scaleform3GFx13CompactedFontINS_16ArrayPagedLH_PODIhLi12ELi256ELi261EEEEE
N9Scaleform3GFx13CompactedFontINS_17ArrayUnsafeLH_PODIhLi261EEEEE
N9Scaleform3GFx13DisplayObjectE
N9Scaleform3GFx13FontCompactorE
N9Scaleform3GFx13FontDataBoundE
N9Scaleform3GFx13ImageFileInfoE
N9Scaleform3GFx13ImageResource13ImageDelegateE
N9Scaleform3GFx13ImageResourceE
N9Scaleform3GFx13KeyboardState9IListenerE
N9Scaleform3GFx13KeyboardStateE
N9Scaleform3GFx13MemoryContextE
N9Scaleform3GFx13ShapeDataBaseE
N9Scaleform3GFx13StaticTextDefE
N9Scaleform3GFx13TextClipboardE
N9Scaleform3GFx13TimelineIODefE
N9Scaleform3GFx14ActionPriorityE
N9Scaleform3GFx14DrawingContext11PackedShapeE
N9Scaleform3GFx14DrawingContextE
N9Scaleform3GFx14ExternalLibPtrE
N9Scaleform3GFx14FileOpenerBaseE
N9Scaleform3GFx14IMEManagerBaseE
N9Scaleform3GFx14LoadBinaryTaskE
N9Scaleform3GFx14LoadQueueEntryE
N9Scaleform3GFx14LoadUpdateSyncE
N9Scaleform3GFx14PlaceObjectTagE
N9Scaleform3GFx14ResourceReportE
N9Scaleform3GFx15ASMovieRootBaseE
N9Scaleform3GFx15ASStringManagerE
N9Scaleform3GFx15DrawTextManagerE
N9Scaleform3GFx15FontGlyphPackerE
N9Scaleform3GFx15FunctionHandlerE
N9Scaleform3GFx15PlaceObject2TagE
N9Scaleform3GFx15PlaceObject3TagE
N9Scaleform3GFx15RemoveObjectTagE
N9Scaleform3GFx15ResourceLibBaseE
N9Scaleform3GFx15ResourceWeakLibE
N9Scaleform3GFx15ZlibImageSourceE
N9Scaleform3GFx15ZlibSupportBaseE
N9Scaleform3GFx16AvmTextFieldBaseE
N9Scaleform3GFx16LoadQueueEntryMTE
N9Scaleform3GFx16MovieBindProcessE
N9Scaleform3GFx16MovieDefRootNodeE
N9Scaleform3GFx16MoviePreloadTaskE
N9Scaleform3GFx16PlaceObject2TagaE
N9Scaleform3GFx16RemoveObject2TagE
N9Scaleform3GFx16ResourceFileInfoE
N9Scaleform3GFx16SubImageResourceE
N9Scaleform3GFx16TextureGlyphData19TextureGlyphVisitorE
N9Scaleform3GFx16TextureGlyphDataE
N9Scaleform3GFx17AvmDisplayObjBaseE
N9Scaleform3GFx17DisplayObjectBaseE
N9Scaleform3GFx17FileTypeConstantsE
N9Scaleform3GFx17FontManagerStatesE
N9Scaleform3GFx17InteractiveObjectE
N9Scaleform3GFx17MorphCharacterDefE
N9Scaleform3GFx18ConstShapeNoStylesE
N9Scaleform3GFx18GFxMovieDefImplKeyE
N9Scaleform3GFx18GFxPlaceObjectBaseE
N9Scaleform3GFx18MovieDefBindStatesE
N9Scaleform3GFx18MovieImageLoadTaskE
N9Scaleform3GFx18TextureGlyphBinderE
N9Scaleform3GFx19ASIntervalTimerIntfE
N9Scaleform3GFx19DisplayObjContainerE
N9Scaleform3GFx19FontResourceCreatorE
N9Scaleform3GFx19SharedObjectVisitorE
N9Scaleform3GFx19StaticTextCharacterE
N9Scaleform3GFx20ConstShapeWithStylesE
N9Scaleform3GFx20FontDataCompactedGfxE
N9Scaleform3GFx20FontDataCompactedSwfE
N9Scaleform3GFx20GFxInitImportActionsE
N9Scaleform3GFx20ImageFileInfoKeyDataE
N9Scaleform3GFx20ImageResourceCreatorE
N9Scaleform3GFx20SubImageResourceInfoE
N9Scaleform3GFx20SwfShapeCharacterDefE
N9Scaleform3GFx21AvmInteractiveObjBaseE
N9Scaleform3GFx21AvmVideoCharacterBaseE
N9Scaleform3GFx21ImageFileKeyInterfaceE
N9Scaleform3GFx21MemoryBufferZlibImageE
N9Scaleform3GFx21SetBackgroundColorTagE
N9Scaleform3GFx21ShapeBaseCharacterDefE
N9Scaleform3GFx22GFxPlaceObjectUnpackedE
N9Scaleform3GFx22ImageShapeCharacterDefE
N9Scaleform3GFx22StaticTextSnapshotData12GlyphVisitorE
N9Scaleform3GFx23AS2ValueObjectInterfaceE
N9Scaleform3GFx23AS3ValueObjectInterfaceE
N9Scaleform3GFx23DefaultFontLibNameStateE
N9Scaleform3GFx23SubImageResourceCreatorE
N9Scaleform3GFx24GFxSystemFontResourceKeyE
N9Scaleform3GFx24ImageFileHandlerRegistryE
N9Scaleform3GFx24ImageFileResourceCreatorE
N9Scaleform3GFx25LoadQueueEntryMT_LoadVarsE
N9Scaleform3GFx26AvmDisplayObjContainerBaseE
N9Scaleform3GFx26GFxMovieDataDefFileKeyDataE
N9Scaleform3GFx27GFxMovieDefImplKeyInterfaceE
N9Scaleform3GFx27LoadQueueEntryMT_LoadBinaryE
N9Scaleform3GFx31GFxMovieDataDefFileKeyInterfaceE
N9Scaleform3GFx33GFxSystemFontResourceKeyInterfaceE
N9Scaleform3GFx3AMP10MessageLogE
N9Scaleform3GFx3AMP11MessagePortE
N9Scaleform3GFx3AMP11ServerStateE
N9Scaleform3GFx3AMP12FuncTreeItemE
N9Scaleform3GFx3AMP12FunctionDescE
N9Scaleform3GFx3AMP12MovieProfile10MarkerInfoE
N9Scaleform3GFx3AMP12MovieProfileE
N9Scaleform3GFx3AMP12ProfileFrameE
N9Scaleform3GFx3AMP14MessageSwdFileE
N9Scaleform3GFx3AMP15MessageFontDataE
N9Scaleform3GFx3AMP16MessageImageDataE
N9Scaleform3GFx3AMP16MessageInitStateE
N9Scaleform3GFx3AMP17MessageAppControlE
N9Scaleform3GFx3AMP17MessageCompressedE
N9Scaleform3GFx3AMP17MessageSourceFileE
N9Scaleform3GFx3AMP17MessageSwdRequestE
N9Scaleform3GFx3AMP18MessageFontRequestE
N9Scaleform3GFx3AMP18MovieFunctionStatsE
N9Scaleform3GFx3AMP19AppControlInterfaceE
N9Scaleform3GFx3AMP19MessageCurrentStateE
N9Scaleform3GFx3AMP19MessageImageRequestE
N9Scaleform3GFx3AMP19MessageProfileFrameE
N9Scaleform3GFx3AMP20MessageObjectsReportE
N9Scaleform3GFx3AMP20MessageSourceRequestE
N9Scaleform3GFx3AMP20MovieSourceLineStatsE
N9Scaleform3GFx3AMP21MovieInstructionStats17ScriptBufferStatsE
N9Scaleform3GFx3AMP21MovieInstructionStatsE
N9Scaleform3GFx3AMP22MovieFunctionTreeStatsE
N9Scaleform3GFx3AMP27MessageObjectsReportRequestE
N9Scaleform3GFx3AMP7MessageE
N9Scaleform3GFx3AMP9AmpStreamE
N9Scaleform3GFx3AMP9ImageInfoE
N9Scaleform3GFx3AMP9ViewStats22BufferInstructionTimesE
N9Scaleform3GFx3AMP9ViewStatsE
N9Scaleform3GFx3AS210ArrayProtoE
N9Scaleform3GFx3AS210BitmapDataE
N9Scaleform3GFx3AS210ColorProtoE
N9Scaleform3GFx3AS210DateObjectE
N9Scaleform3GFx3AS210IMEManagerE
N9Scaleform3GFx3AS210LocalFrameE
N9Scaleform3GFx3AS210MouseProtoE
N9Scaleform3GFx3AS210PointProtoE
N9Scaleform3GFx3AS210SoundProtoE
N9Scaleform3GFx3AS210StageProtoE
N9Scaleform3GFx3AS210VideoProtoE
N9Scaleform3GFx3AS211ArrayObjectE
N9Scaleform3GFx3AS211ButtonProtoE
N9Scaleform3GFx3AS211ColorObjectE
N9Scaleform3GFx3AS211EnvironmentE
N9Scaleform3GFx3AS211GASImeProtoE
N9Scaleform3GFx3AS211MatrixProtoE
N9Scaleform3GFx3AS211MouseObjectE
N9Scaleform3GFx3AS211NumberProtoE
N9Scaleform3GFx3AS211ObjectProtoE
N9Scaleform3GFx3AS211PointObjectE
N9Scaleform3GFx3AS211SoundObjectE
N9Scaleform3GFx3AS211StageObjectE
N9Scaleform3GFx3AS211StringProtoE
N9Scaleform3GFx3AS211SuperObjectE
N9Scaleform3GFx3AS211VideoObjectE
N9Scaleform3GFx3AS212ActionBufferE
N9Scaleform3GFx3AS212ActionLoggerE
N9Scaleform3GFx3AS212AvmCharacterE
N9Scaleform3GFx3AS212AvmTextField9CSSHolderE
N9Scaleform3GFx3AS212AvmTextFieldE
N9Scaleform3GFx3AS212BooleanProtoE
N9Scaleform3GFx3AS212ButtonObjectE
N9Scaleform3GFx3AS212MatrixObjectE
N9Scaleform3GFx3AS212NumberObjectE
N9Scaleform3GFx3AS212SharedObjectE
N9Scaleform3GFx3AS212StringObjectE
N9Scaleform3GFx3AS212XMLShadowRefE
N9Scaleform3GFx3AS212XmlNodeProtoE
N9Scaleform3GFx3AS213AsBroadcaster14InvokeCallbackE
N9Scaleform3GFx3AS213AsBroadcasterE
N9Scaleform3GFx3AS213BooleanObjectE
N9Scaleform3GFx3AS213FunctionProtoE
N9Scaleform3GFx3AS213GlobalContextE
N9Scaleform3GFx3AS213IntervalTimerE
N9Scaleform3GFx3AS213LoadVarsProtoE
N9Scaleform3GFx3AS213MouseListenerE
N9Scaleform3GFx3AS213NetConnectionE
N9Scaleform3GFx3AS213ValuePropertyE
N9Scaleform3GFx3AS213XMLFileLoaderE
N9Scaleform3GFx3AS213XmlNodeObjectE
N9Scaleform3GFx3AS214ASRefCountBaseINS1_10LocalFrameEEE
N9Scaleform3GFx3AS214ASRefCountBaseINS1_13ValuePropertyEEE
N9Scaleform3GFx3AS214ASRefCountBaseINS1_6ObjectEEE
N9Scaleform3GFx3AS214AmpMarkerProtoE
N9Scaleform3GFx3AS214FunctionObjectE
N9Scaleform3GFx3AS214LoadVarsObjectE
N9Scaleform3GFx3AS214MovieClipProtoE
N9Scaleform3GFx3AS214NetStreamProtoE
N9Scaleform3GFx3AS214RectangleProtoE
N9Scaleform3GFx3AS214RefCountBaseGCILi323EEE
N9Scaleform3GFx3AS214SelectionProtoE
N9Scaleform3GFx3AS214TextFieldProtoE
N9Scaleform3GFx3AS214TransformProtoE
N9Scaleform3GFx3AS215ASCSSFileLoaderE
N9Scaleform3GFx3AS215BitmapDataProtoE
N9Scaleform3GFx3AS215BlurFilterProtoE
N9Scaleform3GFx3AS215CFunctionObjectE
N9Scaleform3GFx3AS215GASGlobalObjectE
N9Scaleform3GFx3AS215GlowFilterProtoE
N9Scaleform3GFx3AS215KeyCtorFunctionE
N9Scaleform3GFx3AS215MovieClipLoaderE
N9Scaleform3GFx3AS215MovieClipObjectE
N9Scaleform3GFx3AS215ObjectInterface13MemberVisitorE
N9Scaleform3GFx3AS215ObjectInterfaceE
N9Scaleform3GFx3AS215RectangleObjectE
N9Scaleform3GFx3AS215SharedObjectPtrE
N9Scaleform3GFx3AS215StyleSheetProtoE
N9Scaleform3GFx3AS215TextFieldObjectE
N9Scaleform3GFx3AS215TextFormatProtoE
N9Scaleform3GFx3AS215TransformObjectE
N9Scaleform3GFx3AS215XmlCtorFunctionE
N9Scaleform3GFx3AS216ActionBufferDataE
N9Scaleform3GFx3AS216AsFunctionObjectE
N9Scaleform3GFx3AS216BevelFilterProtoE
N9Scaleform3GFx3AS216BlurFilterObjectE
N9Scaleform3GFx3AS216CSSStringBuilderE
N9Scaleform3GFx3AS216DateCtorFunctionE
N9Scaleform3GFx3AS216GASPrototypeBaseE
N9Scaleform3GFx3AS216GlowFilterObjectE
N9Scaleform3GFx3AS216MathCtorFunctionE
N9Scaleform3GFx3AS216StyleSheetObjectE
N9Scaleform3GFx3AS216TextFormatObjectE
N9Scaleform3GFx3AS216XMLPrefixQuerierE
N9Scaleform3GFx3AS217ArrayCtorFunctionE
N9Scaleform3GFx3AS217AvmVideoCharacterE
N9Scaleform3GFx3AS217BevelFilterObjectE
N9Scaleform3GFx3AS217BitmapFilterProtoE
N9Scaleform3GFx3AS217ColorCtorFunctionE
N9Scaleform3GFx3AS217ExternalInterfaceE
N9Scaleform3GFx3AS217GFxAS2LoadCSSTaskE
N9Scaleform3GFx3AS217GFxAS2LoadXMLTaskE
N9Scaleform3GFx3AS217GenericDisplayObjE
N9Scaleform3GFx3AS217MemoryContextImpl9HeapLimitE
N9Scaleform3GFx3AS217MouseCtorFunction19LocalInvokeCallbackE
N9Scaleform3GFx3AS217MouseCtorFunctionE
N9Scaleform3GFx3AS217PointCtorFunctionE
N9Scaleform3GFx3AS217RefCountCollectorILi323EE4RootE
N9Scaleform3GFx3AS217RefCountCollectorILi323EEE
N9Scaleform3GFx3AS217SharedObjectProtoE
N9Scaleform3GFx3AS217SoundCtorFunctionE
N9Scaleform3GFx3AS217StageCtorFunctionE
N9Scaleform3GFx3AS217TextSnapshotProtoE
N9Scaleform3GFx3AS217VideoCtorFunctionE
N9Scaleform3GFx3AS217XMLFileLoaderImplE
N9Scaleform3GFx3AS218AsBroadcasterProtoE
N9Scaleform3GFx3AS218BitmapFilterObjectE
N9Scaleform3GFx3AS218ButtonCtorFunctionE
N9Scaleform3GFx3AS218GASImeCtorFunctionE
N9Scaleform3GFx3AS218NetConnectionProtoE
N9Scaleform3GFx3AS218NumberCtorFunctionE
N9Scaleform3GFx3AS218ObjectCtorFunctionE
N9Scaleform3GFx3AS218StringCtorFunctionE
N9Scaleform3GFx3AS218SwfVideoSyncObjectE
N9Scaleform3GFx3AS218TextSnapshotObjectE
N9Scaleform3GFx3AS219ASRefCountCollectorE
N9Scaleform3GFx3AS219BooleanCtorFunctionE
N9Scaleform3GFx3AS219CSSTextFormatLoaderE
N9Scaleform3GFx3AS219ColorTransformProtoE
N9Scaleform3GFx3AS219XmlNodeCtorFunctionE
N9Scaleform3GFx3AS220ColorTransformObjectE
N9Scaleform3GFx3AS220FunctionCtorFunctionE
N9Scaleform3GFx3AS220GFxAS2LoadQueueEntryE
N9Scaleform3GFx3AS220MovieClipLoaderProtoE
N9Scaleform3GFx3AS221AmpMarkerCtorFunctionE
N9Scaleform3GFx3AS221DropShadowFilterProtoE
N9Scaleform3GFx3AS221GASMatrixCtorFunctionE
N9Scaleform3GFx3AS221GASSharedObjectLoaderE
N9Scaleform3GFx3AS221MovieClipCtorFunctionE
N9Scaleform3GFx3AS221NetStreamCtorFunctionE
N9Scaleform3GFx3AS221RectangleCtorFunctionE
N9Scaleform3GFx3AS221SelectionCtorFunctionE
N9Scaleform3GFx3AS221TextFieldCtorFunctionE
N9Scaleform3GFx3AS221TransformCtorFunctionE
N9Scaleform3GFx3AS222BitmapDataCtorFunctionE
N9Scaleform3GFx3AS222BlurFilterCtorFunctionE
N9Scaleform3GFx3AS222ColorMatrixFilterProtoE
N9Scaleform3GFx3AS222DropShadowFilterObjectE
N9Scaleform3GFx3AS222ExternalInterfaceProtoE
N9Scaleform3GFx3AS222GlowFilterCtorFunctionE
N9Scaleform3GFx3AS222StyleSheetCtorFunctionE
N9Scaleform3GFx3AS222TextFormatCtorFunctionE
N9Scaleform3GFx3AS222VideoProviderNetStreamE
N9Scaleform3GFx3AS223BevelFilterCtorFunctionE
N9Scaleform3GFx3AS223ColorMatrixFilterObjectE
N9Scaleform3GFx3AS224BitmapFilterCtorFunctionE
N9Scaleform3GFx3AS224CapabilitiesCtorFunctionE
N9Scaleform3GFx3AS224SharedObjectCtorFunctionE
N9Scaleform3GFx3AS224TextSnapshotCtorFunctionE
N9Scaleform3GFx3AS225AsBroadcasterCtorFunctionE
N9Scaleform3GFx3AS225NetConnectionCtorFunctionE
N9Scaleform3GFx3AS225UserDefinedFunctionObjectE
N9Scaleform3GFx3AS225XMLAttributeStringBuilderE
N9Scaleform3GFx3AS226CSSFileLoaderAndParserImplE
N9Scaleform3GFx3AS226ColorTransformCtorFunctionE
N9Scaleform3GFx3AS226XMLFileLoaderAndParserImplE
N9Scaleform3GFx3AS227GASTextSnapshotGlyphVisitorE
N9Scaleform3GFx3AS227MovieClipLoaderCtorFunctionE
N9Scaleform3GFx3AS228DropShadowFilterCtorFunctionE
N9Scaleform3GFx3AS229ColorMatrixFilterCtorFunctionE
N9Scaleform3GFx3AS229ExternalInterfaceCtorFunctionE
N9Scaleform3GFx3AS229GASLoadVarsLoaderCtorFunctionE
N9Scaleform3GFx3AS230GFxAS2LoadQueueEntryMT_LoadCSSE
N9Scaleform3GFx3AS230GFxAS2LoadQueueEntryMT_LoadXMLE
N9Scaleform3GFx3AS232GFxAS2LoadQueueEntryMT_LoadMovieE
N9Scaleform3GFx3AS24MathE
N9Scaleform3GFx3AS26FnCallE
N9Scaleform3GFx3AS26GASImeE
N9Scaleform3GFx3AS26ObjectE
N9Scaleform3GFx3AS28KeyProtoE
N9Scaleform3GFx3AS28XmlProtoE
N9Scaleform3GFx3AS29AmpMarkerE
N9Scaleform3GFx3AS29AvmButtonE
N9Scaleform3GFx3AS29AvmSpriteE
N9Scaleform3GFx3AS29DateProtoE
N9Scaleform3GFx3AS29KeyObjectE
N9Scaleform3GFx3AS29MathProtoE
N9Scaleform3GFx3AS29MovieRoot13StickyVarNodeE
N9Scaleform3GFx3AS29MovieRootE
N9Scaleform3GFx3AS29NetStreamE
N9Scaleform3GFx3AS29PrototypeINS1_10BitmapDataENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_10DateObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_11ArrayObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_11ColorObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_11MouseObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_11PointObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_11SoundObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_11StageObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_11VideoObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_12ButtonObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_12MatrixObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_12NumberObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_12SharedObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_12StringObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_13AsBroadcasterENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_13BooleanObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_13NetConnectionENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_13XmlNodeObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_14LoadVarsObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_15MovieClipLoaderENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_15MovieClipObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_15RectangleObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_15TextFieldObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_15TransformObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_16BlurFilterObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_16GlowFilterObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_16StyleSheetObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_16TextFormatObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_17BevelFilterObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_17ExternalInterfaceENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_18BitmapFilterObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_18TextSnapshotObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_20ColorTransformObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_22DropShadowFilterObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_23ColorMatrixFilterObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_4MathENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_6GASImeENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_6ObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_9AmpMarkerENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_9KeyObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_9NetStreamENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_9SelectionENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29PrototypeINS1_9XmlObjectENS1_11EnvironmentEEE
N9Scaleform3GFx3AS29SelectionE
N9Scaleform3GFx3AS29XmlObjectE
N9Scaleform3GFx3AS310FileLoaderE
N9Scaleform3GFx3AS310IMEManagerE
N9Scaleform3GFx3AS310VectorBaseINS1_5ValueEE17ValuePtrCollectorE
N9Scaleform3GFx3AS310VectorBaseINS1_5ValueEE18Value2StrCollectorE
N9Scaleform3GFx3AS310VectorBaseINS1_5ValueEE21Value2NumberCollectorE
N9Scaleform3GFx3AS310VectorBaseINS1_5ValueEE9ArrayFuncE
N9Scaleform3GFx3AS310VectorBaseINS1_5ValueEEE
N9Scaleform3GFx3AS310VectorBaseINS_3PtrINS0_12ASStringNodeEEEE17ValuePtrCollectorE
N9Scaleform3GFx3AS310VectorBaseINS_3PtrINS0_12ASStringNodeEEEE18Value2StrCollectorE
N9Scaleform3GFx3AS310VectorBaseINS_3PtrINS0_12ASStringNodeEEEE21Value2NumberCollectorE
N9Scaleform3GFx3AS310VectorBaseINS_3PtrINS0_12ASStringNodeEEEE9ArrayFuncE
N9Scaleform3GFx3AS310VectorBaseINS_3PtrINS0_12ASStringNodeEEEEE
N9Scaleform3GFx3AS310VectorBaseIdE17ValuePtrCollectorE
N9Scaleform3GFx3AS310VectorBaseIdE18Value2StrCollectorE
N9Scaleform3GFx3AS310VectorBaseIdE21Value2NumberCollectorE
N9Scaleform3GFx3AS310VectorBaseIdE9ArrayFuncE
N9Scaleform3GFx3AS310VectorBaseIdEE
N9Scaleform3GFx3AS310VectorBaseIiE17ValuePtrCollectorE
N9Scaleform3GFx3AS310VectorBaseIiE18Value2StrCollectorE
N9Scaleform3GFx3AS310VectorBaseIiE21Value2NumberCollectorE
N9Scaleform3GFx3AS310VectorBaseIiE9ArrayFuncE
N9Scaleform3GFx3AS310VectorBaseIiEE
N9Scaleform3GFx3AS310VectorBaseIjE17ValuePtrCollectorE
N9Scaleform3GFx3AS310VectorBaseIjE18Value2StrCollectorE
N9Scaleform3GFx3AS310VectorBaseIjE21Value2NumberCollectorE
N9Scaleform3GFx3AS310VectorBaseIjE9ArrayFuncE
N9Scaleform3GFx3AS310VectorBaseIjEE
N9Scaleform3GFx3AS310XMLSupportE
N9Scaleform3GFx3AS311ClassTraits10ClassClassE
N9Scaleform3GFx3AS311ClassTraits10fl_display10BitmapDataE
N9Scaleform3GFx3AS311ClassTraits10fl_display10FrameLabelE
N9Scaleform3GFx3AS311ClassTraits10fl_display10JointStyleE
N9Scaleform3GFx3AS311ClassTraits10fl_display10LoaderInfoE
N9Scaleform3GFx3AS311ClassTraits10fl_display10MorphShapeE
N9Scaleform3GFx3AS311ClassTraits10fl_display10SWFVersionE
N9Scaleform3GFx3AS311ClassTraits10fl_display10ShaderDataE
N9Scaleform3GFx3AS311ClassTraits10fl_display10StageAlignE
N9Scaleform3GFx3AS311ClassTraits10fl_display12GradientTypeE
N9Scaleform3GFx3AS311ClassTraits10fl_display12SimpleButtonE
N9Scaleform3GFx3AS311ClassTraits10fl_display12SpreadMethodE
N9Scaleform3GFx3AS311ClassTraits10fl_display12StageQualityE
N9Scaleform3GFx3AS311ClassTraits10fl_display13DisplayObjectE
N9Scaleform3GFx3AS311ClassTraits10fl_display13LineScaleModeE
N9Scaleform3GFx3AS311ClassTraits10fl_display13PixelSnappingE
N9Scaleform3GFx3AS311ClassTraits10fl_display14StageScaleModeE
N9Scaleform3GFx3AS311ClassTraits10fl_display15IBitmapDrawableE
N9Scaleform3GFx3AS311ClassTraits10fl_display17BitmapDataChannelE
N9Scaleform3GFx3AS311ClassTraits10fl_display17InteractiveObjectE
N9Scaleform3GFx3AS311ClassTraits10fl_display17StageDisplayStateE
N9Scaleform3GFx3AS311ClassTraits10fl_display19ActionScriptVersionE
N9Scaleform3GFx3AS311ClassTraits10fl_display19InterpolationMethodE
N9Scaleform3GFx3AS311ClassTraits10fl_display22DisplayObjectContainerE
N9Scaleform3GFx3AS311ClassTraits10fl_display5SceneE
N9Scaleform3GFx3AS311ClassTraits10fl_display5ShapeE
N9Scaleform3GFx3AS311ClassTraits10fl_display5StageE
N9Scaleform3GFx3AS311ClassTraits10fl_display6BitmapE
N9Scaleform3GFx3AS311ClassTraits10fl_display6LoaderE
N9Scaleform3GFx3AS311ClassTraits10fl_display6ShaderE
N9Scaleform3GFx3AS311ClassTraits10fl_display6SpriteE
N9Scaleform3GFx3AS311ClassTraits10fl_display8GraphicsE
N9Scaleform3GFx3AS311ClassTraits10fl_display9AVM1MovieE
N9Scaleform3GFx3AS311ClassTraits10fl_display9BlendModeE
N9Scaleform3GFx3AS311ClassTraits10fl_display9CapsStyleE
N9Scaleform3GFx3AS311ClassTraits10fl_display9MovieClipE
N9Scaleform3GFx3AS311ClassTraits10fl_filters10BlurFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters10GlowFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters11BevelFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters12BitmapFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters12ShaderFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters16BitmapFilterTypeE
N9Scaleform3GFx3AS311ClassTraits10fl_filters16DropShadowFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters17ColorMatrixFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters17ConvolutionFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters18GradientGlowFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters19BitmapFilterQualityE
N9Scaleform3GFx3AS311ClassTraits10fl_filters19GradientBevelFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters21DisplacementMapFilterE
N9Scaleform3GFx3AS311ClassTraits10fl_filters25DisplacementMapFilterModeE
N9Scaleform3GFx3AS311ClassTraits11UserDefinedE
N9Scaleform3GFx3AS311ClassTraits11fl_external17ExternalInterfaceE
N9Scaleform3GFx3AS311ClassTraits11fl_security21XMLSignatureValidatorE
N9Scaleform3GFx3AS311ClassTraits16fl_accessibility13AccessibilityE
N9Scaleform3GFx3AS311ClassTraits16fl_accessibility15ISearchableTextE
N9Scaleform3GFx3AS311ClassTraits16fl_accessibility20ISimpleTextSelectionE
N9Scaleform3GFx3AS311ClassTraits16fl_accessibility23AccessibilityPropertiesE
N9Scaleform3GFx3AS311ClassTraits16fl_accessibility27AccessibilityImplementationE
N9Scaleform3GFx3AS311ClassTraits2fl10RangeErrorE
N9Scaleform3GFx3AS311ClassTraits2fl11SyntaxErrorE
N9Scaleform3GFx3AS311ClassTraits2fl11VerifyErrorE
N9Scaleform3GFx3AS311ClassTraits2fl13ArgumentErrorE
N9Scaleform3GFx3AS311ClassTraits2fl13SecurityErrorE
N9Scaleform3GFx3AS311ClassTraits2fl14ReferenceErrorE
N9Scaleform3GFx3AS311ClassTraits2fl15DefinitionErrorE
N9Scaleform3GFx3AS311ClassTraits2fl18UninitializedErrorE
N9Scaleform3GFx3AS311ClassTraits2fl3XMLE
N9Scaleform3GFx3AS311ClassTraits2fl4DateE
N9Scaleform3GFx3AS311ClassTraits2fl4MathE
N9Scaleform3GFx3AS311ClassTraits2fl4int_E
N9Scaleform3GFx3AS311ClassTraits2fl4uintE
N9Scaleform3GFx3AS311ClassTraits2fl5ArrayE
N9Scaleform3GFx3AS311ClassTraits2fl5CatchE
N9Scaleform3GFx3AS311ClassTraits2fl5ErrorE
N9Scaleform3GFx3AS311ClassTraits2fl5QNameE
N9Scaleform3GFx3AS311ClassTraits2fl6NumberE
N9Scaleform3GFx3AS311ClassTraits2fl6ObjectE
N9Scaleform3GFx3AS311ClassTraits2fl6RegExpE
N9Scaleform3GFx3AS311ClassTraits2fl6StringE
N9Scaleform3GFx3AS311ClassTraits2fl7BooleanE
N9Scaleform3GFx3AS311ClassTraits2fl7XMLListE
N9Scaleform3GFx3AS311ClassTraits2fl8URIErrorE
N9Scaleform3GFx3AS311ClassTraits2fl9EvalErrorE
N9Scaleform3GFx3AS311ClassTraits2fl9NamespaceE
N9Scaleform3GFx3AS311ClassTraits2fl9TypeErrorE
N9Scaleform3GFx3AS311ClassTraits5fl_ui10MultitouchE
N9Scaleform3GFx3AS311ClassTraits5fl_ui11ContextMenuE
N9Scaleform3GFx3AS311ClassTraits5fl_ui11KeyLocationE
N9Scaleform3GFx3AS311ClassTraits5fl_ui11MouseCursorE
N9Scaleform3GFx3AS311ClassTraits5fl_ui15ContextMenuItemE
N9Scaleform3GFx3AS311ClassTraits5fl_ui19MultitouchInputModeE
N9Scaleform3GFx3AS311ClassTraits5fl_ui23ContextMenuBuiltInItemsE
N9Scaleform3GFx3AS311ClassTraits5fl_ui25ContextMenuClipboardItemsE
N9Scaleform3GFx3AS311ClassTraits5fl_ui5MouseE
N9Scaleform3GFx3AS311ClassTraits5fl_ui8KeyboardE
N9Scaleform3GFx3AS311ClassTraits6TraitsE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx10ExtensionsE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx10IMEEventExE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx11TextEventExE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx11TextFieldExE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx12FocusEventExE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx12FocusManagerE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx12MouseEventExE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx15DisplayObjectExE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx15KeyboardEventExE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx16MouseCursorEventE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx18GamePadAnalogEventE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx19InteractiveObjectExE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx21IMECandidateListStyleE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx5IMEExE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx7GamePadE
N9Scaleform3GFx3AS311ClassTraits6fl_gfx8SystemExE
N9Scaleform3GFx3AS311ClassTraits6fl_net10FileFilterE
N9Scaleform3GFx3AS311ClassTraits6fl_net10URLRequestE
N9Scaleform3GFx3AS311ClassTraits6fl_net12SharedObjectE
N9Scaleform3GFx3AS311ClassTraits6fl_net12URLVariablesE
N9Scaleform3GFx3AS311ClassTraits6fl_net13FileReferenceE
N9Scaleform3GFx3AS311ClassTraits6fl_net13NetConnectionE
N9Scaleform3GFx3AS311ClassTraits6fl_net14ObjectEncodingE
N9Scaleform3GFx3AS311ClassTraits6fl_net15LocalConnectionE
N9Scaleform3GFx3AS311ClassTraits6fl_net16URLRequestHeaderE
N9Scaleform3GFx3AS311ClassTraits6fl_net16URLRequestMethodE
N9Scaleform3GFx3AS311ClassTraits6fl_net17FileReferenceListE
N9Scaleform3GFx3AS311ClassTraits6fl_net19URLLoaderDataFormatE
N9Scaleform3GFx3AS311ClassTraits6fl_net22IDynamicPropertyOutputE
N9Scaleform3GFx3AS311ClassTraits6fl_net22IDynamicPropertyWriterE
N9Scaleform3GFx3AS311ClassTraits6fl_net23SharedObjectFlushStatusE
N9Scaleform3GFx3AS311ClassTraits6fl_net6SocketE
N9Scaleform3GFx3AS311ClassTraits6fl_net9NetStreamE
N9Scaleform3GFx3AS311ClassTraits6fl_net9ResponderE
N9Scaleform3GFx3AS311ClassTraits6fl_net9URLLoaderE
N9Scaleform3GFx3AS311ClassTraits6fl_net9URLStreamE
N9Scaleform3GFx3AS311ClassTraits6fl_net9XMLSocketE
N9Scaleform3GFx3AS311ClassTraits6fl_vec10Vector_intE
N9Scaleform3GFx3AS311ClassTraits6fl_vec11Vector_uintE
N9Scaleform3GFx3AS311ClassTraits6fl_vec13Vector_StringE
N9Scaleform3GFx3AS311ClassTraits6fl_vec13Vector_doubleE
N9Scaleform3GFx3AS311ClassTraits6fl_vec13Vector_objectE
N9Scaleform3GFx3AS311ClassTraits6fl_vec6VectorE
N9Scaleform3GFx3AS311ClassTraits6fl_xml11XMLDocumentE
N9Scaleform3GFx3AS311ClassTraits6fl_xml11XMLNodeTypeE
N9Scaleform3GFx3AS311ClassTraits6fl_xml7XMLNodeE
N9Scaleform3GFx3AS311ClassTraits7fl_geom14ColorTransformE
N9Scaleform3GFx3AS311ClassTraits7fl_geom21PerspectiveProjectionE
N9Scaleform3GFx3AS311ClassTraits7fl_geom5PointE
N9Scaleform3GFx3AS311ClassTraits7fl_geom6MatrixE
N9Scaleform3GFx3AS311ClassTraits7fl_geom8Matrix3DE
N9Scaleform3GFx3AS311ClassTraits7fl_geom8Vector3DE
N9Scaleform3GFx3AS311ClassTraits7fl_geom9RectangleE
N9Scaleform3GFx3AS311ClassTraits7fl_geom9TransformE
N9Scaleform3GFx3AS311ClassTraits7fl_text10StaticTextE
N9Scaleform3GFx3AS311ClassTraits7fl_text10StyleSheetE
N9Scaleform3GFx3AS311ClassTraits7fl_text10TextFormatE
N9Scaleform3GFx3AS311ClassTraits7fl_text11CSMSettingsE
N9Scaleform3GFx3AS311ClassTraits7fl_text11GridFitTypeE
N9Scaleform3GFx3AS311ClassTraits7fl_text12TextRendererE
N9Scaleform3GFx3AS311ClassTraits7fl_text12TextSnapshotE
N9Scaleform3GFx3AS311ClassTraits7fl_text13AntiAliasTypeE
N9Scaleform3GFx3AS311ClassTraits7fl_text13TextColorTypeE
N9Scaleform3GFx3AS311ClassTraits7fl_text13TextFieldTypeE
N9Scaleform3GFx3AS311ClassTraits7fl_text15TextDisplayModeE
N9Scaleform3GFx3AS311ClassTraits7fl_text15TextFormatAlignE
N9Scaleform3GFx3AS311ClassTraits7fl_text15TextLineMetricsE
N9Scaleform3GFx3AS311ClassTraits7fl_text17TextFieldAutoSizeE
N9Scaleform3GFx3AS311ClassTraits7fl_text4FontE
N9Scaleform3GFx3AS311ClassTraits7fl_text8FontTypeE
N9Scaleform3GFx3AS311ClassTraits7fl_text9FontStyleE
N9Scaleform3GFx3AS311ClassTraits7fl_text9TextFieldE
N9Scaleform3GFx3AS311ClassTraits8FunctionE
N9Scaleform3GFx3AS311ClassTraits8fl_media10MicrophoneE
N9Scaleform3GFx3AS311ClassTraits8fl_media10SoundMixerE
N9Scaleform3GFx3AS311ClassTraits8fl_media12SoundChannelE
N9Scaleform3GFx3AS311ClassTraits8fl_media14SoundTransformE
N9Scaleform3GFx3AS311ClassTraits8fl_media18SoundLoaderContextE
N9Scaleform3GFx3AS311ClassTraits8fl_media5SoundE
N9Scaleform3GFx3AS311ClassTraits8fl_media5VideoE
N9Scaleform3GFx3AS311ClassTraits8fl_media6CameraE
N9Scaleform3GFx3AS311ClassTraits8fl_media7ID3InfoE
N9Scaleform3GFx3AS311ClassTraits8fl_utils10DictionaryE
N9Scaleform3GFx3AS311ClassTraits8fl_utils10IDataInputE
N9Scaleform3GFx3AS311ClassTraits8fl_utils11IDataOutputE
N9Scaleform3GFx3AS311ClassTraits8fl_utils15IExternalizableE
N9Scaleform3GFx3AS311ClassTraits8fl_utils5ProxyE
N9Scaleform3GFx3AS311ClassTraits8fl_utils5TimerE
N9Scaleform3GFx3AS311ClassTraits8fl_utils6EndianE
N9Scaleform3GFx3AS311ClassTraits8fl_utils9ByteArrayE
N9Scaleform3GFx3AS311ClassTraits9fl_errors11MemoryErrorE
N9Scaleform3GFx3AS311ClassTraits9fl_errors15InvalidSWFErrorE
N9Scaleform3GFx3AS311ClassTraits9fl_errors18ScriptTimeoutErrorE
N9Scaleform3GFx3AS311ClassTraits9fl_errors18StackOverflowErrorE
N9Scaleform3GFx3AS311ClassTraits9fl_errors21IllegalOperationErrorE
N9Scaleform3GFx3AS311ClassTraits9fl_errors7IOErrorE
N9Scaleform3GFx3AS311ClassTraits9fl_errors8EOFErrorE
N9Scaleform3GFx3AS311ClassTraits9fl_events10ErrorEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events10EventPhaseE
N9Scaleform3GFx3AS311ClassTraits9fl_events10FocusEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events10MouseEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events10TimerEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events10TouchEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events11StatusEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events12GestureEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events12GesturePhaseE
N9Scaleform3GFx3AS311ClassTraits9fl_events12IOErrorEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events13ActivityEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events13KeyboardEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events13ProgressEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events14NetStatusEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events15AsyncErrorEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events15EventDispatcherE
N9Scaleform3GFx3AS311ClassTraits9fl_events15FullScreenEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events15HTTPStatusEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events16ContextMenuEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events16IEventDispatcherE
N9Scaleform3GFx3AS311ClassTraits9fl_events16StageOrientationE
N9Scaleform3GFx3AS311ClassTraits9fl_events17AppLifecycleEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events18SecurityErrorEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events21StageOrientationEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events21TransformGestureEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events23PressAndTapGestureEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events5EventE
N9Scaleform3GFx3AS311ClassTraits9fl_events8IMEEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events9DataEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events9SyncEventE
N9Scaleform3GFx3AS311ClassTraits9fl_events9TextEventE
N9Scaleform3GFx3AS311ClassTraits9fl_system12CapabilitiesE
N9Scaleform3GFx3AS311ClassTraits9fl_system13LoaderContextE
N9Scaleform3GFx3AS311ClassTraits9fl_system13SecurityPanelE
N9Scaleform3GFx3AS311ClassTraits9fl_system14SecurityDomainE
N9Scaleform3GFx3AS311ClassTraits9fl_system17ApplicationDomainE
N9Scaleform3GFx3AS311ClassTraits9fl_system17IMEConversionModeE
N9Scaleform3GFx3AS311ClassTraits9fl_system3IMEE
N9Scaleform3GFx3AS311ClassTraits9fl_system6DomainE
N9Scaleform3GFx3AS311ClassTraits9fl_system6SystemE
N9Scaleform3GFx3AS311ClassTraits9fl_system8SecurityE
N9Scaleform3GFx3AS311ShapeObjectE
N9Scaleform3GFx3AS311SoundObjectE
N9Scaleform3GFx3AS311VMAppDomainE
N9Scaleform3GFx3AS312AvmMovieClipE
N9Scaleform3GFx3AS312AvmTextField9CSSHolderE
N9Scaleform3GFx3AS312AvmTextFieldE
N9Scaleform3GFx3AS312FrameCounterE
N9Scaleform3GFx3AS312NamespaceSetE
N9Scaleform3GFx3AS312SocketBufferE
N9Scaleform3GFx3AS312StateMachine12DefaultStateE
N9Scaleform3GFx3AS312StateMachine5StateE
N9Scaleform3GFx3AS313AbcDataBufferE
N9Scaleform3GFx3AS313AvmDisplayObjE
N9Scaleform3GFx3AS313AvmStaticTextE
N9Scaleform3GFx3AS313IntervalTimerE
N9Scaleform3GFx3AS314InstanceTraits10ActivationE
N9Scaleform3GFx3AS314InstanceTraits10ClassClassE
N9Scaleform3GFx3AS314InstanceTraits10fl_display10BitmapDataE
N9Scaleform3GFx3AS314InstanceTraits10fl_display10FrameLabelE
N9Scaleform3GFx3AS314InstanceTraits10fl_display10LoaderInfoE
N9Scaleform3GFx3AS314InstanceTraits10fl_display10MorphShapeE
N9Scaleform3GFx3AS314InstanceTraits10fl_display12SimpleButtonE
N9Scaleform3GFx3AS314InstanceTraits10fl_display13DisplayObjectE
N9Scaleform3GFx3AS314InstanceTraits10fl_display17InteractiveObjectE
N9Scaleform3GFx3AS314InstanceTraits10fl_display22DisplayObjectContainerE
N9Scaleform3GFx3AS314InstanceTraits10fl_display5SceneE
N9Scaleform3GFx3AS314InstanceTraits10fl_display5ShapeE
N9Scaleform3GFx3AS314InstanceTraits10fl_display5StageE
N9Scaleform3GFx3AS314InstanceTraits10fl_display6BitmapE
N9Scaleform3GFx3AS314InstanceTraits10fl_display6LoaderE
N9Scaleform3GFx3AS314InstanceTraits10fl_display6SpriteE
N9Scaleform3GFx3AS314InstanceTraits10fl_display8GraphicsE
N9Scaleform3GFx3AS314InstanceTraits10fl_display9AVM1MovieE
N9Scaleform3GFx3AS314InstanceTraits10fl_display9MovieClipE
N9Scaleform3GFx3AS314InstanceTraits10fl_filters10BlurFilterE
N9Scaleform3GFx3AS314InstanceTraits10fl_filters10GlowFilterE
N9Scaleform3GFx3AS314InstanceTraits10fl_filters11BevelFilterE
N9Scaleform3GFx3AS314InstanceTraits10fl_filters12BitmapFilterE
N9Scaleform3GFx3AS314InstanceTraits10fl_filters16DropShadowFilterE
N9Scaleform3GFx3AS314InstanceTraits10fl_filters17ColorMatrixFilterE
N9Scaleform3GFx3AS314InstanceTraits11UserDefinedE
N9Scaleform3GFx3AS314InstanceTraits13ThunkFunctionE
N9Scaleform3GFx3AS314InstanceTraits16fl_accessibility23AccessibilityPropertiesE
N9Scaleform3GFx3AS314InstanceTraits16fl_accessibility27AccessibilityImplementationE
N9Scaleform3GFx3AS314InstanceTraits2fl12GlobalObjectE
N9Scaleform3GFx3AS314InstanceTraits2fl18GlobalObjectScriptE
N9Scaleform3GFx3AS314InstanceTraits2fl3XMLE
N9Scaleform3GFx3AS314InstanceTraits2fl4DateE
N9Scaleform3GFx3AS314InstanceTraits2fl4int_E
N9Scaleform3GFx3AS314InstanceTraits2fl4uintE
N9Scaleform3GFx3AS314InstanceTraits2fl5ArrayE
N9Scaleform3GFx3AS314InstanceTraits2fl5CatchE
N9Scaleform3GFx3AS314InstanceTraits2fl5ErrorE
N9Scaleform3GFx3AS314InstanceTraits2fl5QNameE
N9Scaleform3GFx3AS314InstanceTraits2fl6NumberE
N9Scaleform3GFx3AS314InstanceTraits2fl6ObjectE
N9Scaleform3GFx3AS314InstanceTraits2fl6RegExpE
N9Scaleform3GFx3AS314InstanceTraits2fl6StringE
N9Scaleform3GFx3AS314InstanceTraits2fl7BooleanE
N9Scaleform3GFx3AS314InstanceTraits2fl7XMLListE
N9Scaleform3GFx3AS314InstanceTraits2fl9NamespaceE
N9Scaleform3GFx3AS314InstanceTraits4VoidE
N9Scaleform3GFx3AS314InstanceTraits5ThunkE
N9Scaleform3GFx3AS314InstanceTraits5fl_ui11ContextMenuE
N9Scaleform3GFx3AS314InstanceTraits5fl_ui23ContextMenuBuiltInItemsE
N9Scaleform3GFx3AS314InstanceTraits5fl_ui25ContextMenuClipboardItemsE
N9Scaleform3GFx3AS314InstanceTraits6TraitsE
N9Scaleform3GFx3AS314InstanceTraits6fl_gfx10IMEEventExE
N9Scaleform3GFx3AS314InstanceTraits6fl_gfx11TextEventExE
N9Scaleform3GFx3AS314InstanceTraits6fl_gfx12FocusEventExE
N9Scaleform3GFx3AS314InstanceTraits6fl_gfx12MouseEventExE
N9Scaleform3GFx3AS314InstanceTraits6fl_gfx15KeyboardEventExE
N9Scaleform3GFx3AS314InstanceTraits6fl_gfx16MouseCursorEventE
N9Scaleform3GFx3AS314InstanceTraits6fl_gfx18GamePadAnalogEventE
N9Scaleform3GFx3AS314InstanceTraits6fl_gfx21IMECandidateListStyleE
N9Scaleform3GFx3AS314InstanceTraits6fl_net10URLRequestE
N9Scaleform3GFx3AS314InstanceTraits6fl_net12SharedObjectE
N9Scaleform3GFx3AS314InstanceTraits6fl_net12URLVariablesE
N9Scaleform3GFx3AS314InstanceTraits6fl_net13NetConnectionE
N9Scaleform3GFx3AS314InstanceTraits6fl_net16URLRequestHeaderE
N9Scaleform3GFx3AS314InstanceTraits6fl_net6SocketE
N9Scaleform3GFx3AS314InstanceTraits6fl_net9NetStreamE
N9Scaleform3GFx3AS314InstanceTraits6fl_net9URLLoaderE
N9Scaleform3GFx3AS314InstanceTraits6fl_vec10Vector_intE
N9Scaleform3GFx3AS314InstanceTraits6fl_vec11Vector_uintE
N9Scaleform3GFx3AS314InstanceTraits6fl_vec13Vector_StringE
N9Scaleform3GFx3AS314InstanceTraits6fl_vec13Vector_doubleE
N9Scaleform3GFx3AS314InstanceTraits6fl_vec13Vector_objectE
N9Scaleform3GFx3AS314InstanceTraits6fl_xml11XMLDocumentE
N9Scaleform3GFx3AS314InstanceTraits6fl_xml7XMLNodeE
N9Scaleform3GFx3AS314InstanceTraits7CTraitsE
N9Scaleform3GFx3AS314InstanceTraits7RTraitsE
N9Scaleform3GFx3AS314InstanceTraits7fl_geom14ColorTransformE
N9Scaleform3GFx3AS314InstanceTraits7fl_geom21PerspectiveProjectionE
N9Scaleform3GFx3AS314InstanceTraits7fl_geom5PointE
N9Scaleform3GFx3AS314InstanceTraits7fl_geom6MatrixE
N9Scaleform3GFx3AS314InstanceTraits7fl_geom8Matrix3DE
N9Scaleform3GFx3AS314InstanceTraits7fl_geom8Vector3DE
N9Scaleform3GFx3AS314InstanceTraits7fl_geom9RectangleE
N9Scaleform3GFx3AS314InstanceTraits7fl_geom9TransformE
N9Scaleform3GFx3AS314InstanceTraits7fl_text10StaticTextE
N9Scaleform3GFx3AS314InstanceTraits7fl_text10StyleSheetE
N9Scaleform3GFx3AS314InstanceTraits7fl_text10TextFormatE
N9Scaleform3GFx3AS314InstanceTraits7fl_text11CSMSettingsE
N9Scaleform3GFx3AS314InstanceTraits7fl_text12TextSnapshotE
N9Scaleform3GFx3AS314InstanceTraits7fl_text15TextLineMetricsE
N9Scaleform3GFx3AS314InstanceTraits7fl_text4FontE
N9Scaleform3GFx3AS314InstanceTraits7fl_text9TextFieldE
N9Scaleform3GFx3AS314InstanceTraits8FunctionE
N9Scaleform3GFx3AS314InstanceTraits8fl_media12SoundChannelE
N9Scaleform3GFx3AS314InstanceTraits8fl_media14SoundTransformE
N9Scaleform3GFx3AS314InstanceTraits8fl_media18SoundLoaderContextE
N9Scaleform3GFx3AS314InstanceTraits8fl_media5SoundE
N9Scaleform3GFx3AS314InstanceTraits8fl_media5VideoE
N9Scaleform3GFx3AS314InstanceTraits8fl_media7ID3InfoE
N9Scaleform3GFx3AS314InstanceTraits8fl_utils10DictionaryE
N9Scaleform3GFx3AS314InstanceTraits8fl_utils5TimerE
N9Scaleform3GFx3AS314InstanceTraits8fl_utils9ByteArrayE
N9Scaleform3GFx3AS314InstanceTraits9AnonimousE
N9Scaleform3GFx3AS314InstanceTraits9InterfaceE
N9Scaleform3GFx3AS314InstanceTraits9MethodIndE
N9Scaleform3GFx3AS314InstanceTraits9PrototypeE
N9Scaleform3GFx3AS314InstanceTraits9VTableIndE
N9Scaleform3GFx3AS314InstanceTraits9fl_events10ErrorEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events10FocusEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events10MouseEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events10TimerEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events10TouchEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events12GestureEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events12IOErrorEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events13KeyboardEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events13ProgressEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events14NetStatusEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events15AsyncErrorEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events15EventDispatcherE
N9Scaleform3GFx3AS314InstanceTraits9fl_events17AppLifecycleEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events21StageOrientationEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events21TransformGestureEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events23PressAndTapGestureEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events5EventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events8IMEEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_events9TextEventE
N9Scaleform3GFx3AS314InstanceTraits9fl_system13LoaderContextE
N9Scaleform3GFx3AS314InstanceTraits9fl_system14SecurityDomainE
N9Scaleform3GFx3AS314InstanceTraits9fl_system17ApplicationDomainE
N9Scaleform3GFx3AS314InstanceTraits9fl_system6DomainE
N9Scaleform3GFx3AS314LoadQueueEntryE
N9Scaleform3GFx3AS314RefCountBaseGCILi328EEE
N9Scaleform3GFx3AS314XMLSupportImplE
N9Scaleform3GFx3AS315GASRefCountBaseE
N9Scaleform3GFx3AS315NotifyLoadInitCE
N9Scaleform3GFx3AS315PtrReleaseProxyILi328EEE
N9Scaleform3GFx3AS316MovieDefRootNodeE
N9Scaleform3GFx3AS317AvmInteractiveObjE
N9Scaleform3GFx3AS317AvmVideoCharacterE
N9Scaleform3GFx3AS317MemoryContextImpl9HeapLimitE
N9Scaleform3GFx3AS317MemoryContextImplE
N9Scaleform3GFx3AS317RefCountCollectorILi328EE12ListRootNodeE
N9Scaleform3GFx3AS317RefCountCollectorILi328EEE
N9Scaleform3GFx3AS318ClassCallConstructE
N9Scaleform3GFx3AS318NetStreamInterfaceE
N9Scaleform3GFx3AS318SwfVideoSyncObjectE
N9Scaleform3GFx3AS319ASRefCountCollectorE
N9Scaleform3GFx3AS319UserDefinedFunctionE
N9Scaleform3GFx3AS320ASSharedObjectLoaderE
N9Scaleform3GFx3AS322AvmDisplayObjContainerE
N9Scaleform3GFx3AS322VideoProviderNetStreamE
N9Scaleform3GFx3AS324NamespaceInstanceFactoryE
N9Scaleform3GFx3AS324TextSnapshotGlyphVisitorE
N9Scaleform3GFx3AS326LoadQueueEntryMT_LoadMovieE
N9Scaleform3GFx3AS327NotifyLoadInitCandidateListE
N9Scaleform3GFx3AS328AS3ByteArray_DIPixelProviderE
N9Scaleform3GFx3AS329AS3Vectoruint_DIPixelProviderE
N9Scaleform3GFx3AS32VME
N9Scaleform3GFx3AS33Abc4CodeE
N9Scaleform3GFx3AS33Abc4FileE
N9Scaleform3GFx3AS34ASVM19AbcFileWithMovieDefE
N9Scaleform3GFx3AS34ASVME
N9Scaleform3GFx3AS34Impl17ValuePtrCollectorE
N9Scaleform3GFx3AS34Impl18Value2StrCollectorE
N9Scaleform3GFx3AS34Impl21Value2NumberCollectorE
N9Scaleform3GFx3AS34Impl9ArrayFuncE
N9Scaleform3GFx3AS35ClassE
N9Scaleform3GFx3AS35DoAbcE
N9Scaleform3GFx3AS35SlotsE
N9Scaleform3GFx3AS35StageE
N9Scaleform3GFx3AS36ObjectE
N9Scaleform3GFx3AS36TracerE
N9Scaleform3GFx3AS36TraitsE
N9Scaleform3GFx3AS36VMFileE
N9Scaleform3GFx3AS37Classes10ClassClassE
N9Scaleform3GFx3AS37Classes10fl_display10JointStyleE
N9Scaleform3GFx3AS37Classes10fl_display10LoaderInfoE
N9Scaleform3GFx3AS37Classes10fl_display10SWFVersionE
N9Scaleform3GFx3AS37Classes10fl_display10StageAlignE
N9Scaleform3GFx3AS37Classes10fl_display12GradientTypeE
N9Scaleform3GFx3AS37Classes10fl_display12SpreadMethodE
N9Scaleform3GFx3AS37Classes10fl_display12StageQualityE
N9Scaleform3GFx3AS37Classes10fl_display13LineScaleModeE
N9Scaleform3GFx3AS37Classes10fl_display13PixelSnappingE
N9Scaleform3GFx3AS37Classes10fl_display14StageScaleModeE
N9Scaleform3GFx3AS37Classes10fl_display17BitmapDataChannelE
N9Scaleform3GFx3AS37Classes10fl_display17StageDisplayStateE
N9Scaleform3GFx3AS37Classes10fl_display19ActionScriptVersionE
N9Scaleform3GFx3AS37Classes10fl_display19InterpolationMethodE
N9Scaleform3GFx3AS37Classes10fl_display5StageE
N9Scaleform3GFx3AS37Classes10fl_display9BlendModeE
N9Scaleform3GFx3AS37Classes10fl_display9CapsStyleE
N9Scaleform3GFx3AS37Classes10fl_filters16BitmapFilterTypeE
N9Scaleform3GFx3AS37Classes10fl_filters19BitmapFilterQualityE
N9Scaleform3GFx3AS37Classes10fl_filters25DisplacementMapFilterModeE
N9Scaleform3GFx3AS37Classes11UserDefinedE
N9Scaleform3GFx3AS37Classes11fl_external17ExternalInterfaceE
N9Scaleform3GFx3AS37Classes16fl_accessibility13AccessibilityE
N9Scaleform3GFx3AS37Classes2fl3XMLE
N9Scaleform3GFx3AS37Classes2fl4DateE
N9Scaleform3GFx3AS37Classes2fl4MathE
N9Scaleform3GFx3AS37Classes2fl4int_E
N9Scaleform3GFx3AS37Classes2fl4uintE
N9Scaleform3GFx3AS37Classes2fl5ArrayE
N9Scaleform3GFx3AS37Classes2fl5CatchE
N9Scaleform3GFx3AS37Classes2fl5ErrorE
N9Scaleform3GFx3AS37Classes2fl5QNameE
N9Scaleform3GFx3AS37Classes2fl6NumberE
N9Scaleform3GFx3AS37Classes2fl6ObjectE
N9Scaleform3GFx3AS37Classes2fl6RegExpE
N9Scaleform3GFx3AS37Classes2fl6StringE
N9Scaleform3GFx3AS37Classes2fl7BooleanE
N9Scaleform3GFx3AS37Classes2fl7XMLListE
N9Scaleform3GFx3AS37Classes2fl9NamespaceE
N9Scaleform3GFx3AS37Classes5fl_ui10MultitouchE
N9Scaleform3GFx3AS37Classes5fl_ui11KeyLocationE
N9Scaleform3GFx3AS37Classes5fl_ui11MouseCursorE
N9Scaleform3GFx3AS37Classes5fl_ui19MultitouchInputModeE
N9Scaleform3GFx3AS37Classes5fl_ui5MouseE
N9Scaleform3GFx3AS37Classes5fl_ui8KeyboardE
N9Scaleform3GFx3AS37Classes6UDBaseE
N9Scaleform3GFx3AS37Classes6fl_gfx10ExtensionsE
N9Scaleform3GFx3AS37Classes6fl_gfx10IMEEventExE
N9Scaleform3GFx3AS37Classes6fl_gfx11TextEventExE
N9Scaleform3GFx3AS37Classes6fl_gfx11TextFieldExE
N9Scaleform3GFx3AS37Classes6fl_gfx12FocusManagerE
N9Scaleform3GFx3AS37Classes6fl_gfx12MouseEventExE
N9Scaleform3GFx3AS37Classes6fl_gfx15DisplayObjectExE
N9Scaleform3GFx3AS37Classes6fl_gfx16MouseCursorEventE
N9Scaleform3GFx3AS37Classes6fl_gfx18GamePadAnalogEventE
N9Scaleform3GFx3AS37Classes6fl_gfx19InteractiveObjectExE
N9Scaleform3GFx3AS37Classes6fl_gfx5IMEExE
N9Scaleform3GFx3AS37Classes6fl_gfx7GamePadE
N9Scaleform3GFx3AS37Classes6fl_gfx8SystemExE
N9Scaleform3GFx3AS37Classes6fl_net12SharedObjectE
N9Scaleform3GFx3AS37Classes6fl_net14ObjectEncodingE
N9Scaleform3GFx3AS37Classes6fl_net16URLRequestMethodE
N9Scaleform3GFx3AS37Classes6fl_net19URLLoaderDataFormatE
N9Scaleform3GFx3AS37Classes6fl_net23SharedObjectFlushStatusE
N9Scaleform3GFx3AS37Classes6fl_net9NetStreamE
N9Scaleform3GFx3AS37Classes6fl_vec10Vector_intE
N9Scaleform3GFx3AS37Classes6fl_vec11Vector_uintE
N9Scaleform3GFx3AS37Classes6fl_vec13Vector_StringE
N9Scaleform3GFx3AS37Classes6fl_vec13Vector_doubleE
N9Scaleform3GFx3AS37Classes6fl_vec13Vector_objectE
N9Scaleform3GFx3AS37Classes6fl_vec6VectorE
N9Scaleform3GFx3AS37Classes6fl_xml11XMLNodeTypeE
N9Scaleform3GFx3AS37Classes7fl_geom5PointE
N9Scaleform3GFx3AS37Classes7fl_geom8Vector3DE
N9Scaleform3GFx3AS37Classes7fl_text11GridFitTypeE
N9Scaleform3GFx3AS37Classes7fl_text12TextRendererE
N9Scaleform3GFx3AS37Classes7fl_text13AntiAliasTypeE
N9Scaleform3GFx3AS37Classes7fl_text13TextColorTypeE
N9Scaleform3GFx3AS37Classes7fl_text13TextFieldTypeE
N9Scaleform3GFx3AS37Classes7fl_text15TextDisplayModeE
N9Scaleform3GFx3AS37Classes7fl_text15TextFormatAlignE
N9Scaleform3GFx3AS37Classes7fl_text17TextFieldAutoSizeE
N9Scaleform3GFx3AS37Classes7fl_text4FontE
N9Scaleform3GFx3AS37Classes7fl_text8FontTypeE
N9Scaleform3GFx3AS37Classes7fl_text9FontStyleE
N9Scaleform3GFx3AS37Classes8FunctionE
N9Scaleform3GFx3AS37Classes8fl_media10MicrophoneE
N9Scaleform3GFx3AS37Classes8fl_media10SoundMixerE
N9Scaleform3GFx3AS37Classes8fl_media6CameraE
N9Scaleform3GFx3AS37Classes8fl_utils6EndianE
N9Scaleform3GFx3AS37Classes8fl_utils9ByteArrayE
N9Scaleform3GFx3AS37Classes9fl_events10ErrorEventE
N9Scaleform3GFx3AS37Classes9fl_events10EventPhaseE
N9Scaleform3GFx3AS37Classes9fl_events10FocusEventE
N9Scaleform3GFx3AS37Classes9fl_events10MouseEventE
N9Scaleform3GFx3AS37Classes9fl_events10TimerEventE
N9Scaleform3GFx3AS37Classes9fl_events10TouchEventE
N9Scaleform3GFx3AS37Classes9fl_events11StatusEventE
N9Scaleform3GFx3AS37Classes9fl_events12GestureEventE
N9Scaleform3GFx3AS37Classes9fl_events12GesturePhaseE
N9Scaleform3GFx3AS37Classes9fl_events12IOErrorEventE
N9Scaleform3GFx3AS37Classes9fl_events13ActivityEventE
N9Scaleform3GFx3AS37Classes9fl_events13KeyboardEventE
N9Scaleform3GFx3AS37Classes9fl_events13ProgressEventE
N9Scaleform3GFx3AS37Classes9fl_events14NetStatusEventE
N9Scaleform3GFx3AS37Classes9fl_events15AsyncErrorEventE
N9Scaleform3GFx3AS37Classes9fl_events15EventDispatcherE
N9Scaleform3GFx3AS37Classes9fl_events15FullScreenEventE
N9Scaleform3GFx3AS37Classes9fl_events15HTTPStatusEventE
N9Scaleform3GFx3AS37Classes9fl_events16ContextMenuEventE
N9Scaleform3GFx3AS37Classes9fl_events16StageOrientationE
N9Scaleform3GFx3AS37Classes9fl_events17AppLifecycleEventE
N9Scaleform3GFx3AS37Classes9fl_events18SecurityErrorEventE
N9Scaleform3GFx3AS37Classes9fl_events21StageOrientationEventE
N9Scaleform3GFx3AS37Classes9fl_events21TransformGestureEventE
N9Scaleform3GFx3AS37Classes9fl_events23PressAndTapGestureEventE
N9Scaleform3GFx3AS37Classes9fl_events5EventE
N9Scaleform3GFx3AS37Classes9fl_events8IMEEventE
N9Scaleform3GFx3AS37Classes9fl_events9DataEventE
N9Scaleform3GFx3AS37Classes9fl_events9SyncEventE
N9Scaleform3GFx3AS37Classes9fl_events9TextEventE
N9Scaleform3GFx3AS37Classes9fl_system12CapabilitiesE
N9Scaleform3GFx3AS37Classes9fl_system13SecurityPanelE
N9Scaleform3GFx3AS37Classes9fl_system14SecurityDomainE
N9Scaleform3GFx3AS37Classes9fl_system17ApplicationDomainE
N9Scaleform3GFx3AS37Classes9fl_system17IMEConversionModeE
N9Scaleform3GFx3AS37Classes9fl_system3IMEE
N9Scaleform3GFx3AS37Classes9fl_system6DomainE
N9Scaleform3GFx3AS37Classes9fl_system6SystemE
N9Scaleform3GFx3AS37Classes9fl_system8SecurityE
N9Scaleform3GFx3AS37FlashUIE
N9Scaleform3GFx3AS38AvmStageE
N9Scaleform3GFx3AS38InstanceE
N9Scaleform3GFx3AS39ArrayBaseE
N9Scaleform3GFx3AS39AvmBitmapE
N9Scaleform3GFx3AS39AvmButtonE
N9Scaleform3GFx3AS39AvmLoaderE
N9Scaleform3GFx3AS39AvmSpriteE
N9Scaleform3GFx3AS39Instances10fl_display10BitmapDataE
N9Scaleform3GFx3AS39Instances10fl_display10FrameLabelE
N9Scaleform3GFx3AS39Instances10fl_display10LoaderInfoE
N9Scaleform3GFx3AS39Instances10fl_display10MorphShapeE
N9Scaleform3GFx3AS39Instances10fl_display12SimpleButtonE
N9Scaleform3GFx3AS39Instances10fl_display13DisplayObjectE
N9Scaleform3GFx3AS39Instances10fl_display17InteractiveObjectE
N9Scaleform3GFx3AS39Instances10fl_display22DisplayObjectContainerE
N9Scaleform3GFx3AS39Instances10fl_display5SceneE
N9Scaleform3GFx3AS39Instances10fl_display5ShapeE
N9Scaleform3GFx3AS39Instances10fl_display5StageE
N9Scaleform3GFx3AS39Instances10fl_display6BitmapE
N9Scaleform3GFx3AS39Instances10fl_display6LoaderE
N9Scaleform3GFx3AS39Instances10fl_display6SpriteE
N9Scaleform3GFx3AS39Instances10fl_display8GraphicsE
N9Scaleform3GFx3AS39Instances10fl_display9AVM1MovieE
N9Scaleform3GFx3AS39Instances10fl_display9MovieClipE
N9Scaleform3GFx3AS39Instances10fl_filters10BlurFilterE
N9Scaleform3GFx3AS39Instances10fl_filters10GlowFilterE
N9Scaleform3GFx3AS39Instances10fl_filters11BevelFilterE
N9Scaleform3GFx3AS39Instances10fl_filters12BitmapFilterE
N9Scaleform3GFx3AS39Instances10fl_filters16DropShadowFilterE
N9Scaleform3GFx3AS39Instances10fl_filters17ColorMatrixFilterE
N9Scaleform3GFx3AS39Instances11CheckTypeTFE
N9Scaleform3GFx3AS39Instances11FunctionAOTE
N9Scaleform3GFx3AS39Instances12FunctionBaseE
N9Scaleform3GFx3AS39Instances13ThunkFunctionE
N9Scaleform3GFx3AS39Instances16fl_accessibility23AccessibilityPropertiesE
N9Scaleform3GFx3AS39Instances16fl_accessibility27AccessibilityImplementationE
N9Scaleform3GFx3AS39Instances2fl10XMLCommentE
N9Scaleform3GFx3AS39Instances2fl10XMLElement8CallBackE
N9Scaleform3GFx3AS39Instances2fl10XMLElementE
N9Scaleform3GFx3AS39Instances2fl12AttrGetFirstE
N9Scaleform3GFx3AS39Instances2fl12GlobalObjectE
N9Scaleform3GFx3AS39Instances2fl12XMLProcInstrE
N9Scaleform3GFx3AS39Instances2fl13ChildGetFirstE
N9Scaleform3GFx3AS39Instances2fl13EmptyCallBackE
N9Scaleform3GFx3AS39Instances2fl15GlobalObjectCPPE
N9Scaleform3GFx3AS39Instances2fl18GlobalObjectScriptE
N9Scaleform3GFx3AS39Instances2fl3XMLE
N9Scaleform3GFx3AS39Instances2fl4DateE
N9Scaleform3GFx3AS39Instances2fl5ArrayE
N9Scaleform3GFx3AS39Instances2fl5CatchE
N9Scaleform3GFx3AS39Instances2fl5ErrorE
N9Scaleform3GFx3AS39Instances2fl5QNameE
N9Scaleform3GFx3AS39Instances2fl6ObjectE
N9Scaleform3GFx3AS39Instances2fl6RegExpE
N9Scaleform3GFx3AS39Instances2fl7AttrGetE
N9Scaleform3GFx3AS39Instances2fl7ListGetE
N9Scaleform3GFx3AS39Instances2fl7XMLAttrE
N9Scaleform3GFx3AS39Instances2fl7XMLList8CallBackE
N9Scaleform3GFx3AS39Instances2fl7XMLListE
N9Scaleform3GFx3AS39Instances2fl7XMLTextE
N9Scaleform3GFx3AS39Instances2fl8ChildGetE
N9Scaleform3GFx3AS39Instances2fl9NamespaceE
N9Scaleform3GFx3AS39Instances5fl_ui11ContextMenuE
N9Scaleform3GFx3AS39Instances5fl_ui23ContextMenuBuiltInItemsE
N9Scaleform3GFx3AS39Instances5fl_ui25ContextMenuClipboardItemsE
N9Scaleform3GFx3AS39Instances6fl_gfx10IMEEventExE
N9Scaleform3GFx3AS39Instances6fl_gfx11TextEventExE
N9Scaleform3GFx3AS39Instances6fl_gfx12FocusEventExE
N9Scaleform3GFx3AS39Instances6fl_gfx12MouseEventExE
N9Scaleform3GFx3AS39Instances6fl_gfx15KeyboardEventExE
N9Scaleform3GFx3AS39Instances6fl_gfx16MouseCursorEventE
N9Scaleform3GFx3AS39Instances6fl_gfx18GamePadAnalogEventE
N9Scaleform3GFx3AS39Instances6fl_gfx21IMECandidateListStyleE
N9Scaleform3GFx3AS39Instances6fl_net10URLRequestE
N9Scaleform3GFx3AS39Instances6fl_net12SharedObjectE
N9Scaleform3GFx3AS39Instances6fl_net12URLVariablesE
N9Scaleform3GFx3AS39Instances6fl_net13NetConnectionE
N9Scaleform3GFx3AS39Instances6fl_net16URLRequestHeaderE
N9Scaleform3GFx3AS39Instances6fl_net6SocketE
N9Scaleform3GFx3AS39Instances6fl_net9NetStream13EventHandlersE
N9Scaleform3GFx3AS39Instances6fl_net9NetStreamE
N9Scaleform3GFx3AS39Instances6fl_net9URLLoaderE
N9Scaleform3GFx3AS39Instances6fl_vec10Vector_intE
N9Scaleform3GFx3AS39Instances6fl_vec11Vector_uintE
N9Scaleform3GFx3AS39Instances6fl_vec13Vector_StringE
N9Scaleform3GFx3AS39Instances6fl_vec13Vector_doubleE
N9Scaleform3GFx3AS39Instances6fl_vec13Vector_objectE
N9Scaleform3GFx3AS39Instances6fl_xml11XMLDocumentE
N9Scaleform3GFx3AS39Instances6fl_xml7XMLNodeE
N9Scaleform3GFx3AS39Instances7fl_geom14ColorTransformE
N9Scaleform3GFx3AS39Instances7fl_geom21PerspectiveProjectionE
N9Scaleform3GFx3AS39Instances7fl_geom5PointE
N9Scaleform3GFx3AS39Instances7fl_geom6MatrixE
N9Scaleform3GFx3AS39Instances7fl_geom8Matrix3DE
N9Scaleform3GFx3AS39Instances7fl_geom8Vector3DE
N9Scaleform3GFx3AS39Instances7fl_geom9RectangleE
N9Scaleform3GFx3AS39Instances7fl_geom9TransformE
N9Scaleform3GFx3AS39Instances7fl_text10StaticTextE
N9Scaleform3GFx3AS39Instances7fl_text10StyleSheetE
N9Scaleform3GFx3AS39Instances7fl_text10TextFormatE
N9Scaleform3GFx3AS39Instances7fl_text11CSMSettingsE
N9Scaleform3GFx3AS39Instances7fl_text12TextSnapshotE
N9Scaleform3GFx3AS39Instances7fl_text15TextLineMetricsE
N9Scaleform3GFx3AS39Instances7fl_text4FontE
N9Scaleform3GFx3AS39Instances7fl_text9TextFieldE
N9Scaleform3GFx3AS39Instances8FunctionE
N9Scaleform3GFx3AS39Instances8fl_media12SoundChannelE
N9Scaleform3GFx3AS39Instances8fl_media14SoundTransformE
N9Scaleform3GFx3AS39Instances8fl_media18SoundLoaderContextE
N9Scaleform3GFx3AS39Instances8fl_media5SoundE
N9Scaleform3GFx3AS39Instances8fl_media5VideoE
N9Scaleform3GFx3AS39Instances8fl_media7ID3InfoE
N9Scaleform3GFx3AS39Instances8fl_utils10DictionaryE
N9Scaleform3GFx3AS39Instances8fl_utils5TimerE
N9Scaleform3GFx3AS39Instances8fl_utils9ByteArrayE
N9Scaleform3GFx3AS39Instances9fl_events10ErrorEventE
N9Scaleform3GFx3AS39Instances9fl_events10FocusEventE
N9Scaleform3GFx3AS39Instances9fl_events10MouseEventE
N9Scaleform3GFx3AS39Instances9fl_events10TimerEventE
N9Scaleform3GFx3AS39Instances9fl_events10TouchEventE
N9Scaleform3GFx3AS39Instances9fl_events12GestureEventE
N9Scaleform3GFx3AS39Instances9fl_events12IOErrorEventE
N9Scaleform3GFx3AS39Instances9fl_events13KeyboardEventE
N9Scaleform3GFx3AS39Instances9fl_events13ProgressEventE
N9Scaleform3GFx3AS39Instances9fl_events14NetStatusEventE
N9Scaleform3GFx3AS39Instances9fl_events15AsyncErrorEventE
N9Scaleform3GFx3AS39Instances9fl_events15EventDispatcherE
N9Scaleform3GFx3AS39Instances9fl_events17AppLifecycleEventE
N9Scaleform3GFx3AS39Instances9fl_events21StageOrientationEventE
N9Scaleform3GFx3AS39Instances9fl_events21TransformGestureEventE
N9Scaleform3GFx3AS39Instances9fl_events23PressAndTapGestureEventE
N9Scaleform3GFx3AS39Instances9fl_events5EventE
N9Scaleform3GFx3AS39Instances9fl_events8IMEEventE
N9Scaleform3GFx3AS39Instances9fl_events9TextEventE
N9Scaleform3GFx3AS39Instances9fl_system13LoaderContextE
N9Scaleform3GFx3AS39Instances9fl_system14SecurityDomainE
N9Scaleform3GFx3AS39Instances9fl_system17ApplicationDomainE
N9Scaleform3GFx3AS39Instances9fl_system6DomainE
N9Scaleform3GFx3AS39MovieRoot13StickyVarNodeE
N9Scaleform3GFx3AS39MovieRootE
N9Scaleform3GFx3AS39VMAbcFileE
N9Scaleform3GFx3XML10DOMBuilderE
N9Scaleform3GFx3XML11ElementNodeE
N9Scaleform3GFx3XML13ObjectManagerE
N9Scaleform3GFx3XML13ParserHandlerE
N9Scaleform3GFx3XML13ShadowRefBaseE
N9Scaleform3GFx3XML4NodeE
N9Scaleform3GFx3XML6PrefixE
N9Scaleform3GFx3XML8DocumentE
N9Scaleform3GFx3XML8RootNodeE
N9Scaleform3GFx3XML8TextNodeE
N9Scaleform3GFx4TaskE
N9Scaleform3GFx4Text10CSSHandlerIwEE
N9Scaleform3GFx4Text12StyleManagerE
N9Scaleform3GFx4Text17CompositionStringE
N9Scaleform3GFx4Text22TextStyleParserHandlerIwEE
N9Scaleform3GFx4Text26TextStyleParserHandlerBaseE
N9Scaleform3GFx4Text9EditorKitE
N9Scaleform3GFx5MovieE
N9Scaleform3GFx5StateE
N9Scaleform3GFx5Value15ObjectInterface10ArrVisitorE
N9Scaleform3GFx5Value15ObjectInterface10ObjVisitorE
N9Scaleform3GFx5Value15ObjectInterfaceE
N9Scaleform3GFx5Video10VideoImageE
N9Scaleform3GFx5Video10VideoSound9PCMStreamE
N9Scaleform3GFx5Video10VideoSoundE
N9Scaleform3GFx5Video11VideoPlayer10SyncObjectE
N9Scaleform3GFx5Video11VideoPlayerE
N9Scaleform3GFx5Video11VideoReaderE
N9Scaleform3GFx5Video12VideoDecoderE
N9Scaleform3GFx5Video13VideoProviderE
N9Scaleform3GFx5Video13VideoSoundSDLE
N9Scaleform3GFx5Video14VideoCharacterE
N9Scaleform3GFx5Video15AS2VideoSupportE
N9Scaleform3GFx5Video15AS3VideoSupportE
N9Scaleform3GFx5Video15VideoDecoderSmpE
N9Scaleform3GFx5Video15VideoReaderThrdE
N9Scaleform3GFx5Video16VideoDecoderThrdE
N9Scaleform3GFx5Video16VideoSoundStreamE
N9Scaleform3GFx5Video16VideoSoundSystemE
N9Scaleform3GFx5Video17VideoCharacterDefE
N9Scaleform3GFx5Video17VideoReaderConfigE
N9Scaleform3GFx5Video18CWebmPCMStreamImplE
N9Scaleform3GFx5Video19AS2VideoSupportImplE
N9Scaleform3GFx5Video19AS3VideoSupportImplE
N9Scaleform3GFx5Video19VideoPlayerImplWebmE
N9Scaleform3GFx5Video19VideoSoundSystemSDLE
N9Scaleform3GFx5Video20VideoReaderConfigSmpE
N9Scaleform3GFx5Video21VideoReaderConfigThrdE
N9Scaleform3GFx5Video24VideoSoundRendererStream8StreamerE
N9Scaleform3GFx5Video24VideoSoundRendererStreamE
N9Scaleform3GFx5Video30VideoSoundSystem_SoundRendererE
N9Scaleform3GFx5Video5VideoE
N9Scaleform3GFx5Video9VideoBaseE
N9Scaleform3GFx6ButtonE
N9Scaleform3GFx6LoaderE
N9Scaleform3GFx6Sprite15ActiveSoundItemE
N9Scaleform3GFx6SpriteE
N9Scaleform3GFx6StreamE
N9Scaleform3GFx7FontLibE
N9Scaleform3GFx7FontMapE
N9Scaleform3GFx7LogBaseINS0_10LoaderImplEEE
N9Scaleform3GFx7LogBaseINS0_11LoadProcessEEE
N9Scaleform3GFx7LogBaseINS0_12StateBagImplEEE
N9Scaleform3GFx7LogBaseINS0_17DisplayObjectBaseEEE
N9Scaleform3GFx7LogBaseINS0_3AS211EnvironmentEEE
N9Scaleform3GFx7LogBaseINS0_3AS212ActionLoggerEEE
N9Scaleform3GFx7LogBaseINS0_3AS26FnCallEEE
N9Scaleform3GFx7LogBaseINS0_6StreamEEE
N9Scaleform3GFx7LogBaseINS0_8LogStateEEE
N9Scaleform3GFx8DrawTextE
N9Scaleform3GFx8FontDataE
N9Scaleform3GFx8LogStateE
N9Scaleform3GFx8MovieDef15ResourceVisitorE
N9Scaleform3GFx8MovieDefE
N9Scaleform3GFx8ResourceE
N9Scaleform3GFx8StateBagE
N9Scaleform3GFx8ZLibFileE
N9Scaleform3GFx9ASSupportE
N9Scaleform3GFx9ButtonDefE
N9Scaleform3GFx9MovieImpl13StickyVarNodeE
N9Scaleform3GFx9MovieImpl17WideStringStorageE
N9Scaleform3GFx9MovieImplE
N9Scaleform3GFx9SpriteDefE
N9Scaleform3GFx9TextField13CSSHolderBaseE
N9Scaleform3GFx9TextField20TextDocumentListenerE
N9Scaleform3GFx9TextFieldE
N9Scaleform3LogE
N9Scaleform3PtrINS_3GFx3AS212SharedObjectEEE
N9Scaleform4FileE
N9Scaleform5EventE
N9Scaleform5MutexE
N9Scaleform5Sound12SoundChannelE
N9Scaleform5Sound13SoundRenderer11AuxStreamerE
N9Scaleform5Sound18SoundChannelSystemE
N9Scaleform5Sound20SoundChannelDelegateE
N9Scaleform6Render10BlurFilterE
N9Scaleform6Render10GlowFilterE
N9Scaleform6Render10GlyphCache13EvictNotifierE
N9Scaleform6Render10GlyphCacheE
N9Scaleform6Render10GlyphShapeE
N9Scaleform6Render10MaskBundleE
N9Scaleform6Render10MaskEffectE
N9Scaleform6Render10MeshBufferE
N9Scaleform6Render10MeshKeySetE
N9Scaleform6Render10RasterizerE
N9Scaleform6Render10RenderSyncE
N9Scaleform6Render10Renderer2DE
N9Scaleform6Render10SKI_FilterE
N9Scaleform6Render10TextLayoutE
N9Scaleform6Render10VertexPathE
N9Scaleform6Render11BevelFilterE
N9Scaleform6Render11CacheEffectE
N9Scaleform6Render11ComplexFillE
N9Scaleform6Render11ComplexMeshE
N9Scaleform6Render11ContextImpl11ContextLockE
N9Scaleform6Render11ContextImpl12RenderNotify14ServiceCommandE
N9Scaleform6Render11ContextImpl12RenderNotifyE
N9Scaleform6Render11ContextImpl20ContextCaptureNotifyE
N9Scaleform6Render11ContextImpl21ContextData_ImplMixinINS0_13TreeContainer8NodeDataENS0_8TreeNode8NodeDataEEE
N9Scaleform6Render11ContextImpl21ContextData_ImplMixinINS0_8TreeRoot8NodeDataENS0_13TreeContainer8NodeDataEEE
N9Scaleform6Render11ContextImpl21ContextData_ImplMixinINS0_8TreeText8NodeDataENS0_8TreeNode8NodeDataEEE
N9Scaleform6Render11ContextImpl21ContextData_ImplMixinINS0_9TreeShape8NodeDataENS0_8TreeNode8NodeDataEEE
N9Scaleform6Render11ContextImpl8RTHandle10HandleDataE
N9Scaleform6Render11ContextImpl9EntryDataE
N9Scaleform6Render11GlyphFitterE
N9Scaleform6Render11GlyphRasterE
N9Scaleform6Render11ImageSourceE
N9Scaleform6Render11ImageUpdateE
N9Scaleform6Render11MatrixStateE
N9Scaleform6Render11RenderEventE
N9Scaleform6Render11SKI_MaskEnd12RQII_EndMaskE
N9Scaleform6Render11SKI_MaskEndE
N9Scaleform6Render11TessellatorE
N9Scaleform6Render12FilterBundleE
N9Scaleform6Render12FilterEffectE
N9Scaleform6Render12GradientDataE
N9Scaleform6Render12Matrix3x4RefIfEE
N9Scaleform6Render12Matrix4x4RefIfEE
N9Scaleform6Render12MeshProviderE
N9Scaleform6Render12RenderBuffer16RenderTargetDataE
N9Scaleform6Render12RenderBufferE
N9Scaleform6Render12RenderTargetE
N9Scaleform6Render12SKI_UserDataE
N9Scaleform6Render12ShadowFilterE
N9Scaleform6Render12StrokeScalerE
N9Scaleform6Render12StrokeSorterE
N9Scaleform6Render12StrokerTypesE
N9Scaleform6Render12TextureGlyphE
N9Scaleform6Render12TextureImageE
N9Scaleform6Render12VertexOutputE
N9Scaleform6Render13DICommandImplINS0_14DICommand_DrawENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_15DICommand_ClearENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_15DICommand_NoiseENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_17DICommand_HitTestENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_18DICommand_FillRectENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_19DICommand_FloodFillENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_19DICommand_GetPixelsENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_19DICommand_HistogramENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_19DICommand_SetPixelsENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_20DICommand_GetPixel32ENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_20DICommand_SetPixel32ENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_21DICommand_PerlinNoiseENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_23DICommand_CreateTextureENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_23DICommand_PixelDissolveENS0_9DICommandEEE
N9Scaleform6Render13DICommandImplINS0_28DICommand_GetColorBoundsRectENS0_9DICommandEEE
N9Scaleform6Render13DrawableImageE
N9Scaleform6Render13GradientImageE
N9Scaleform6Render13ImageDelegateE
N9Scaleform6Render13ImageSwizzlerE
N9Scaleform6Render13MaskNodeState9InterfaceE
N9Scaleform6Render13MaskPrimitiveE
N9Scaleform6Render13Matrix3x4DataIfEE
N9Scaleform6Render13Matrix4x4DataIfEE
N9Scaleform6Render13PrimitiveFillE
N9Scaleform6Render13RBGenericImpl12RenderTargetE
N9Scaleform6Render13RBGenericImpl18DepthStencilBufferE
N9Scaleform6Render13RBGenericImpl19RenderBufferManagerE
N9Scaleform6Render13RBGenericImpl9CacheDataE
N9Scaleform6Render13SKI_BlendMode14RQII_BlendModeE
N9Scaleform6Render13SKI_BlendModeE
N9Scaleform6Render13SKI_MaskStartE
N9Scaleform6Render13SKI_PrimitiveE
N9Scaleform6Render13TextureFormatE
N9Scaleform6Render13ThreadCommandE
N9Scaleform6Render13TreeCacheNodeE
N9Scaleform6Render13TreeCacheRootE
N9Scaleform6Render13TreeCacheTextE
N9Scaleform6Render13TreeContainer8NodeDataE
N9Scaleform6Render13UserDataState4DataE
N9Scaleform6Render14BlurFilterImplE
N9Scaleform6Render14DICommandQueue14ExecuteCommandE
N9Scaleform6Render14DICommandQueueE
N9Scaleform6Render14DICommand_DrawE
N9Scaleform6Render14DrawableBundleE
N9Scaleform6Render14MatrixPoolImpl10MatrixPoolE
N9Scaleform6Render14MeshKeyManagerE
N9Scaleform6Render14MorphShapeDataE
N9Scaleform6Render14Renderer2DImplE
N9Scaleform6Render14Scale9GridDataE
N9Scaleform6Render14Scale9GridInfoE
N9Scaleform6Render14Scale9GridRectE
N9Scaleform6Render14ShapeDataFloatE
N9Scaleform6Render14StereoImplBaseE
N9Scaleform6Render14TextureManager14ServiceCommandE
N9Scaleform6Render14TextureManagerE
N9Scaleform6Render14TreeCacheShapeE
N9Scaleform6Render14UserDataBundleE
N9Scaleform6Render14UserDataEffectE
N9Scaleform6Render15BlendModeEffectE
N9Scaleform6Render15DICommand_ClearE
N9Scaleform6Render15DICommand_MergeE
N9Scaleform6Render15DICommand_NoiseE
N9Scaleform6Render15FileImageSourceE
N9Scaleform6Render15FilterPrimitiveE
N9Scaleform6Render15ImageFileReaderE
N9Scaleform6Render15ImageFileWriterE
N9Scaleform6Render15ImageUpdateSyncE
N9Scaleform6Render15MeshCacheConfigE
N9Scaleform6Render15MeshStagingNodeE
N9Scaleform6Render15PrimitiveBundleE
N9Scaleform6Render15RenderQueueItem9InterfaceE
N9Scaleform6Render15ShapeDataPackedINS_11ArrayLH_PODIhLi2ENS_18ArrayDefaultPolicyEEEEE
N9Scaleform6Render15ShapeDataPackedINS_7ArrayDHIhLi2ENS_18ArrayDefaultPolicyEEEEE
N9Scaleform6Render15TransformerBaseE
N9Scaleform6Render16DICommand_ScrollE
N9Scaleform6Render16GlyphCacheConfigE
N9Scaleform6Render16ImageFileHandlerE
N9Scaleform6Render16MeshVertexOutputE
N9Scaleform6Render16SKI_ViewMatrix3DE
N9Scaleform6Render16ShapeDataFloatMPE
N9Scaleform6Render16SortKeyInterfaceE
N9Scaleform6Render16TextMeshProviderE
N9Scaleform6Render16VectorGlyphShapeE
N9Scaleform6Render17ColorMatrixFilterE
N9Scaleform6Render17DICommand_CompareE
N9Scaleform6Render17DICommand_HitTestE
N9Scaleform6Render17GlyphTextureImageE
N9Scaleform6Render17HALEndDisplayItemE
N9Scaleform6Render17MappedTextureBaseE
N9Scaleform6Render17MemoryBufferImageE
N9Scaleform6Render17MorphInterpolatorE
N9Scaleform6Render17SKI_TextPrimitiveE
N9Scaleform6Render17ShapeMeshProviderE
N9Scaleform6Render17TreeCacheMeshBaseE
N9Scaleform6Render17UserDataPrimitiveE
N9Scaleform6Render18DICommand_FillRectE
N9Scaleform6Render18DepthStencilBufferE
N9Scaleform6Render18GlyphEvictNotifierE
N9Scaleform6Render18ShapeDataInterfaceE
N9Scaleform6Render18SystemVertexFormatE
N9Scaleform6Render18TextLayerPrimitiveE
N9Scaleform6Render18ThreadCommandQueueE
N9Scaleform6Render18TransformerWrapperINS0_14Scale9GridInfoEEE
N9Scaleform6Render18TransformerWrapperINS0_9Matrix2x4IfEEEE
N9Scaleform6Render18TreeCacheContainerE
N9Scaleform6Render18ViewMatrix3DBundleE
N9Scaleform6Render18ViewMatrix3DEffectE
N9Scaleform6Render18WrapperImageSourceE
N9Scaleform6Render19CacheAsBitmapFilterE
N9Scaleform6Render19DICommand_FloodFillE
N9Scaleform6Render19DICommand_GetPixelsE
N9Scaleform6Render19DICommand_HistogramE
N9Scaleform6Render19DICommand_SetPixelsE
N9Scaleform6Render19DICommand_ThresholdE
N9Scaleform6Render19DepthStencilSurfaceE
N9Scaleform6Render19HALBeginDisplayItemE
N9Scaleform6Render19MeshProvider_RCImplE
N9Scaleform6Render19RenderBufferManagerE
N9Scaleform6Render19ShapeDataFloatTemplINS_11ArrayLH_PODIhLi2ENS_18ArrayDefaultPolicyEEEEE
N9Scaleform6Render19ShapeDataFloatTemplINS_5ArrayIhLi2ENS_18ArrayDefaultPolicyEEEEE
N9Scaleform6Render19TextPrimitiveBundleE
N9Scaleform6Render19TextureManagerLocksE
N9Scaleform6Render19TreeCacheShapeLayerE
N9Scaleform6Render20DICommand_CopyPixelsE
N9Scaleform6Render20DICommand_GetPixel32E
N9Scaleform6Render20DICommand_PaletteMapE
N9Scaleform6Render20DICommand_SetPixel32E
N9Scaleform6Render20DICommand_SourceRectE
N9Scaleform6Render20DrawableImageContextE
N9Scaleform6Render20PrimitiveFillManagerE
N9Scaleform6Render20SKI_ComplexPrimitiveE
N9Scaleform6Render21DICommand_ApplyFilterE
N9Scaleform6Render21DICommand_CopyChannelE
N9Scaleform6Render21DICommand_PerlinNoiseE
N9Scaleform6Render21ImageFileReader_MixinINS0_3DDS10FileReaderENS0_15ImageFileReaderEEE
N9Scaleform6Render21ImageFileReader_MixinINS0_3PNG10FileReaderENS0_15ImageFileReaderEEE
N9Scaleform6Render21ImageFileReader_MixinINS0_3SIF10FileReaderENS0_15ImageFileReaderEEE
N9Scaleform6Render21ImageFileReader_MixinINS0_3TGA10FileReaderENS0_15ImageFileReaderEEE
N9Scaleform6Render21ImageFileReader_MixinINS0_4JPEG10FileReaderENS2_14AbstractReaderEEE
N9Scaleform6Render21ImageFileWriter_MixinINS0_3PNG10FileWriterENS0_15ImageFileWriterEEE
N9Scaleform6Render21OrigScale9ParentState9InterfaceE
N9Scaleform6Render21ViewMatrix3DPrimitiveE
N9Scaleform6Render22ComplexPrimitiveBundleE
N9Scaleform6Render22FontCacheHandleManagerE
N9Scaleform6Render22SKI_ProjectionMatrix3DE
N9Scaleform6Render23ComplexMeshVertexOutputE
N9Scaleform6Render23DICommand_CreateTextureE
N9Scaleform6Render23DICommand_PixelDissolveE
N9Scaleform6Render23MeshProvider_KeySupportE
N9Scaleform6Render24DICommand_ColorTransformE
N9Scaleform6Render24DICommand_SourceRectImplINS0_15DICommand_MergeEEE
N9Scaleform6Render24DICommand_SourceRectImplINS0_16DICommand_ScrollEEE
N9Scaleform6Render24DICommand_SourceRectImplINS0_17DICommand_CompareEEE
N9Scaleform6Render24DICommand_SourceRectImplINS0_19DICommand_ThresholdEEE
N9Scaleform6Render24DICommand_SourceRectImplINS0_20DICommand_CopyPixelsEEE
N9Scaleform6Render24DICommand_SourceRectImplINS0_20DICommand_PaletteMapEEE
N9Scaleform6Render24DICommand_SourceRectImplINS0_21DICommand_ApplyFilterEEE
N9Scaleform6Render24DICommand_SourceRectImplINS0_21DICommand_CopyChannelEEE
N9Scaleform6Render24DICommand_SourceRectImplINS0_24DICommand_ColorTransformEEE
N9Scaleform6Render24ImageFileHandlerRegistryE
N9Scaleform6Render24ProjectionMatrix3DBundleE
N9Scaleform6Render24ProjectionMatrix3DEffectE
N9Scaleform6Render27ProjectionMatrix3DPrimitiveE
N9Scaleform6Render28DICommand_GetColorBoundsRectE
N9Scaleform6Render29SortKeyInterface_RefCountImplE
N9Scaleform6Render2GL10ExtensionsE
N9Scaleform6Render2GL10MeshBufferE
N9Scaleform6Render2GL10RenderSyncE
N9Scaleform6Render2GL11MatrixStateE
N9Scaleform6Render2GL11RenderEventE
N9Scaleform6Render2GL13MappedTextureE
N9Scaleform6Render2GL13TextureFormatE
N9Scaleform6Render2GL14TextureManagerE
N9Scaleform6Render2GL16RenderTargetDataE
N9Scaleform6Render2GL19DepthStencilSurfaceE
N9Scaleform6Render2GL3HALE
N9Scaleform6Render2GL7TextureE
N9Scaleform6Render2GL9MeshCacheE
N9Scaleform6Render33DestroyDrawableImageThreadCommandE
N9Scaleform6Render3DDS10FileReaderE
N9Scaleform6Render3DDS18DDSFileImageSourceE
N9Scaleform6Render3HALE
N9Scaleform6Render3PNG10FileReaderE
N9Scaleform6Render3PNG10FileWriterE
N9Scaleform6Render3PNG11LibPNGInputE
N9Scaleform6Render3PNG17MemoryBufferImageE
N9Scaleform6Render3PNG18PNGFileImageSourceE
N9Scaleform6Render3PNG5InputE
N9Scaleform6Render3SIF10FileReaderE
N9Scaleform6Render3SIF18SIFFileImageSourceE
N9Scaleform6Render3TGA10FileReaderE
N9Scaleform6Render3TGA18TGAFileImageSourceE
N9Scaleform6Render4FontE
N9Scaleform6Render4JPEG10FileReaderE
N9Scaleform6Render4JPEG11ImageSourceE
N9Scaleform6Render4JPEG12TablesHeaderE
N9Scaleform6Render4JPEG14AbstractReaderE
N9Scaleform6Render4JPEG17MemoryBufferImageE
N9Scaleform6Render4JPEG18WrapperImageSourceE
N9Scaleform6Render4JPEG21JPEGInputImpl_jpeglibE
N9Scaleform6Render4JPEG5InputE
N9Scaleform6Render4JPEG9ExtraDataE
N9Scaleform6Render4MeshE
N9Scaleform6Render4RectIfEE
N9Scaleform6Render4Text10FontHandleE
N9Scaleform6Render4Text10StyledTextE
N9Scaleform6Render4Text10TextFilterE
N9Scaleform6Render4Text13EditorKitBaseE
N9Scaleform6Render4Text15FontManagerBaseE
N9Scaleform6Render4Text16HTMLImageTagDescE
N9Scaleform6Render4Text16StyleManagerBaseE
N9Scaleform6Render4Text21CompositionStringBaseE
N9Scaleform6Render4Text7DocView12DocumentTextE
N9Scaleform6Render4Text7DocView16DocumentListenerE
N9Scaleform6Render4Text7DocViewE
N9Scaleform6Render4Text9Allocator17TextFormatVisitorE
N9Scaleform6Render4Text9AllocatorE
N9Scaleform6Render4Text9ImageDescE
N9Scaleform6Render5ImageE
N9Scaleform6Render6FilterE
N9Scaleform6Render7RectRefIfEE
N9Scaleform6Render7StrokerE
N9Scaleform6Render7TextureE
N9Scaleform6Render8MeshBaseE
N9Scaleform6Render8RawImageE
N9Scaleform6Render8RectDataIfEE
N9Scaleform6Render8SubImageE
N9Scaleform6Render8TessBaseE
N9Scaleform6Render8TreeNode8NodeDataE
N9Scaleform6Render8TreeRoot8NodeDataE
N9Scaleform6Render8TreeText8NodeDataE
N9Scaleform6Render9CacheBaseE
N9Scaleform6Render9DICommandE
N9Scaleform6Render9FilterSetE
N9Scaleform6Render9HALNotifyE
N9Scaleform6Render9HairlinerE
N9Scaleform6Render9ImageBaseE
N9Scaleform6Render9Matrix3x4IfEE
N9Scaleform6Render9Matrix4x4IfEE
N9Scaleform6Render9MeshCacheE
N9Scaleform6Render9PrimitiveE
N9Scaleform6Render9ShaderHALINS0_2GL13ShaderManagerENS2_15ShaderInterfaceEEE
N9Scaleform6Render9StateData15Interface_ValueE
N9Scaleform6Render9StateData22Interface_RefCountImplE
N9Scaleform6Render9StateData9InterfaceE
N9Scaleform6Render9StrokerAAE
N9Scaleform6Render9TreeShape8NodeDataE
N9Scaleform6String10InitStructE
N9Scaleform6ThreadE
N9Scaleform7MemItemE
N9Scaleform7SysFileE
N9Scaleform8AmpStatsE
N9Scaleform8FILEFileE
N9Scaleform8ListNodeINS_10MemoryHeapEEE
N9Scaleform8ListNodeINS_3GFx14DrawingContextEEE
N9Scaleform8ListNodeINS_3GFx16MovieDefRootNodeEEE
N9Scaleform8ListNodeINS_3GFx3AMP7MessageEEE
N9Scaleform8ListNodeINS_6Render10MeshBufferEEE
N9Scaleform8ListNodeINS_6Render10MeshKeySetEEE
N9Scaleform8ListNodeINS_6Render11ContextImpl20ContextCaptureNotifyEEE
N9Scaleform8ListNodeINS_6Render11ContextImpl8RTHandle10HandleDataEEE
N9Scaleform8ListNodeINS_6Render13DrawableImageEEE
N9Scaleform8ListNodeINS_6Render13RBGenericImpl9CacheDataEEE
N9Scaleform8ListNodeINS_6Render13TreeCacheNodeEEE
N9Scaleform8ListNodeINS_6Render14DICommandQueueEEE
N9Scaleform8ListNodeINS_6Render15MeshStagingNodeEEE
N9Scaleform8ListNodeINS_6Render16TextMeshProviderEEE
N9Scaleform8ListNodeINS_6Render16VectorGlyphShapeEEE
N9Scaleform8ListNodeINS_6Render19DepthStencilSurfaceEEE
N9Scaleform8ListNodeINS_6Render7TextureEEE
N9Scaleform8ListNodeINS_6Render9HALNotifyEEE
N9Scaleform8StatInfo13StatInterfaceE
N9Scaleform8SysAllocE
N9Scaleform8WaitableE
N9Scaleform9FormatterE
N9Scaleform9MsgFormatE
N9Scaleform9SemaphoreE
N@
NDATA
NEGATIVE_INFINITY
NETWORK_CHANGE
NET_STATUS
NEVER
NMTOKEN
NMTOKENS
NORMAL
NOTATION
NOTATION(
NO_BORDER
NO_SCALE
NO_START_OPT)
NULL pathToVar passed to SetVariable/SetDouble()
NULL row buffer for row %ld, pass %d
NUMBER_0
NUMBER_1
NUMBER_2
NUMBER_3
NUMBER_4
NUMBER_5
NUMBER_6
NUMBER_7
NUMBER_8
NUMBER_9
NUMERIC
NUMPAD
NUMPAD_0
NUMPAD_1
NUMPAD_2
NUMPAD_3
NUMPAD_4
NUMPAD_5
NUMPAD_6
NUMPAD_7
NUMPAD_8
NUMPAD_9
NUMPAD_ADD
NUMPAD_DECIMAL
NUMPAD_DIVIDE
NUMPAD_ENTER
NUMPAD_MULTIPLY
NUMPAD_SUBTRACT
NUM_PAD
NV_DST16
NV_DST24
NV_INTZ
NV_NULL
NV_RAWZ
Name = %s
Name = %s, %d glyphs
Nd
Need a bPlayVideo flag in the movie!
Negative or zero gamma ignored
NetConnection
NetStream.Play.InternalError
NetStream.Play.Start
NetStream.Play.Stop
NetStream.Play.StreamNotFound
NetStream.Seek.InvalidTime
NetStream.Seek.Notify
NetStream.Unknown
NetworkClientService_001
NetworkMessagesVersion001
NetworkP2PService_001
NetworkServerService_001
NetworkService_001
NetworkSystemUtilsVersion001
NetworkSystemVersion001
NewNode
New_Tai_Lue
Next
Nko
Nl
No
No IDATs written into file
No XML parser state set for movie!
No conversion from %s to string at the moment!
No image in file
No memory for pCAL params
No memory for pCAL purpose
No memory for sPLT palettes
No memory to process iTXt chunk
No memory to process text chunk
No space in chunk cache for iTXt
No space in chunk cache for sPLT
No space in chunk cache for tEXt
No space in chunk cache for unknown chunk
No space in chunk cache for zTXt
No user event handler interface is installed; Mouse.hide failed.
No user event handler interface is installed; Mouse.setCursorType failed.
No user event handler interface is installed; Mouse.show failed.
NodeData
NonTopoComplex
NonTopoComplexPack4Bits
NonTopoPenultimatePluseOne
None
Normal
Not a JPEG file: starts with 0x%02x 0x%02x
Not a PNG file
Not enough image data
Not enough memory to decompress chunk
Not enough memory to process iTXt chunk
Not enough memory to process text chunk
Not enough memory to process zTXt chunk
Not implemented yet
Note: SWF Frame Rate = %f, Frames = %d
NotifyRenderingDeviceLost
NotifyRenderingDeviceReset
Nov
Null pRoot in %p - %p node
Null pRoot in %p - %p node - at chain loop %d
NumFonts = %d
O
O*9y
ONPAUSE
ONRESUME
OPEN
OPTIONS
ORIENTATION_CHANGE
ORIENTATION_CHANGING
OSX
OUTER
OVERLAY
ObjectsReportRequest
Obtained EMS handle %u
Obtained XMS handle %u
Oct
Ogham
Ol_Chiki
Old_Italic
Old_Persian
Old_South_Arabian
Old_Turkic
OnAvatarImageLoaded for %u
OnPersonaStateChanged for interesting person %u
Only compression method 8 is supported by PNG
Only compression windows <= 32k supported by PNG
Only compression windows >= 256 supported by PNG
Opened temporary file %s
Oriya
Osmanya
Out of memory processing zTXt chunk
Out of memory while procesing keyword
Out of memory while processing sCAL chunk
Out of memory while processing sPLT chunk
Out of memory while processing unknown chunk
Out of place IHDR
Out of place gAMA chunk
Out of place iCCP chunk
Out of place sBIT chunk
Out of place sRGB chunk
Out of place tIME chunk
Output file write error --- out of disk space?
Over
P
P0
P8
P?isLanguageBar
P@
PA
PAD_A
PAD_B
PAD_BACK
PAD_C
PAD_DOWN
PAD_H
PAD_HOME
PAD_L1
PAD_L2
PAD_LEFT
PAD_LT
PAD_MINUS
PAD_NONE
PAD_O
PAD_PLUS
PAD_R1
PAD_R2
PAD_RIGHT
PAD_RT
PAD_S
PAD_SELECT
PAD_START
PAD_T
PAD_UP
PAD_X
PAD_Y
PAD_Z
PAGE_DOWN
PAGE_UP
PCDATA
PCRE does not support \L, \l, \N{name}, \U, or \u
PENDING
PERIOD
PGDN
PGUP
PM
PNG file corrupted by ASCII conversion
PNG unsigned integer out of range
POSITIVE_INFINITY
POSIX
POSIX collating elements are not supported
POSIX named classes are supported only within a class
POST
PP
PRIVACY
PROGRESS
PRUNE
PS3
PUBLIC
PadPixels = %d, nominal glyph size = %d, numTexGlyphs = %d
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
ParseArguments('%s','%s') - invalid char '%c'
ParseArguments('%s','%s') - invalid format '%%%c'
ParseArguments('%s','%s') - invalid format '%%h%c'
ParseArguments('%s','%s') - invalid format '%%l%c'
ParticleSystemMgr002
Path_AddToTail
Path_AddToTail failed for read only CFieldPath
Path_AddToTail failed, depth already == DEFAULT_MAX_PATH_DEPTH(%d)
Path_PopLast
Path_PopLast failed for read only CFieldPath
Path_RemoveAll
Path_RemoveAll failed for read only CFieldPath
Pc
Pd
Pe
PerspectiveProjection
Pf
PgDn
PgUp
Phags_Pa
Phoenician
Physics2 Interface Old v0.5
PhysicsBuilderMgr001
Pi
PixelSnapping
PlaceObject
PlaceObject2Tag
PlaceObject3Tag
Plat_CheckSDL
Plat_DebugPrint
Plat_DebugString
Plat_ExitProcess
Plat_FileSize
Plat_FloatTime
Plat_GetOSType
Plat_GetThreadIndex
Plat_GetTime
Plat_IsHighDPI
Plat_IsInDebugSessionRaw
Plat_MSTime
Plat_ScreenToWindowCoords
Plat_ShouldCollectMiniDumpsForFatalErrors
Plat_localtime
PlatformCode
PlaySound
PlaySoundAtPitch
PlusFour
PlusThree
PlusTwo
Po
PopAllButOnePlusN
PopAllButOnePlusNPack3Bits
PopAllButOnePlusNPack6Bits
PopAllButOnePlusOne
PopMask
PopNAndNonTopographical
PopNPlusN
PopNPlusOne
PopOnePlusN
PopOnePlusOne
PostProcessingSystem_001
Potential overflow in png_zalloc()
PreProcessKeyboardEvent
PrecacheImage
Premature end of JPEG file
Premature end of input file
PressAndTapGestureEvent
Prev
Print
Print file opens to DevMsg
Print object report for the specified slot
PrintObjectsReport
PrntScrn
ProcessDeclDict(%d, %d) - DeclDict was already processed at %d
ProcessImageTags: can't find a resource for export name '%s'
ProcessImageTags: can't load the image '%s'
Profile size field missing from iCCP chunk
ProfileFrame
Property %s not found on flash.events.Event and there is no default value.
Property '{0}' already exists as a DisplayObject. SetMember aborted.
PropertyEditorSystem_001
Proxy
Ps
PurgeAPIFunctionsFromObject
Push register[%d] - register out of bounds
PushFilters
PushMask_BeginSubmit
PushN
PushNAndNonTopographical
PushOneLeftDeltaNRightNonZero
PushOneLeftDeltaNRightNonZeroPack6Bits
PushOneLeftDeltaNRightNonZeroPack8Bits
PushOneLeftDeltaNRightZero
PushOneLeftDeltaOneRightNonZero
PushOneLeftDeltaOneRightZero
PushOneLeftDeltaZeroRightNonZero
PushOneLeftDeltaZeroRightZero
PushThreeLeftDeltaN
PushThreeLeftDeltaOne
PushThreeLeftDeltaZero
PushThreePack5LeftDeltaN
PushThreePack5LeftDeltaOne
PushThreePack5LeftDeltaZero
PushTwoLeftDeltaN
PushTwoLeftDeltaOne
PushTwoLeftDeltaZero
PushTwoPack5LeftDeltaN
PushTwoPack5LeftDeltaOne
PushTwoPack5LeftDeltaZero
Q
QC,A
QName
Quantization table 0x%02x was not defined
Quantizing to %d = %d*%d*%d colors
Quantizing to %d colors
QueuedLoaderVersion001
R
R0
R16
R16F
R16F_EXPAND
R32F
RADIAL
RED
REFLECT
REGULAR
REMOTE
REMOVED
REMOVED_FROM_STAGE
REMOVE_STATUS_WINDOW
REPEAT
REPORT_NO_CIRCULAR_REFERENCES
REPORT_ONLY_ANON_OBJ_ADDRESSES
REPORT_SHORT_FILENAMES
REPORT_SUPPRESS_OVERALL_STATS
REQUIRED
RESIZE
RETURNINDEXEDARRAY
RG1616
RG1616F
RG1616F_EXPAND
RG3232F
RGB323232F
RGB565
RGB888_BLUESCREEN
RGBA1010102
RGBA1010102F_EDRAM
RGBA16161616F
RGBA16161616F_EDRAM_RGBA1010102F
RGBA16161616F_EXPAND
RGBA16161616F_EXPAND_EDRAM_RGBA1010102F
RGBA16161616_EDRAM
RGBA16161616_EDRAM_RGBA16161616
RGBA32323232F
RGBA8888_LINEAR
RGBA: {0} {1} {2} {3}
RGBX555
RGBX8888
RIGHTBRACKET
RIGHTMARGIN
RIGHTMARGIN="{0}"
RIGHT_BUTTON
RIGHT_CLICK
RIGHT_MOUSE_DOWN
RIGHT_MOUSE_UP
ROTATED_LEFT
ROTATED_RIGHT
ROUND
RP
RST%d
RandomFloat
RandomSeed
RangeError
Read Error.
Read failed on temporary file
Read from EMS failed
Read from XMS failed
ReadToken overflow
Reading chained multiname in itself.
Recursive import detected. Import stack:%s
RecursiveLoadFromBuffer:  got EOF instead of keyname
RecursiveLoadFromBuffer:  got NULL key
RecursiveLoadFromBuffer:  got conditional between key and value
RecursiveLoadFromBuffer:  got empty keyname
RecursiveLoadFromBuffer:  got } in key
RecursiveLoadFromBuffer:  recursion overflow
Redo
ReferenceError
RegExp
RegisterConfigValue: Unknown error constructing config value "%s"!
Registered fonts: "
Rejang
RemoveInputConsumer
RemoveKeyInputConsumer
RemoveMouseInputConsumer
RemoveObject(%d, %d)
RemoveObject2(%d)
RenderDevice003
RenderDeviceMgr001
RenderHardwareConfig002
RenderPipelineManagement
RenderService_001
RenderSlot
RenderSystemSurface001
RenderUtils_001
Render_ShapeMeshProvider: More than 65535 vertices, the shape cannot be displayed
ReplaceGlyphs
RequestElement
Requested empty UGC asset.
Requested feature was omitted at compile time
Reserve
Resource for font class = '%s' is not found in text field id = %d, def text = '%s'
Resource for font id = %d is not found in text field id = %d, def text = '%s'
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceManifestRegistry001
ResourceSystem013
Responder
Retrieval of the TextField.filters property is not implemented.
Row has too many bytes to allocate in memory
Runic
S
SBR
SCROLL
SECURITY_ERROR
SEMICOLON
SETTINGS_MANAGER
SET_CONVERSION_STATUS
SET_CURRENT_INPUT_LANGUAGE
SET_CURRENT_LANGUAGE
SET_IMENAME
SET_SUPPORTED_IMENAMES
SET_SUPPORTED_LANGUAGES
SF (Action):
SF (Debug):
SF (Parse):
SF (Render):
SF (Script):
SF:
SFText_TextBoxList
SHIFT
SHOW_ALL
SIF
SIZE="{0}"
SKIP
SOCKET_DATA
SOUND_COMPLETE
SPAN
SQRT1_2
SQRT2
SQUARE
SRC
SSE and SSE2 are required.
STANDARD
STEAMAPPLIST_INTERFACE_VERSION001
STEAMAPPS_INTERFACE_VERSION008
STEAMHTMLSURFACE_INTERFACE_VERSION_004
STEAMHTTP_INTERFACE_VERSION002
STEAMINVENTORY_INTERFACE_V002
STEAMMUSICREMOTE_INTERFACE_VERSION001
STEAMMUSIC_INTERFACE_VERSION001
STEAMPARENTALSETTINGS_INTERFACE_VERSION001
STEAMREMOTESTORAGE_INTERFACE_VERSION014
STEAMSCREENSHOTS_INTERFACE_VERSION003
STEAMUGC_INTERFACE_VERSION010
STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001
STEAMUSERSTATS_INTERFACE_VERSION011
STEAMVIDEO_INTERFACE_V002
STRING_BEGIN
STRING_BREAK
STRING_CLEARDISPLAY
STRING_CLEARLINE
STRING_DELETE
STRING_DELETECHAR
STRING_DELETELINE
STRING_DOWNARROW
STRING_END
STRING_EXECUTE
STRING_F1
STRING_F10
STRING_F11
STRING_F12
STRING_F13
STRING_F14
STRING_F15
STRING_F16
STRING_F17
STRING_F18
STRING_F19
STRING_F2
STRING_F20
STRING_F21
STRING_F22
STRING_F23
STRING_F24
STRING_F25
STRING_F26
STRING_F27
STRING_F28
STRING_F29
STRING_F3
STRING_F30
STRING_F31
STRING_F32
STRING_F33
STRING_F34
STRING_F35
STRING_F4
STRING_F5
STRING_F6
STRING_F7
STRING_F8
STRING_F9
STRING_FIND
STRING_HELP
STRING_HOME
STRING_INSERT
STRING_INSERTCHAR
STRING_INSERTLINE
STRING_LEFTARROW
STRING_MENU
STRING_MODESWITCH
STRING_NEXT
STRING_PAGEDOWN
STRING_PAGEUP
STRING_PAUSE
STRING_PREV
STRING_PRINT
STRING_PRINTSCREEN
STRING_REDO
STRING_RESET
STRING_RIGHTARROW
STRING_SCROLLLOCK
STRING_SELECT
STRING_STOP
STRING_SYSREQ
STRING_SYSTEM
STRING_UNDO
STRING_UPARROW
STRING_USER
SUBPIXEL
SWF File version = %d, File length = %d
SWF file is compressed.
SYNC
SYSTEM
Samaritan
Sampling factors too large for interleaved scan
Sat
Saurashtra
SaveKVFile
Sc
Scale9Grid for resource=%d has negative height %f
Scale9Grid for resource=%d has negative width %f
Scale9GridLoader, id=%d, x1=%d, y1=%d, x2=%d, y2=%d
Scaleform
Scaleform IME
Scaleform Linux
Scaleform Video Decoder
Scaleform Video Reader
Scaleform::Render::DrawableImage
ScaleformAS
ScaleformParse
ScaleformScript
ScaleformUI missing expected interface
ScaleformUI001
Scan script does not transmit all data
Scene and Frame Label Data, numscenes = %d
SceneSystem_002
SceneUtils_001
Scene[%d] = { %d, "%s" }
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
Screen Size: %dx%d
Script Communication
ScriptTimeoutError
ScrlLck
Searching FontLib without [Device] flag: "
Searching FontLib: "
Searching FontProvider: "
Searching again without [Device] flag:
Searching for font: "
Second parameter of Object.registerClass(%s, %s) should be function or null
Security
SecurityDomain
SecurityError
SecurityErrorEvent
SecurityPanel
Seek
Seek failed on temporary file
Segments
Selected %d colors for quantization
Self recursive import detected in '%s'
SendIMEMessage
SendLangBarMessage
Sep
Server
ServerUploadGameStats001
SetBackgroundColor: (%d %d %d)
SetConvar
SetCurrentLanguage
SetCursorShape
SetIMEEnabled
SetSlotConsumesInputEvents
SetSlotViewport
SetSlotVisible
SetSupportedIMENames
SetTabIndex (unused)
SetTarget(tellTarget) with invalid target '%s'.
SetTarget2(tellTarget) with invalid target '%s'.
SetVariable
SetVariable failed: can't resolve the path "%s"
Setter method is null.
ShaderData
ShaderFilter
ShapeCharacter read: curved edge   = %4g %4g - %4g %4g - %4g %4g
ShapeCharacter read: fill0 = %d
ShapeCharacter read: fill1 = %d
ShapeCharacter read: line = %d
ShapeCharacter read: more fill styles
ShapeCharacter read: moveto %4g %4g
ShapeCharacter read: nfillbits = %d, nlinebits = %d
ShapeCharacter read: straight edge = %4g %4g - %4g %4g
ShapeData
ShapeLoader: id = %d
ShapeMorphLoader: id = %d
SharedObject
SharedObjectFlushStatus
Shavian
ShiftJIS
Show
Show Scaleform Info
Show debug text for loading Steam avatars
ShowCursor
ShowFrame
ShowFrame (sprite, char id = %d)
Sinhala
Sk
SlotAddRef
SlotInfo
SlotInfoHash
SlotRelease
Sm
Smoothing not supported with nonstandard sampling ratios
So
Sound.AttachSound requires one argument (file name)
Sound.SetPan requires one argument (pan)
Sound.SetVolume requires at least one argument (volume)
SoundLoaderContext
SoundMixer
SoundOpSystem001
SoundOpSystemEdit001
SoundService_001
SoundSystem001
Sounds
Source2Client002
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2Server001
Source2ServerSerializers002
SourceFile
SourceNode = %p, parent = %p
SourceRequest
SpreadMethod
Sprite::AddDisplayObject() - unknown cid = %d
Sprite::AddDisplayObject(): unknown cid = %d
Ss=%d, Se=%d, Ah=%d, Al=%d
Stack overflow, max level of 255 nested calls is reached.
Stack overflow, max level of 255 nested calls of toString is reached.
Stack overflow, max level of 255 nested calls of valueOf is reached.
StackOverflowError
StageAlign
StageDisplayState
StageOrientation
StageOrientationEvent
StageQuality
StageScaleMode
StandAlone
Start Of Frame 0x%02x: width=%u, height=%u, components=%d
Start Of Scan: %d components
Start of Image
StartDrag of invalid target '%s'.
StatBag
Static method '%s' is not found.
Static method '%s.%s' is not found.
Static text uses imported font! FontId = %d, import name = %s
StatsService_001
Steam knows this user, but avatar isn't downloaded, awaiting AvatarImageLoaded_t callback
SteamAPI_GetHSteamPipe
SteamAPI_GetHSteamUser
SteamAPI_RegisterCallResult
SteamAPI_RegisterCallback
SteamAPI_UnregisterCallResult
SteamAPI_UnregisterCallback
SteamAudio001
SteamClient017
SteamController005
SteamFriends015
SteamInternal_CreateInterface
SteamMatchMaking009
SteamMatchMakingServers002
SteamNetworking005
SteamUser019
SteamUtils009
StopSound
StoreRegister[%d] - register out of bounds!
String %d: ref:%d %s
StyleSheet
Success
Sun
Sundanese
Suspension not allowed here
SwdFile
SwdRequest
Syloti_Nagri
SymbolClassLoader can't find Resource with id = %d, name = '%s'
SymbolClassLoader: num = %d
SyncEvent
SyntaxError
Syriac
Sys
Sys Direct Space
SysReq
SystemEx
T
T0
T@
TAB
TABSTOPS
TABSTOPS="
TAB_CHILDREN_CHANGE
TAB_ENABLED_CHANGE
TAB_INDEX_CHANGE
TEXGLYPH[%d]: uvBnd.x1 = %f, uvBnd.y1 = %f, uvBnd.x2 = %f, uvBnd.y2 = %f
TEXT
TEXTAUTOSZ_FIT
TEXTAUTOSZ_NONE
TEXTAUTOSZ_SHRINK
TEXT_INPUT
TEXT_NODE
TF<)
THEN
TIMER
TIMER_COMPLETE
TL
TOP_LEFT
TOP_RIGHT
TOUCH_BEGIN
TOUCH_END
TOUCH_MOVE
TOUCH_OUT
TOUCH_OVER
TOUCH_POINT
TOUCH_ROLL_OUT
TOUCH_ROLL_OVER
TOUCH_TAP
TP
TR
TU
Tag 'DefineBinaryData' (87) is not supported, potentially 'TLF text' fields are used. Switch to 'Classic Text'.
Tagalog
Tagbanwa
Tags
Tai_Le
Tai_Tham
Tai_Viet
Tamil
Telugu
Tessellate
TestFormatA
TestFormatB
TestFormatC
TestFormatD
TestFormatE
TestScriptMgr001
Text style with undefined font; FontId = %d
TextCharacter, id = %d
TextColorType
TextDisplayMode
TextFieldAutoSize
TextFieldEx
TextFieldType
TextFormatAlign
TextHeight = %g
TextLayout_001
TextMessageMgr_001
TextObject_MakeTextObjectFromMember failed to create a text object named '%s'
TextRenderer
TextureManager
Thaana
Thai
The constructor function in 'cast' should have 'prototype'.
The constructor function in 'implements' should have 'prototype'.
The constructor function in InstanceOf should have 'prototype'.
The method
The method BitmapData::applyFilter (unsupported filter type) is not implemented
The method BitmapData::lock() is not implemented
The method BitmapData::unlock() is not implemented
The method DisplayObject::opaqueBackgroundGet() is not implemented
The method DisplayObject::opaqueBackgroundSet() is not implemented
The method DisplayObjectContainer::areInaccessibleObjectsUnderPoint() is not implemented
The method ErrorEvent::clone() is not implemented
The method ErrorEvent::errorIDGet() is not implemented
The method ErrorEvent::toString() is not implemented
The method FocusEvent::directionGet() is not implemented
The method FocusEvent::directionSet() is not implemented
The method KeyboardEvent::updateAfterEvent() is not implemented
The method LoaderInfo::bytesGet() is not implemented
The method LoaderInfo::childAllowsParentGet() is not implemented
The method LoaderInfo::childSandboxBridgeGet() is not implemented
The method LoaderInfo::childSandboxBridgeSet() is not implemented
The method LoaderInfo::parametersGet() is not implemented
The method LoaderInfo::parentAllowsChildGet() is not implemented
The method LoaderInfo::parentSandboxBridgeGet() is not implemented
The method LoaderInfo::parentSandboxBridgeSet() is not implemented
The method LoaderInfo::sameDomainGet() is not implemented
The method LoaderInfo::sharedEventsGet() is not implemented
The method MouseEvent::clickCountGet() is not implemented
The method MouseEvent::updateAfterEvent() is not implemented
The method NetStream::attachAudio() is not implemented
The method NetStream::attachCamera() is not implemented
The method NetStream::bytesLoadedGet() is not implemented
The method NetStream::bytesTotalGet() is not implemented
The method NetStream::checkPolicyFileGet() is not implemented
The method NetStream::checkPolicyFileSet() is not implemented
The method NetStream::liveDelayGet() is not implemented
The method NetStream::objectEncodingGet() is not implemented
The method NetStream::publish() is not implemented
The method NetStream::receiveAudio() is not implemented
The method NetStream::receiveVideo() is not implemented
The method NetStream::receiveVideoFPS() is not implemented
The method NetStream::send() is not implemented
The method NetStream::setDRMAuthenticationCredentials() is not implemented
The method SimpleButton::soundTransformGet() is not implemented
The method SimpleButton::soundTransformSet() is not implemented
The method Sound::id3Get() is not implemented
The method Sound::isBufferingGet() is not implemented
The method SoundChannel::leftPeakGet() is not implemented
The method SoundChannel::rightPeakGet() is not implemented
The method SoundTransform::leftToLeftGet() is not implemented
The method SoundTransform::leftToLeftSet() is not implemented
The method SoundTransform::leftToRightGet() is not implemented
The method SoundTransform::leftToRightSet() is not implemented
The method SoundTransform::rightToLeftGet() is not implemented
The method SoundTransform::rightToLeftSet() is not implemented
The method SoundTransform::rightToRightGet() is not implemented
The method SoundTransform::rightToRightSet() is not implemented
The method Sprite::soundTransformGet() is not implemented
The method Sprite::soundTransformSet() is not implemented
The method Sprite::startTouchDrag() - multitouch support is OFF is not implemented
The method Sprite::stopTouchDrag() - multitouch support is OFF is not implemented
The method Stage::assignFocus() is not implemented
The method Stage::displayStateGet() is not implemented
The method Stage::displayStateSet() is not implemented
The method Stage::frameRateSet() is not implemented
The method Stage::fullScreenHeightGet() is not implemented
The method Stage::fullScreenSourceRectGet() is not implemented
The method Stage::fullScreenSourceRectSet() is not implemented
The method Stage::fullScreenWidthGet() is not implemented
The method Stage::heightSet() is not implemented
The method Stage::isFocusInaccessible() is not implemented
The method Stage::qualityGet() is not implemented
The method Stage::qualitySet() is not implemented
The method Stage::showDefaultContextMenuGet() is not implemented
The method Stage::showDefaultContextMenuSet() is not implemented
The method Stage::stageHeightSet() is not implemented
The method Stage::stageWidthSet() is not implemented
The method Stage::tabChildrenGet() is not implemented
The method Stage::tabChildrenSet() is not implemented
The method Stage::textSnapshotGet() is not implemented
The method Stage::widthSet() is not implemented
The method TextField::getImageReference() is not implemented
The method TextField::gridFitTypeGet() is not implemented
The method TextField::gridFitTypeSet() is not implemented
The method TextField::sharpnessGet() is not implemented
The method TextField::sharpnessSet() is not implemented
The method TextField::thicknessGet() is not implemented
The method TextField::thicknessSet() is not implemented
The method TimerEvent::updateAfterEvent() is not implemented
The method URLLoader::close() is not implemented
The method URLRequest::authenticateGet() is not implemented
The method URLRequest::authenticateSet() is not implemented
The method URLRequest::cacheResponseGet() is not implemented
The method URLRequest::cacheResponseSet() is not implemented
The method URLRequest::contentTypeGet() is not implemented
The method URLRequest::contentTypeSet() is not implemented
The method URLRequest::digestGet() is not implemented
The method URLRequest::digestSet() is not implemented
The method URLRequest::followRedirectsGet() is not implemented
The method URLRequest::followRedirectsSet() is not implemented
The method URLRequest::manageCookiesGet() is not implemented
The method URLRequest::manageCookiesSet() is not implemented
The method URLRequest::methodGet() is not implemented
The method URLRequest::methodSet() is not implemented
The method URLRequest::requestHeadersGet() is not implemented
The method URLRequest::requestHeadersSet() is not implemented
The method URLRequest::useCacheGet() is not implemented
The method URLRequest::useCacheSet() is not implemented
The method URLRequest::userAgentGet() is not implemented
The method URLRequest::userAgentSet() is not implemented
The method Video::attachCamera() is not implemented
The method class_::Capabilities::hasAccessibilityGet() is not implemented
The method class_::Capabilities::hasAudioEncoderGet() is not implemented
The method class_::Capabilities::hasAudioGet() is not implemented
The method class_::Capabilities::hasEmbeddedVideoGet() is not implemented
The method class_::Capabilities::hasMP3Get() is not implemented
The method class_::Capabilities::hasPrintingGet() is not implemented
The method class_::Capabilities::hasScreenBroadcastGet() is not implemented
The method class_::Capabilities::hasScreenPlaybackGet() is not implemented
The method class_::Capabilities::hasStreamingAudioGet() is not implemented
The method class_::Capabilities::hasStreamingVideoGet() is not implemented
The method class_::Capabilities::hasTLSGet() is not implemented
The method class_::Capabilities::hasVideoEncoderGet() is not implemented
The method class_::Capabilities::languageGet() is not implemented
The method class_::Capabilities::localFileReadDisableGet() is not implemented
The method class_::Capabilities::pixelAspectRatioGet() is not implemented
The method class_::Capabilities::screenColorGet() is not implemented
The method class_::Capabilities::screenDPIGet() is not implemented
The method class_::Capabilities::screenResolutionXGet() is not implemented
The method class_::Capabilities::screenResolutionYGet() is not implemented
The method class_::Capabilities::serverStringGet() is not implemented
The method class_::IME::doConversion() is not implemented
The method class_::IME::setCompositionString() is not implemented
The method class_::LoaderInfo::getLoaderInfoByDefinition() is not implemented
The method class_::NetStream::resetDRMVouchers() is not implemented
The method class_::SecurityDomain::currentDomainGet() is not implemented
The method class_::SharedObject::getRemote() is not implemented
The method class_::System::imeGet() is not implemented
The method class_::System::pause() is not implemented
The method class_::System::resume() is not implemented
The method class_::System::setClipboard() is not implemented
The method instance::BevelFilter::typeSet() - full is not implemented
The method instance::ByteArray::inflate() is not implemented
The method instance::ContextMenu::builtInItemsGet() is not implemented
The method instance::ContextMenu::clone() is not implemented
The method instance::ContextMenu::customItemsGet() is not implemented
The method instance::ContextMenu::customItemsSet() is not implemented
The method instance::ContextMenu::hideBuiltInItems() is not implemented
The method instance::DisplayObject::accessibilityPropertiesGet() is not implemented
The method instance::DisplayObject::accessibilityPropertiesSet() is not implemented
The method instance::DisplayObjectContainer::removeChildren() is not implemented
The method instance::GestureEvent::updateAfterEvent() is not implemented
The method instance::NetConnection::addHeader() is not implemented
The method instance::NetConnection::call() is not implemented
The method instance::NetConnection::clientSet() is not implemented
The method instance::NetConnection::close() is not implemented
The method instance::NetConnection::connectedGet() is not implemented
The method instance::NetConnection::connectedProxyTypeGet() is not implemented
The method instance::NetConnection::defaultObjectEncodingSet() is not implemented
The method instance::NetConnection::objectEncodingGet() is not implemented
The method instance::NetConnection::objectEncodingSet() is not implemented
The method instance::NetConnection::proxyTypeGet() is not implemented
The method instance::NetConnection::proxyTypeSet() is not implemented
The method instance::NetConnection::uriGet() is not implemented
The method instance::NetConnection::usingTLSGet() is not implemented
The method instance::SharedObject::clear() is not implemented
The method instance::SharedObject::clientGet() is not implemented
The method instance::SharedObject::clientSet() is not implemented
The method instance::SharedObject::close() is not implemented
The method instance::SharedObject::connect() is not implemented
The method instance::SharedObject::defaultObjectEncodingSet() is not implemented
The method instance::SharedObject::fpsSet() is not implemented
The method instance::SharedObject::objectEncodingGet() is not implemented
The method instance::SharedObject::objectEncodingSet() is not implemented
The method instance::SharedObject::send() is not implemented
The method instance::SharedObject::setDirty() is not implemented
The method instance::SharedObject::setProperty() is not implemented
The method instance::SharedObject::sizeGet() is not implemented
The method instance::Socket::localAddressGet() is not implemented
The method instance::Socket::readObject() is not implemented
The method instance::Socket::remotePortGet() is not implemented
The method instance::Socket::writeObject() is not implemented
The method instance::Stage::nativeWindowGet() is not implemented
The method instance::TextField::contextMenuGet() is not implemented
The method instance::TouchEvent::updateAfterEvent() is not implemented
The parameter of 'cast' should be a function.
The parameter of 'implements' should be a function.
The parameter of InstanceOf should be a function.
Thinkness = %f, Sharpnesss = %f
ThreadGetCurrentId
ThreadInterlockedExchange64
ThreadSleep
Thu
ThunkClosure
Tibetan
Ticks
Tifinagh
Timeline
Times New Roman
Token '{0}' in path '{1}' was not resolved to a valid Object! This may be caused by a property that is not of Object type, or by using reserved words/properties for MovieClip names in the display tree.
Too many IDATs found
Too many bytes for PNG signature
Too many color components: %d, max %d
ToolFramework2_002
ToolGameSimulationDispatcher_001
ToolGameSimulationSystem_001
ToolSceneNodeFactory_001
ToolScriptManager001
ToolService_001
Total Footprint
TouchEvent
Tracer
TransformGestureEvent
TreeCache
True
Truncated iTXt chunk
Truncated packet or corrupt partition %d length
Truncated packet or corrupt partition 0 length
Truncated partition size data
Truncated zTXt chunk
Truncating incorrect info tRNS chunk length
Truncating incorrect tRNS chunk length
Truncating profile to actual length in iCCP chunk
Tue
TypeError
U
UC
UCP)
UGCRead failed? (UGC=%08X%08X).
UISlot
UNIQUESORT
UNKNOWN
UNLOAD
UPDATE
UPLOAD_COMPLETE_DATA
UPSIDE_DOWN
URIError
URLLoader
URLLoaderDataFormat
URLNotFound
URLRequestHeader
URLRequestMethod
URLStream
US-ASCII
USER_IDLE
USER_PRESENT
USE_ITRAITS
UTF-16
UTF-16BE
UTF-16LE
UTF-8
UV88
UVLX8888
UVWQ8888
Ugaritic
Unable to watch '%s'
UnbindRenderTargets
Undo
Unexpected marker 0x%02x
Unicode
UninitializedError
Unknown APP0 marker (not JFIF), length %u
Unknown APP14 marker (not Adobe), length %u
Unknown Adobe color transform code %d
Unknown compression method in IHDR
Unknown compression type in iCCP chunk
Unknown compression type in zTXt chunk
Unknown custom filter method
Unknown error
Unknown file format at URL "
Unknown filter heuristic method
Unknown filter method in IHDR
Unknown freer parameter in png_data_freer
Unknown interlace method in IHDR
Unknown row filter for method 0
Unknown sRGB intent
Unknown zTXt compression type %d
Unknown zlib error
Unnamed
Unrecognized component IDs %d %d %d, assuming YCbCr
Unrecognized equation type for pCAL chunk
Unrecognized error code
Unrecognized unit type for oFFs chunk
Unrecognized unit type for pHYs chunk
Unreleased SFVALUE handles!
Unreleased SFVALUEARRAY handles!
Unspecified internal error
Unsupported JPEG data precision %d
Unsupported JPEG process: SOF type 0x%02x
Unsupported color conversion request
Unsupported marker type 0x%02x
Up
Update font provider settings
Usage: sf_print_objects_report <slot>
Used
User
UserInfoChangeService_001
V
VALIGN_BOTTOM
VALIGN_CENTER
VALIGN_NONE
VALIGN_TOP
VApplication001
VAvi001
VBAllocTracker001
VBaseFileSystem011
VBik001
VConComm001
VDebugService_001
VDmeMakeFileUtils001
VERTICAL
VEngineCvar007
VFileSystem017
VGUI_Input005
VGUI_Panel010
VGUI_Scheme010
VGUI_Surface032
VGUI_System010
VGUI_ivgui008
VGy#
VMAbcFile
VMDLLIB001
VMaterialSystem2_001
VMediaFoundation001
VNewAsyncFileSystem001
VP4003
VPX_SIMD_CAPS_MASK
VPhysX Interface ResourceMgr v0.1
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VProcessUtils002
VProfService_001
VR_001
VRenderDeviceSetupV001
VSPACE
VSPACE="{0}"
VScript
VScriptDbg
VScriptManager010
VStringTokenSystem001
VTable
VTable ind:
VTableIndClosure
V_FixDoubleSlashes
V_FixSlashes
V_GetErrno
V_GetFileExtension
V_IsAbsolutePath
V_PathContainsPath
V_RemoveDotSlashes
V_SetErrno
V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
V_StrTrim
V_StripTrailingSlash
V_UTF16ToUTF8
V_UTF32ToUTF8
V_UTF8CharsToUTF16
V_UTF8ToUTF32
V_UnicodeCaseConvert(char const*, char*, int, int, EStringConvertErrorPolicy)
V_UnicodeCaseConvert(wchar_t const*, wchar_t*, int, int, EStringConvertErrorPolicy)
V_UnicodeLength(char const*)
V_UnqualifiedFileName
V_acosf
V_asinf
V_atan2f
V_atanf
V_atof
V_atoi
V_atoi64
V_cosf
V_expf
V_fmodf
V_localeconv
V_logf
V_powf
V_qsort_s
V_sinf
V_snprintf
V_snwprintf
V_sscanf
V_stricmp_fast
V_stristr_fast(char const*, char const*)
V_strlower_fast
V_strtod
V_strtoi64
V_strtok
V_strtoui64
V_strupper_fast
V_swscanf
V_tanf
V_vsnprintf
V_vsnprintfRet
V_vsnprintfSize
V_vsnwprintf
V_wcstod
V_wcstoi64
Vai
Valid palette required for paletted images
Vector$String
Vector$double
Vector$int
Vector$object
Vector$uint
Vector.<
Vector.<Number>
Vector.<Vector.<Number>>
Vector.<uint>
VerifyError
Virtual array controller messed up
VisBuilder_001
W
WARNING: CDirWatcher not implemented
WARNING: Could not find schema data for helper class for resource type %lld '%s'. (Missing MDiskDataForResourceType metadata or schema data isn't loaded?)
WARNING: LoadAndValidateResourceHeader - FileSystem not initialized!
WARNING: Multiple classes registered as disk data for resource type %lld '%s'. (Should only have one class MDiskDataForResourceType - %d listed above.)
WARNING: Trying to create a CRenderContextPtr without a valid context.
WIDTH
WIDTH="{0}"
WIN32
WINDOWS
WINXP
WMSF
WRAP
WaitForFrame branch to offset %d - this section only runs to %d
Warning
Warning:  %s = '%s' is infinite, clamping value.
Warning: ExternalInterface.call - handler is not installed.
Warning: Increase raster glyph cache capacity - see GlyphCacheParams
Warning: Raster glyph is too big - increase GlyphCacheParams.MaxSlotHeight
Warning: sf_print_objects_report %d - slot out of range
Warning: thumbnail image size does not match data length %u
Warning: unknown JFIF revision number %d.%02d
WebM Project VP8 Decoder v1.1.0
Wed
Width is too large for libpng to process pixels
WordWrap = %d, Multiline = %d, Password = %d, ReadOnly = %d
WorkshopSetup001
WorldRendererBuilderMgr001
WorldRendererMgr001
Write Error.
Write failed on temporary file --- out of disk space?
Write to EMS failed
Write to XMS failed
Writing zero-length unknown chunk
Wrong JPEG library version: library is %d, caller expects %d
X
X0
X360
X360_DST16
X360_DST24
X360_DST24F
XB
XML declaration not well-formed
XML or text declaration not at start of entity
XML.addRequestHeader is not implemented.
XML.send is not implemented.
XML.sendAndLoad is not implemented.
XMLDocument
XMLList
XMLNode
XMLNode::appendChild - trying to add a child that is not of type XMLNode
XMLNode::appendChild - trying to add a child that is the root of the current tree
XMLNode::appendChild - trying to add a child to a text node
XMLNodeCtorFunction::GlobalCtor - malformed XMLNode object
XMLNodeCtorFunction::GlobalCtor - node type not specified
XMLNodeObject::SetMember - cannot set attributes of a malformed node
XMLNodeObject::SetMember - cannot set attributes of node type %d. Only type 1 allowed
XMLNodeObject::SetMember - cannot set nodeName of a malformed node
XMLNodeObject::SetMember - cannot set nodeName of node type %d. Only type 1 allowed
XMLNodeObject::SetMember - cannot set nodeValue of a malformed node
XMLNodeProto::GetNamespaceForPrefix - only element nodes support this method.
XMLNodeType
XMLSignatureValidator
XMLSocket
XML_CONTEXT_BYTES
XML_DTD
XML_NS
XOffset = %g
XP
X_AXIS
Xan
Xiph.Org libVorbis 1.3.2
Xps
Xsp
Xwd
Y
Y@
YOffset = %g
Y_AXIS
Yi
Z
Z"0*
Z0
ZEo^
ZP
Z_AXIS
Zero length keyword
Zero length tRNS chunk
Zl
ZlibState is not set - can't load zipped image data
Zp
Zs
[
[%.3f server clamped to %.3f]
[%d]
[%s
[Bold,Device]
[Bold,Italic,Device]
[Bold,Italic]
[Bold]
[Device]
[Disk class %d/%d] Name = '%s'; Project = '%s'; Binary = '%s'
[Italic,Device]
[Italic]
[\]'
[class
[object
[object Function-
[object Object]
[property]
[resolveHandler]
[type Function]
[type Object]
\
\ at end of pattern
\0
\B
\C not allowed in lookbehind assertion
\N is not supported in a class
\P
\c at end of pattern
\c must be followed by an ASCII character
\g is not followed by a braced, angle-bracketed, or quoted name/number or by a plain number
\k is not followed by a braced, angle-bracketed, or quoted name
]
] is an invalid data character in JavaScript compatibility mode
^
^oEZ
_
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
_Jv_RegisterClasses
_ResourceLib_Images
_V_ComposeFileName
_V_ExtractFileExtension
_V_ExtractFilePath
_V_FileBase
_V_MakeAbsolutePath
_V_SetExtension
_V_StrSubst
_V_StringAfterPrefix
_V_StripExtension
_V_StripLastDir
_V_strncat
_V_strncpy
_V_strnistr_fast
_V_wcsncpy_bytes
_Video_Heap
_ZNSs12_M_leak_hardEv@@GLIBCXX_3.4
_ZSt9terminatev@@GLIBCXX_3.4
_ZTVN10__cxxabiv117__class_type_infoE@@CXXABI_1.3
_ZTVN10__cxxabiv120__si_class_type_infoE@@CXXABI_1.3
_ZTVN10__cxxabiv121__vmi_class_type_infoE@@CXXABI_1.3
__AS3__.vec
__UNKNOWN__
__acosf_finite
__acosf_finite@@GLIBC_2.15
__assert_fail
__assert_fail@@GLIBC_2.2.5
__bss_start
__constructor__
__ctype_toupper_loc
__ctype_toupper_loc@@GLIBC_2.3
__cxa_atexit
__cxa_atexit@@GLIBC_2.2.5
__cxa_call_unexpected
__cxa_call_unexpected@@CXXABI_1.3
__cxa_finalize
__cxa_finalize@@GLIBC_2.2.5
__cxa_guard_abort
__cxa_guard_abort@@CXXABI_1.3
__cxa_guard_acquire
__cxa_guard_acquire@@CXXABI_1.3
__cxa_guard_release
__cxa_guard_release@@CXXABI_1.3
__cxa_pure_virtual
__cxa_pure_virtual@@CXXABI_1.3
__dynamic_cast
__dynamic_cast@@CXXABI_1.3
__errno_location
__errno_location@@GLIBC_2.2.5
__exp_finite
__exp_finite@@GLIBC_2.15
__fprintf_chk
__fprintf_chk@@GLIBC_2.3.4
__fxstat64
__fxstat64@@GLIBC_2.2.5
__gmon_start__
__gxx_personality_v0
__gxx_personality_v0@@CXXABI_1.3
__log_finite
__log_finite@@GLIBC_2.15
__longjmp_chk
__longjmp_chk@@GLIBC_2.11
__lxstat64
__lxstat64@@GLIBC_2.2.5
__memcpy_chk
__memcpy_chk@@GLIBC_2.3.4
__memset_chk
__memset_chk@@GLIBC_2.3.4
__pow_finite
__pow_finite@@GLIBC_2.15
__printf_chk
__printf_chk@@GLIBC_2.3.4
__proto__
__pthread_key_create
__pthread_key_create@@GLIBC_2.2.5
__resolve
__sprintf_chk
__sprintf_chk@@GLIBC_2.3.4
__stack_chk_fail
__stack_chk_fail@@GLIBC_2.4
__stpcpy_chk
__stpcpy_chk@@GLIBC_2.3.4
__strcpy_chk
__strcpy_chk@@GLIBC_2.3.4
__strncpy_chk
__strncpy_chk@@GLIBC_2.3.4
__tls_get_addr
__tls_get_addr@@GLIBC_2.3
__vsnprintf_chk
__vsnprintf_chk@@GLIBC_2.3.4
__vsprintf_chk
__vsprintf_chk@@GLIBC_2.3.4
__xstat
__xstat64
__xstat64@@GLIBC_2.2.5
__xstat@@GLIBC_2.2.5
_alpha
_book_maptype1_quantvals
_book_unquantize
_currentframe
_down
_droptarget
_edata
_end
_fini
_float32_pack
_float32_unpack
_floor_P
_focusrect
_framesloaded
_global.gfx_ime_candidate_list_path
_global.gfx_ime_candidate_list_state
_glyphs
_height
_highquality
_ilog
_init
_level
_level0
_level0 unloaded - no further playback possible
_level0.
_level{0}
_listeners
_lockroot
_make_words
_mapping_P
_matrix3d
_name
_over
_parent
_perspfov
_quality
_residue_P
_root
_root._global
_root.bPlayVideo
_root.startVideo
_root.stopVideo
_rotation
_setjmp
_setjmp@@GLIBC_2.2.5
_soundbuftime
_target
_totalframes
_up
_url
_ve_envelope_clear
_ve_envelope_init
_ve_envelope_mark
_ve_envelope_search
_ve_envelope_shift
_vi_gpsy_free
_vi_psy_free
_visible
_vorbis_apply_window
_vorbis_block_alloc
_vorbis_block_ripcord
_vorbis_window_get
_vp_ampmax_decay
_vp_couple_quantize_normalize
_vp_global_free
_vp_global_look
_vp_noisemask
_vp_offset_and_mix
_vp_psy_clear
_vp_psy_init
_vp_tonemask
_width
_x
_xmouse
_xrotation
_xscale
_y
_ymouse
_yrotation
_yscale
_z
_zscale
`
`A
`P
a
a numbered reference must not be zero
a+b
a:active
a:hover
a:link
a\">
aaa
abcdefghijklmnopqrstuvwxyz
abort@@GLIBC_2.2.5
abs
accDoDefaultAction
accLocation
accSelect
accessibilityProperties
accessor
acolor
acos
acos@@GLIBC_2.2.5
acosf@@GLIBC_2.2.5
actionScriptVersion
actionVerbose
actions: flags = 0x%X
activating
activation@
activity
activityLevel
addCallback
addCertificate
addChild
addChildAt
addEventListener
addFrameScript
addHeader
addListener
addMarker
addNamespace
addProperty
addRequestHeader
addedToStage
advanced
afactor
afterOrientation
album
allowDomain
allowInsecureDomain
allowLoadBytesCodeExecution
alnum
alpha
alphaMultiplier
alphaOffset
alphas
alphasort64
alphasort64@@GLIBC_2.2.5
altKey
always
alwaysEnableArrowKeys
alwaysEnableKeyboardPress
alwaysShowSelection
an argument is not allowed for (*ACCEPT), (*FAIL), or (*COMMIT)
angleBetween
antiAliasType
append
appendChild
appendHtml
appendRotation
appendScale
appendText
appendTranslation
application
application/x-shockwave-flash
application/x-www-form-urlencoded
applicationDomain
apply
applyBlendMode
applyFilter
archive
areInaccessibleObjectsUnderPoint
areSoundsInaccessible
arg
arguments
array
arrow
artist
ascent
ascii
asfunction:
asin
asin@@GLIBC_2.2.5
asinf@@GLIBC_2.2.5
assertion expected after (?(
assignFocus
asyncError
asynchronous entity
at
atan
atan2
atan2@@GLIBC_2.2.5
atan2f@@GLIBC_2.2.5
atan@@GLIBC_2.2.5
atc
attachAudio
attachBitmap
attachCamera
attachMovie
attachMovie() failed - export name "%s" is not found.
attachNetStream
attachSound
attachVideo
attribute vec2 intc%d;
attribute vec4 pos;void main(void){  vec4 opos = pos;  opos.x = dot(pos, mvp[0]);  opos.y = dot(pos, mvp[1]);  gl_Position = opos;
attributes
audioTrack
audioTracks
audioTracksCount
authenticate
auto
autoFit
autoOrients
autoSize
avHardwareDisable
available
avmplus
b
b;!l
bP
ba
backgroundColor
bandwidth
baseLineX
baseLineY
basefontlib
baseline
bb
beforeOrientation
begin
begin text records
beginBitmapFill
beginDisplay
beginFill
beginGradientFill
best
bevel
bias
bigEndian
binary_bc
bitmapData
blank
blend mode = %d
blendMode
block
blockIndent
blueMultiplier
blueOffset
blurStrength
blurX
blurY
boldItalic
bolditalic
boolean
border
borderColor
borrow
bottom
bottomExtension
bottomRight
bottomScroll
bottomScrollV
bound rect:
box
branch to offset %d - this section only runs to %d
broadcastMessage
browse
bubbles
buffer error
bufferLength
bufferTime
builtInItems
bullet
button
button GFxCharacter loader: CharId = %d
buttonDown
buttonIdx
buttonMode
byteCode
bytes
bytesAvailable
bytesLoaded
bytesPending
bytesTotal
c
cHRM Blue X
cHRM Green X
cHRM Green Y
cHRM Red X
cHRM Red Y
cHRM White X
cHRM White Y
c]$8
c]^7
cacheAsBitmap
cacheResponse
call
callProperty
callee
caller
calloc
calloc@@GLIBC_2.2.5
camera
can't extend by the class w/o prototype.
canSeekToEnd
cancel
cancelable
cannot change setting once parsing has begun
cannot suspend in external parameter entity
capabilities
capsLock
caption
captureFocus
caretIndex
ceil
ceil@@GLIBC_2.2.5
ceilf
ceilf@@GLIBC_2.2.5
center
change
changeList
channelsNumber
charAt
charCode
charCodeAt
charCount
character
character value in \x{...} sequence is too large
cheat
checkPolicyFile
child
childAllowsParent
childIndex
childNodes
childSandboxBridge
children
clamp
classname = %s
clauseSegment
clear
clearInterval
clearTimeout
click
clickCount
client
clientcmd_can_execute
clone
cloneNode
close
close@@GLIBC_2.2.5
closedir
closedir@@GLIBC_2.2.5
closing
closing ) for (?C expected
cntrl
color *= (1.0 - base.a);  gl_FragColor = color * cxmul + cxadd * color.a;}
color *= samples;
color += texture2D(tex, tc%d);
color = %s * (1.0-base.a) + base;
color = (scolor * (color.a) + scolor2 * (color.r)           + base * (1.0 - color.a - color.r)) * base.a;
color = color * samples;
color = mix(scolor, base, color.a) * base.a;
color = scolor * (1-color.a) * base.a;
color.a += texture2D(tex, tc%d).a;
color.ar = clamp((1.0 - color.ar) - (1.0 - color.ra) * 0.5, 0.0,1.0);
color.r += texture2D(tex, tc%d).a;
color:
colorTransform
commandKey
comment
comments
compare
complete
componentX
componentY
compositionSegment
computeSpectrum
concat
concatenatedColorTransform
concatenatedMatrix
condenseWhite
conditional group contains more than two branches
configvalue.cpp
connect
connectedProxyType
constant
constructor
contains
containsPoint
containsRect
containsRectangle
content
contentLoaderInfo
contentType
contextMenu
contextMenuOwner
continueAnimation
controlKey
controllerIdx
conversionMode
convertedSegment
copy
copyChannel
copyPixels
copyToClipboard
corner0x
corner0y
corner1x
corner1y
corner2x
corner2y
corner3x
corner3y
cos@@GLIBC_2.2.5
cp367
createBox
createElement
createEmptyMovieClip
createGradientBox
createTextField
createTextNode
creationDate
creator
crossProduct
crt
csASCII
ctrlKey
cuePoints
cuePointsCount
currentCount
currentDomain
currentFPS
currentFps
currentFrame
currentFrameLabel
currentLabel
currentLabels
currentScene
currentTarget
cursor
curveTo
customItems
cutToClipboard
cxadd
cxform:
cxmul
cxmul1
d
dP
dark
darken
data error
dataFormat
dateUTC
day
dayUTC
deactivate
deblocking
declaredBy
decode
decodeURI
decodeURIComponent
decompose
decrementBy
default
defaultObjectEncoding
defaultSettings
defaultTextFormat
deflate
deflate 1.2.5 Copyright 1995-2010 Jean-loup Gailly and Mark Adler
delay
delete
deleteProperty
delta
deltaTransformPoint
deltaTransformVector
depth = %d
descendants
descent
describeType
description
determinant
developer
device
deviceOrientation
difference
different names for subpatterns of the same number are not allowed
digest
digit
digit expected after (?+
direction
disableBatching
disableFocusAutoRelease
disableFocusKeys
disableFocusRolloverEvent
disableIME
dispatchEvent
displayAsPassword
displayMode
displayState
displaying
dispose
distance
ditheredSingle
ditheredThick
divisor
dl_iterate_phdr
dl_iterate_phdr@@GLIBC_2.2.5
doConversion
docTypeDecl
document is not standalone
domain
dotProduct
dotall
dotted
doubleClick
doubleClickEnabled
downState
download
draw
drawCircle
drawEllipse
drawRect
drawRoundRect
drawRoundRectComplex
drft_backward
drft_clear
drft_forward
drft_init
dropTarget
dup
dup@@GLIBC_2.2.5
duplicate attribute
duplicateMovieClip
duration
dynamic
dynamicPropertyWriter
e
eaFO
edgeaaMode
element
elements
embedFonts
embedded
enabled
encodeURI
encodeURIComponent
encoding
encoding specified in XML declaration is incorrect
encoding="
end text records
endFill
endian
english
enterFrame
entity declared in parameter entity
enumerateFonts
equals
erase
errno
erroffset passed as NULL
error in processing external entity reference
error in user chunk
errorID
eulerAngles
event
event:
eventPhase
every
exactFit
exactSettings
exec
exit
exit@@GLIBC_2.2.5
exitFrame
exiting
exp
exp@@GLIBC_2.2.5
expat_2.1.0
explicit
export: count = %d
export: id = %d, name = %s
extended
extendsClass
extension
extra interior spaces removed from keyword
f
factory
failed to get memory
false
fauxBold
fauxItalic
fclose
fclose@@GLIBC_2.2.5
fcntl
fcntl@@GLIBC_2.2.5
fcolor
fdatasync
fdatasync@@GLIBC_2.2.5
fflush
fflush@@GLIBC_2.2.5
fieldOfView
file error
fileAttr:
fileList
fillRect
filter
findFocus
findText
firstChild
fit
fixed
fixed point overflow ignored
flash.accessibility
flash.accessibility:ISearchableText
flash.accessibility:ISimpleTextSelection
flash.display
flash.display.Bitmap
flash.display.BitmapData
flash.display.DisplayObject
flash.display.DisplayObjectContainer
flash.display.FrameLabel
flash.display.Graphics
flash.display.InteractiveObject
flash.display.Loader
flash.display.LoaderInfo
flash.display.MovieClip
flash.display.Scene
flash.display.Shape
flash.display.SimpleButton
flash.display.Sprite
flash.display.Stage
flash.errors
flash.errors.EOFError
flash.errors.IOError
flash.errors.MemoryError
flash.events
flash.events.Event
flash.events.EventDispatcher
flash.events.FocusEvent
flash.events.KeyboardEvent
flash.events.MouseEvent
flash.events.NetStatusEvent
flash.events.ProgressEvent
flash.events.TextEvent
flash.events.TimerEvent
flash.events:IEventDispatcher
flash.external
flash.filters
flash.filters.BevelFilter
flash.filters.BlurFilter
flash.filters.ColorMatrixFilter
flash.filters.DropShadowFilter
flash.filters.GlowFilter
flash.geom
flash.geom.ColorTransform
flash.geom.Matrix
flash.geom.Matrix3D
flash.geom.PerspectiveProjection
flash.geom.Point
flash.geom.Rectangle
flash.geom.Transform
flash.geom.Vector3D
flash.media
flash.media.SoundChannel
flash.media.SoundLoaderContext
flash.media.SoundTransform
flash.media.Video
flash.net
flash.net.URLRequest
flash.net.URLVariables
flash.net:IDynamicPropertyOutput
flash.net:IDynamicPropertyWriter
flash.security
flash.system
flash.text
flash.text.Font
flash.text.StaticText
flash.text.TextField
flash.text.TextFormat
flash.text.TextLineMetrics
flash.text.TextSnapshot
flash.ui
flash.utils
flash.utils.ByteArray
flash.utils.System
flash.utils:IDataInput
flash.utils:IDataOutput
flash.utils:IExternalizable
flash.xml
float( %f )
floodFill
floor
floor0_exportbundle
floor1_encode
floor1_exportbundle
floor1_fit
floor1_interpolate_fit
floor@@GLIBC_2.2.5
floorf
floorf@@GLIBC_2.2.5
flush
flushed
fmod
fmod@@GLIBC_2.2.5
focalLength
focus
focusEnabled
focusGroupMask
focusIn
focusOut
focusRect
followRedirects
font
font-family
font-size
font-style
font-weight
fontFamily
fontName
fontScaleFactor
fontSize
fontStyle
fontType
fontWeight
font_provider_update
fopen
fopen@@GLIBC_2.2.5
forEach
forceSimple
formatToString
forwardAndBack
fprintf
fprintf@@GLIBC_2.2.5
fps
fputc
fputc@@GLIBC_2.2.5
fragment_idx <= num_token_partitions
frameConstructed
frameLabelCount = %d
frameRate
framerate
frames = %d
framesLoaded
fread
fread@@GLIBC_2.2.5
free@@GLIBC_2.2.5
frexp
frexp@@GLIBC_2.2.5
fromCharCode
fscommand
fseek
fseek@@GLIBC_2.2.5
fsize
ftell
ftell@@GLIBC_2.2.5
ftruncate64
ftruncate64@@GLIBC_2.2.5
full
fullScreen
fullScreenHeight
fullScreenInteractive
fullScreenSourceRect
fullScreenWidth
fullYear
fullYearUTC
function Function() {}
fwrite
fwrite@@GLIBC_2.2.5
g
g_Tier1_BitWriteMasks
g_Tier1_CRC32Table
g_Tier1_CRC64Table
g_Tier1_ExtraMasks
g_pCurrentFiberTL
g_pMemAlloc
gain
game
gamePadAnalogChange
gamma = (%d/100000)
gc
gc^A
generateFilterRect
generic
genre
gesture
gesturePan
gesturePressAndTap
gestureRotate
gestureSwipe
gestureTwoFingerTap
gestureZoom
getAscii
getBeginIndex
getBounds
getButtonsState
getBytesLoaded
getBytesTotal
getCamera
getCaretIndex
getCharBoundaries
getCharIndexAtPoint
getChildAt
getChildByName
getChildIDArray
getChildIndex
getClass
getCode
getCodeFileName
getCodeFileNames
getColorBoundsRect
getCompositionString
getControllerFocusGroup
getControllerMaskByFocusGroup
getConversionMode
getCount
getDate
getDay
getDefinition
getDefinitionByName
getDepth
getDescendants
getEdgeAAMode
getEnabled
getEndIndex
getErrorMessage
getExactCharBoundaries
getFirstCharInParagraph
getFocus
getFocusArray
getFocusBitmask
getFocusGroupMask
getFontList
getFullYear
getHitTestDisable
getHours
getIMECandidateListStyle
getIMECompositionStringStyle
getImageReference
getInputLanguage
getInstanceAtDepth
getLineIndexAtPoint
getLineIndexOfChar
getLineLength
getLineMetrics
getLineOffset
getLineText
getLoaderInfoByDefinition
getLocal
getMicrophone
getMilliseconds
getMinutes
getModalClip
getMonth
getMouseCursorType
getMouseTopMostEntity
getNamespaceForPrefix
getNewTextFormat
getNextHighestDepth
getNoTranslate
getObjectsUnderPoint
getPan
getParagraphLength
getPixel
getPixel32
getPixels
getPosition
getPrefixForNamespace
getProgress
getProperty
getQualifiedClassName
getQualifiedSuperclassName
getRGB
getRect
getRelativeMatrix3D
getRemote
getRendererFloat
getRendererString
getSWFVersion
getSeconds
getSelected
getSelectedText
getSize
getStackTrace
getStyle
getStyleNames
getText
getTextAutoSize
getTextExtent
getTextFormat
getTextRunInfo
getTextSnapshot
getTime
getTimer
getTimezoneOffset
getTopMostEntity
getTopmostLevel
getTransform
getUTCDate
getUTCDay
getUTCFullYear
getUTCHours
getUTCMilliseconds
getUTCMinutes
getUTCMonth
getUTCSeconds
getUTCYear
getVector
getVerticalAlign
getVolume
getYear
get_accDefaultAction
get_accFocus
get_accName
get_accRole
get_accSelection
get_accState
get_accValue
get_free_fb
getenv
getenv@@GLIBC_2.2.5
gettimeofday
gettimeofday@@GLIBC_2.2.5
gfxArg
gfxExtensions
gfxLanguage
gfxPlayer
gfxVersion
gfxfontlib
gfxfontlib.swf
glActiveTexture
glActiveTextureARB
glActiveTextureEXT
glAttachShader
glAttachShaderARB
glAttachShaderEXT
glBindAttribLocation
glBindAttribLocationARB
glBindAttribLocationEXT
glBindBuffer
glBindBufferARB
glBindBufferEXT
glBindFragDataLocation
glBindFragDataLocationARB
glBindFragDataLocationEXT
glBindFramebuffer
glBindFramebufferARB
glBindFramebufferEXT
glBindProgramPipeline
glBindProgramPipelineARB
glBindProgramPipelineEXT
glBindRenderbuffer
glBindRenderbufferARB
glBindRenderbufferEXT
glBindTexture
glBindVertexArray
glBindVertexArrayARB
glBindVertexArrayEXT
glBlendEquation
glBlendEquationARB
glBlendEquationEXT
glBlendFunc
glBlendFuncSeparate
glBlendFuncSeparateARB
glBlendFuncSeparateEXT
glBufferData
glBufferDataARB
glBufferDataEXT
glBufferSubData
glBufferSubDataARB
glBufferSubDataEXT
glCheckFramebufferStatus
glCheckFramebufferStatusARB
glCheckFramebufferStatusEXT
glClear
glClearColor
glClearStencil
glClientWaitSync
glClientWaitSyncARB
glClientWaitSyncEXT
glColorMask
glCompileShader
glCompileShaderARB
glCompileShaderEXT
glCompressedTexImage2D
glCompressedTexImage2DARB
glCompressedTexImage2DEXT
glCreateProgram
glCreateProgramARB
glCreateProgramEXT
glCreateShader
glCreateShaderARB
glCreateShaderEXT
glDeleteBuffers
glDeleteBuffersARB
glDeleteBuffersEXT
glDeleteFramebuffers
glDeleteFramebuffersARB
glDeleteFramebuffersEXT
glDeleteProgram
glDeleteProgramARB
glDeleteProgramEXT
glDeleteProgramPipelines
glDeleteProgramPipelinesARB
glDeleteProgramPipelinesEXT
glDeleteRenderbuffers
glDeleteRenderbuffersARB
glDeleteRenderbuffersEXT
glDeleteShader
glDeleteShaderARB
glDeleteShaderEXT
glDeleteSync
glDeleteSyncARB
glDeleteSyncEXT
glDeleteTextures
glDeleteVertexArrays
glDeleteVertexArraysARB
glDeleteVertexArraysEXT
glDisable
glDisableVertexAttribArray
glDisableVertexAttribArrayARB
glDisableVertexAttribArrayEXT
glDrawArrays
glDrawElements
glDrawElementsInstanced
glDrawElementsInstancedARB
glDrawElementsInstancedEXT
glEnable
glEnableVertexAttribArray
glEnableVertexAttribArrayARB
glEnableVertexAttribArrayEXT
glFenceSync
glFenceSyncARB
glFenceSyncEXT
glFlush
glFlushMappedBufferRange
glFlushMappedBufferRangeARB
glFlushMappedBufferRangeEXT
glFramebufferRenderbuffer
glFramebufferRenderbufferARB
glFramebufferRenderbufferEXT
glFramebufferTexture2D
glFramebufferTexture2DARB
glFramebufferTexture2DEXT
glGenBuffers
glGenBuffersARB
glGenBuffersEXT
glGenFramebuffers
glGenFramebuffersARB
glGenFramebuffersEXT
glGenProgramPipelines
glGenProgramPipelinesARB
glGenProgramPipelinesEXT
glGenRenderbuffers
glGenRenderbuffersARB
glGenRenderbuffersEXT
glGenTextures
glGenVertexArrays
glGenVertexArraysARB
glGenVertexArraysEXT
glGenerateMipmap
glGenerateMipmapARB
glGenerateMipmapEXT
glGetActiveUniform
glGetActiveUniformARB
glGetActiveUniformEXT
glGetAttribLocation
glGetAttribLocationARB
glGetAttribLocationEXT
glGetError
glGetFloatv
glGetFragDataLocation
glGetFragDataLocationARB
glGetFragDataLocationEXT
glGetFramebufferAttachmentParameteriv
glGetFramebufferAttachmentParameterivARB
glGetFramebufferAttachmentParameterivEXT
glGetIntegerv
glGetProgramBinary
glGetProgramBinaryARB
glGetProgramBinaryEXT
glGetProgramInfoLog
glGetProgramInfoLogARB
glGetProgramInfoLogEXT
glGetProgramPipelineInfoLog
glGetProgramPipelineInfoLogARB
glGetProgramPipelineInfoLogEXT
glGetProgramPipelineiv
glGetProgramPipelineivARB
glGetProgramPipelineivEXT
glGetProgramiv
glGetProgramivARB
glGetProgramivEXT
glGetRenderbufferParameteriv
glGetRenderbufferParameterivARB
glGetRenderbufferParameterivEXT
glGetShaderInfoLog
glGetShaderInfoLogARB
glGetShaderInfoLogEXT
glGetShaderiv
glGetShaderivARB
glGetShaderivEXT
glGetString
glGetStringi
glGetStringiARB
glGetStringiEXT
glGetSynciv
glGetSyncivARB
glGetSyncivEXT
glGetTexLevelParameteriv
glGetTexParameteriv
glGetUniformLocation
glGetUniformLocationARB
glGetUniformLocationEXT
glIsFramebuffer
glIsFramebufferARB
glIsFramebufferEXT
glIsProgram
glIsProgramARB
glIsProgramEXT
glIsRenderbuffer
glIsRenderbufferARB
glIsRenderbufferEXT
glLinkProgram
glLinkProgramARB
glLinkProgramEXT
glMapBuffer
glMapBufferARB
glMapBufferEXT
glMapBufferRange
glMapBufferRangeARB
glMapBufferRangeEXT
glPixelStorei
glProgramBinary
glProgramBinaryARB
glProgramBinaryEXT
glProgramParameteri
glProgramParameteriARB
glProgramParameteriEXT
glProgramUniform1fv
glProgramUniform1fvARB
glProgramUniform1fvEXT
glProgramUniform1iv
glProgramUniform1ivARB
glProgramUniform1ivEXT
glProgramUniform2fv
glProgramUniform2fvARB
glProgramUniform2fvEXT
glProgramUniform3fv
glProgramUniform3fvARB
glProgramUniform3fvEXT
glProgramUniform4fv
glProgramUniform4fvARB
glProgramUniform4fvEXT
glProgramUniformMatrix4fv
glProgramUniformMatrix4fvARB
glProgramUniformMatrix4fvEXT
glReadPixels
glRenderbufferStorage
glRenderbufferStorageARB
glRenderbufferStorageEXT
glScissor
glShaderSource
glShaderSourceARB
glShaderSourceEXT
glStencilFunc
glStencilMask
glStencilOp
glStringMarkerGREMEDY
glStringMarkerGREMEDYARB
glStringMarkerGREMEDYEXT
glTexImage2D
glTexParameteri
glTexSubImage2D
glUniform1f
glUniform1fARB
glUniform1fEXT
glUniform1fv
glUniform1fvARB
glUniform1fvEXT
glUniform1i
glUniform1iARB
glUniform1iEXT
glUniform1iv
glUniform1ivARB
glUniform1ivEXT
glUniform2f
glUniform2fARB
glUniform2fEXT
glUniform2fv
glUniform2fvARB
glUniform2fvEXT
glUniform3fv
glUniform3fvARB
glUniform3fvEXT
glUniform4fv
glUniform4fvARB
glUniform4fvEXT
glUniformMatrix4fv
glUniformMatrix4fvARB
glUniformMatrix4fvEXT
glUnmapBuffer
glUnmapBufferARB
glUnmapBufferEXT
glUseProgram
glUseProgramARB
glUseProgramEXT
glUseProgramStages
glUseProgramStagesARB
glUseProgramStagesEXT
glVertexAttribPointer
glVertexAttribPointerARB
glVertexAttribPointerEXT
glViewport
glXGetProcAddressARB
gl_FragColor = %s;}
gl_FragColor = color * cxmul + cxadd * color.a;}
globalToLocal
globalToLocal3D
gmtime
gmtime@@GLIBC_2.2.5
gotoAndPlay
gotoAndStop
gradients: numGradients = %d
graph
graphics
greenMultiplier
greenOffset
gridFitType
gx=%d, gy=%d, bx=%d, by=%d
h
hP
hand
hardlight
hasAccessibility
hasAudio
hasAudioEncoder
hasChildNodes
hasComplexContent
hasDefinition
hasEmbeddedVideo
hasEventListener
hasGlyphs
hasIME
hasMP3
hasOwnProperty
hasPrinting
hasProperty
hasScreenBroadcast
hasScreenPlayback
hasSimpleContent
hasStreamingAudio
hasStreamingVideo
hasTLS
hasVideoEncoder
hd=<
header crc mismatch
hide
hideBuiltInItems
hideObject
high
highlightAlpha
highlightColor
histogram
hitArea
hitTest
hitTestDisable
hitTestObject
hitTestPoint
hitTestState
hitTestTextNearPos
horizontal
hours
hoursUTC
html
htmlBoundsChange
htmlDOMInitialize
htmlRender
htmlText
http://adobe.com/AS3/2006/builtin
http://www.adobe.com/flash/proxy
http://www.w3.org/2000/xmlns/
http://www.w3.org/XML/1998/namespace
httpResponseStatus
httpStatus
i
i < 4
i8P/
ibeam
id = %d, symbol = '%s'
id3
idMap
identity
identityStatus
if1R
ifFrameLoaded
ignore
ignoreCase
ignoreComments
ignoreProcessingInstructions
ignoreWhite
ignoreWhitespace
ignoring out of range rgb_to_gray coefficients
illegal character(s) in public id
illegal parameter entity reference
image
imagecache
imagecache/%u
ime.xml
imeComposition
imecommand
img://
imgps://
implementsInterface
import: id = %d, name = %s
importAssets2: SourceUrl = %s, count = %d
importAssets: SourceUrl = %s, count = %d
inScopeNamespaces
inactiveSelectionBkgColor
inactiveSelectionTextColor
incompatible version
incomplete markup in parameter entity
inconsistent NEWLINE options
incorrect data check
incorrect gamma=(%d/100000)
incorrect header check
incorrect length check
incrementBy
index
indexBackgroundColor
indexInRun
indexOf
inflate
inflate 1.2.5 Copyright 1995-2010 Mark Adler
inflatePoint
init
initialize
inline
inner
input
inputMode
insertBefore
insertChildAfter
insertChildBefore
insideCutoff
instance{0}
insufficient memory
int( %d = 0x%X )
int64
intc%d
integer
interfaces.cpp
internal error: code overflow
internal error: overran compiling workspace
internal error: previously-checked referenced subpattern not found
internal error: unexpected repeat
internal error: unknown opcode in find_fixedlength()
interpolate
interpolateTo
intersection
intersects
invalid UTF-8 string
invalid background gamma type
invalid bit length repeat
invalid block type
invalid chunk type
invalid chunklength
invalid code -- missing end-of-block
invalid code lengths set
invalid condition (?(0)
invalid distance code
invalid distance too far back
invalid distances set
invalid error action to rgb_to_gray
invalid escape sequence in character class
invalid keyword character 0x%02X
invalid literal/length code
invalid literal/lengths set
invalid stored block lengths
invalid window size
invalidate
invert
ioError
is not implemented
isAccessible
isAttribute
isBatchingDisabled
isBuffering
isDebugger
isDefaultPrevented
isDown
isDynamic
isEmpty
isFinal
isFinite
isFocusInaccessible
isLabeledBy
isNaN
isPrimaryTouchPoint
isPropertyEnumerable
isPrototypeOf
isRelatedObjectInaccessible
isScaleform
isStatic
isStatusWindow
isToggled
isXMLName
iso-ir-6us
isspace
isspace@@GLIBC_2.2.5
iswspace
iswspace@@GLIBC_2.2.5
isxdigit
isxdigit@@GLIBC_2.2.5
italicbold
j
jP
japanese
join
junk after document element
justify
k
kerning
key
keyCode
keyDown
keyFocusChange
keyFrameInterval
keyLocation
keyUp
keyword length must be 1 - 79 characters
kh9F
knockout
koreana
l
l!;b
lP
labels
language
languages
lastChild
lastIndex
lastIndexOf
lcd
ld-linux-x86-64.so.2
ldexp
ldexp@@GLIBC_2.2.5
leading
leading spaces removed from keyword
leftExtension
leftMargin
leftPeak
leftToLeft
leftToRight
lengthSquared
letter-spacing
letterSpacing
libGL.so.1
libc.so.6
libm.so.6
libpng error: %s
libpng version 1.5.2 - March 31, 2011
libpng version 1.5.2 - March 31, 2011Copyright (c) 1998-2011 Glenn Randers-PehrsonCopyright (c) 1996-1997 Andreas DilgerCopyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.
libpthread.so.0
libscaleformui_4_gl.so
libstdc++.so.6
libsteam_api.so
libtier0.so
libvstdlib.so
lighten
lineGradientStyle
lineTo
linear
linearRGB
linkMouseOut
linkMouseOver
littleEndian
liveDelay
loadBitmap
loadBytes
loadPolicyFile
loadSound
loadVariables
loader
loaderInfo
loaderURL
local3DToGlobal
localAddress
localFileReadDisable
localName
localPort
localStorage
localToGlobal
localTrusted
localWithFile
localWithNetwork
localX
localY
localeCompare
localeconv@@GLIBC_2.2.5
locationChange
log
log@@GLIBC_2.2.5
logf@@GLIBC_2.2.5
longjmp
longjmp@@GLIBC_2.2.5
lookbehind assertion is not fixed length
loop
loopback
lowConfSegment
lower
lseek64
lseek64@@GLIBC_2.2.5
m
macType
malformed \P or \p sequence
malformed number or name after (?(
malformed sPLT chunk
malloc
malloc@@GLIBC_2.2.5
manageCookies
manufacturer
mapBitmap
mapPoint
mapping0_exportbundle
margin-left
margin-right
marginLeft
marginRight
marshallExceptions
mat:
mathlib_base.cpp
matrix
matrix3D
matrixType
matrixX
matrixY
matrix_a
matrix_b
matrix_c
matrix_d
matrix_tx
matrix_ty
max
max. %f
maxChars
maxLevel
maxScrollH
maxScrollV
maxTouchPoints
maxhscroll
maxscroll
mdct_backward
mdct_clear
mdct_forward
mdct_init
medium
memcmp
memcmp@@GLIBC_2.2.5
memcpy
memcpy@@GLIBC_2.14
memmove
memmove@@GLIBC_2.2.5
memset
memset@@GLIBC_2.2.5
menu
menuItemSelect
menuSelect
merge
message
metadata
metadata: %s
microphone
middleClick
middleMouseDown
middleMouseUp
milliseconds
millisecondsUTC
min
min. %f
minutes
minutesUTC
mismatched tag
missing )
missing ) after comment
missing terminating ] for character class
miter
mixed
mj>
modalClip
modf@@GLIBC_2.2.5
modificationDate
month
monthUTC
morph fill style begin color:
morph fill style end color:
morph fill style type = 0x%X
morph fsr BitmapChar = %d
morph fsr: numGradients = %d
motionLevel
motionTimeout
mouseChildren
mouseCursorChange
mouseDown
mouseEnabled
mouseFocusChange
mouseIdx
mouseLeave
mouseMove
mouseOut
mouseOver
mouseTarget
mouseUp
mouseWheel
mouseWheelEnabled
mouseX
mouseY
moveFocus
moveFocus - invalid string id for key: '%s'
moveTo
movieclip
multiline
multiply
must not undeclare prefix
muted
mvp
n
n@The method NetStream::bufferLengthGet() is not implemented
name = %s
namespace
namespaceDeclarations
namespaceURI
navigateToURL
navigateToURL failed! UrlNavigator state is not installed.
navigation
nearEquals
need dictionary
negate
nestingIdx
netStatus
networkChange
never
new_layout_
nextFrame
nextName
nextNameIndex
nextScene
nextSibling
nextValue
no
no element found
no error
noAdvance
noAutoLabeling
noAutoSelection
noBorder
noInvisibleAdvance
noScale
noTranslate
nodeKind
nodeName
nodeType
nodeValue
noise
none
normal
normalize
not well-formed (invalid token)
notconnected
nothing to repeat
notify
numChildren
numControllers
numFocusGroups
numFrames
numLines
numLock
number
number after (?C is > 255
number is too big
number too big in {} quantifier
numberOfFramePools
numbers out of order in {} quantifier
o
objectEncoding
objectID
octal value is greater than \377 (not in UTF-8 mode)
offset
offsetPoint
offsetX
offsetY
offset[%d] = %d
offset[0] = %d
oggpackB_adv
oggpackB_adv1
oggpackB_bits
oggpackB_bytes
oggpackB_get_buffer
oggpackB_look
oggpackB_look1
oggpackB_read
oggpackB_read1
oggpackB_readinit
oggpackB_reset
oggpackB_write
oggpackB_writealign
oggpackB_writecheck
oggpackB_writeclear
oggpackB_writecopy
oggpackB_writeinit
oggpackB_writetrunc
oggpack_adv
oggpack_adv1
oggpack_bits
oggpack_bytes
oggpack_get_buffer
oggpack_look
oggpack_look1
oggpack_read
oggpack_read1
oggpack_readinit
oggpack_reset
oggpack_write
oggpack_writealign
oggpack_writecheck
oggpack_writeclear
oggpack_writecopy
oggpack_writeinit
oggpack_writetrunc
okOP
onChanged
onConstruct
onCuePoint
onData
onDisplayStatusWindow
onDragOut
onDragOutAux
onDragOver
onDragOverAux
onEnterFrame
onHTTPStatus
onIMEComposition
onKeyDown
onKeyUp
onKillFocus
onLoad
onLoadComplete
onLoadError
onLoadInit
onLoadProgress
onLoadStart
onMetaData
onMouseDown
onMouseMove
onMouseUp
onMouseWheel
onPause
onPress
onPressAux
onRelease
onReleaseAux
onReleaseOutside
onReleaseOutsideAux
onRemoveStatusWindow
onResize
onResume
onRollOut
onRollOver
onScroller
onSetConversionStatus
onSetCurrentInputLanguage
onSetFocus
onSetIMEName
onSetSupportedIMEs
onSetSupportedLanguages
onSockClose
onSockConnect
onSockData
onSockXML
onSoundComplete
onSubtitle
onSwitchLanguage
onUnload
onXMLData
onXMLLoad
opaqueBackground
open
open64
open64@@GLIBC_2.2.5
openTimeout
opendir
opendir@@GLIBC_2.2.5
operand of unlimited repeat could match the empty string
optional
options_x360
orientation
orientationChange
orientationChanging
originalRect
out of memory
outer
outline
outsideCutoff
overState
overlay
p
p@
pA
pD
pP
package internal
pad
paletteMap
pan
parameters
parentAllowsChild
parentDomain
parentNode
parentSandboxBridge
parentheses nested too deeply
parse
parseCSS
parseFloat
parseInt
parseXML
parser not suspended
parser suspended
parsing aborted
parsing finished
partial character
password
paste
pasteFromClipboard
pause
pbi->common.multi_token_partition <= EIGHT_PARTITION
pbi->num_fragments < 9
pending
perlinNoise
perspectiveProjection
phase
phraseLengthAdj
pipe
pipe@@GLIBC_2.2.5
pitch
pixelAspectRatio
pixelBounds
pixelDissolve
pixelSnapping
playerType
pm
pm"U
png_do_quantize returned rowbytes=0
png_do_rgb_to_gray found nongray pixel
png_inflate logic error
png_set_background
png_set_gAMA
png_set_gamma file gamma
png_set_gamma screen gamma
png_write_info was never called before png_write_row
pointAt
polar
pop
pos
posix_fadvise64
posix_fadvise64@@GLIBC_2.2.5
post
pow
pow@@GLIBC_2.2.5
pread64
pread64@@GLIBC_2.2.5
precisionHint
prefix
prefix must not be bound to one of the reserved namespace names
prepend
prependChild
prependRotation
prependScale
prependTranslation
preserveAlpha
pressure
prettyIndent
prettyPrinting
prevFrame
prevScene
preventDefault
previousSibling
print
printObjectsReport
privacy
private
processing-instruction
processingInstructions
progress
project
projectionCenter
propertyIsEnumerable
proxyType
pthread_attr_destroy
pthread_attr_destroy@@GLIBC_2.2.5
pthread_attr_init
pthread_attr_init@@GLIBC_2.2.5
pthread_attr_setdetachstate
pthread_attr_setdetachstate@@GLIBC_2.2.5
pthread_attr_setschedparam
pthread_attr_setschedparam@@GLIBC_2.2.5
pthread_attr_setstacksize
pthread_attr_setstacksize@@GLIBC_2.2.5
pthread_cond_broadcast
pthread_cond_broadcast@@GLIBC_2.3.2
pthread_cond_destroy
pthread_cond_destroy@@GLIBC_2.3.2
pthread_cond_init
pthread_cond_init@@GLIBC_2.3.2
pthread_cond_signal
pthread_cond_signal@@GLIBC_2.3.2
pthread_cond_timedwait
pthread_cond_timedwait@@GLIBC_2.3.2
pthread_cond_wait
pthread_cond_wait@@GLIBC_2.3.2
pthread_create
pthread_create@@GLIBC_2.2.5
pthread_exit
pthread_exit@@GLIBC_2.2.5
pthread_join
pthread_join@@GLIBC_2.2.5
pthread_mutex_destroy
pthread_mutex_destroy@@GLIBC_2.2.5
pthread_mutex_init
pthread_mutex_init@@GLIBC_2.2.5
pthread_mutex_lock
pthread_mutex_lock@@GLIBC_2.2.5
pthread_mutex_trylock
pthread_mutex_trylock@@GLIBC_2.2.5
pthread_mutex_unlock
pthread_mutex_unlock@@GLIBC_2.2.5
pthread_mutexattr_init
pthread_mutexattr_init@@GLIBC_2.2.5
pthread_mutexattr_settype
pthread_mutexattr_settype@@GLIBC_2.2.5
pthread_once
pthread_once@@GLIBC_2.2.5
pthread_self
pthread_self@@GLIBC_2.2.5
ptr( 0x%p )
public
publish
punct
push
puts
puts@@GLIBC_2.2.5
pwrite64
pwrite64@@GLIBC_2.2.5
q
q>(
qsort
qsort@@GLIBC_2.2.5
quaternion
r
r+b
rP
radial
rand@@GLIBC_2.2.5
random
range out of order in character class
ratio: %f
ratios
rawData
rb
read
read font "%s"
read@@GLIBC_2.2.5
readBoolean
readByte
readBytes
readDouble
readExternal
readFloat
readInt
readMultiByte
readObject
readShort
readUTF
readUTFBytes
readUnsignedByte
readUnsignedInt
readUnsignedShort
readdir64
readdir64@@GLIBC_2.2.5
reading DefineCompactedFont:
reading DefineFont
reading DefineFont2:
reading DefineFont3:
reading DefineFontInfo
reading DefineFontInfo2
reading code table at offset %d
readingWindowBackgroundColor
readingWindowFontSize
readingWindowTextColor
readlink
readlink@@GLIBC_2.2.5
readonly
readwrite
realloc
realloc@@GLIBC_2.2.5
receiveAudio
receiveVideo
receiveVideoFPS
recompose
rectangle
recursive call could loop indefinitely
recursive entity reference
redMultiplier
redOffset
reference to binary entity
reference to external entity in attribute
reference to invalid character number
reference to non-existent subpattern
referencesStatus
reflect
registerClass
registerFont
regular
regular expression is too large
relatedObject
reloadThresholdTime
remote
remoteAddress
remotePort
removeChild
removeChildAt
removeChildren
removeEventListener
removeListener
removeMovieClip
removeMovieClip("%s") failed - depth must be >= 0
removeNamespace
removeNode
removeTextField
removed
removedFromStage
render
rendererFloat
rendererString
repeatCount
repeated subpattern is too long
repeating a DEFINE group is not allowed
replace
replaceSel
replaceSelectedText
replaceText
replicated
requestHeaders
requested feature requires XML_DTD support in Expat
res0_free_info
res0_free_look
res0_inverse
res0_look
res0_pack
res0_unpack
res1_class
res1_forward
res1_inverse
res2_class
res2_forward
res2_inverse
reserved prefix (xml) must not be undeclared or bound to another namespace name
reserved prefix (xmlns) must not be declared or undeclared
reset
resetDRMVouchers
residue0_exportbundle
residue1_exportbundle
residue2_exportbundle
resize
resource/flash
resource/flash3
resource/flash3/%s
resource/flash3/images/%s.png
resource/flash3/images/avatars/default_184.png
resource/flash3/images/econ/default_item.png
resourcehandle
responseHeaders
responseURL
restrict
resume
returnType
reverse
revocationCheckSetting
rewind
rewind@@GLIBC_2.2.5
rgb
rgb to gray green coefficient
rgb to gray red coefficient
rightClick
rightExtension
rightMargin
rightMouseDown
rightMouseUp
rightPeak
rightToLeft
rightToRight
rollOut
rollOver
root1
rotate
rotatedLeft
rotatedRight
rotationX
rotationY
rotationZ
running
s
sPLT chunk has bad length
sPLT chunk requires too much memory
safeRect
sameDomain
sampleRate
samples
save
scale9Grid
scaleBy
scaleMode
scaleX
scaleY
scaleZ
scaleform.gfx
scaleform.gfx.FocusEventEx
scaleform.gfx.IMECandidateListStyle
scaleform.gfx.IMEEventEx
scaleform.gfx.KeyboardEventEx
scaleform.gfx.MouseCursorEvent
scaleform.gfx.MouseEventEx
scaleform.gfx.TextEventEx
scaleform: illegal attempt to set %s to type number# 0x%x
scaleform: script called setconver with %d args
scaleform: script called setconver with bad first argument
scaleform_avatar_debug
scaleform_spew
scaleform_update
scaleformuiimpl/scaleformui_movie.cpp
scandir64
scandir64@@GLIBC_2.2.5
scenes
sched_yield
sched_yield@@GLIBC_2.2.5
schinese
scolor
scolor2
screen
screenColor
screenDPI
screenResolutionX
screenResolutionY
scripts/controller_options.360.txt
scrollH
scrollRect
scrollV
search
searchText
securityDomain
securityError
seek
select
selectAll
selectable
selected
selectedBackgroundColor
selectedIndexBackgroundColor
selectedTextBackgroundColor
selectedTextColor
selectionActiveIndex
selectionAnchorIndex
selectionBeginIndex
selectionBkgColor
selectionEndIndex
selectionTextColor
sem_destroy
sem_destroy@@GLIBC_2.2.5
sem_init
sem_init@@GLIBC_2.2.5
sem_post
sem_post@@GLIBC_2.2.5
sem_wait
sem_wait@@GLIBC_2.2.5
send
sendAndLoad
sep
separate_shader_objects
separatorBefore
serverString
server_can_execute
setAdvancedAntiAliasingTable
setBackgroundAlpha
setBufferTime
setChildIndex
setChildren
setClipboard
setCompositionString
setControllerFocusGroup
setConversionMode
setCursorType
setDRMAuthenticationCredentials
setDate
setDirty
setEdgeAAMode
setEmpty
setEnabled
setFocus
setFocusGroupMask
setFullYear
setHitTestDisable
setHours
setIMECandidateListStyle
setIMECompositionStringStyle
setIMEEnabled
setImageSubstitutions
setInterval
setKeyFrameInterval
setLocalName
setLoopBack
setLoopback
setMask
setMilliseconds
setMinutes
setModalClip
setMode
setMonth
setMotionLevel
setMouseCursorType
setName
setNamespace
setNewTextFormat
setNoTranslate
setNumberOfFramePools
setOpenTimeout
setOrientation
setPan
setPixel
setPixel32
setPixels
setProperty
setPropertyIsEnumerable
setQuality
setRGB
setReloadThresholdTime
setRendererFloat
setRendererString
setSeconds
setSelectColor
setSelected
setSelection
setSettings
setSilenceLevel
setSoundSpatial
setStyle
setTextAutoSize
setTextFormat
setTime
setTimeout
setTopmostLevel
setTransform
setUTCDate
setUTCFullYear
setUTCHours
setUTCMilliseconds
setUTCMinutes
setUTCMonth
setUTCSeconds
setUTCYear
setUseEchoSuppression
setVector
setVerticalAlign
setVolume
setYear
settingsManager
setup_token_decoder
sf_debug_file_opens
sf_info
sf_joy_translate_to_keys
sf_print_objects_report
sf_using_external_ime
shader
shadowAlpha
shadowAngle
shadowBlurX
shadowBlurY
shadowColor
shadowDistance
shadowHideObject
shadowKnockOut
shadowOutline
shadowQuality
shadowStrength
shadowStyle
sharedEvents
sharpness
shiftKey
shifttab
shortcut
show
showAll
showDefaultContextMenu
showMenu
showSettings
shrink
signerCN
signerDN
signerExtendedKeyUsages
signerTrustSettings
silenceLevel
silenceTimeout
silent
sin@@GLIBC_2.2.5
sincos
sincos@@GLIBC_2.2.5
sincosf
sincosf@@GLIBC_2.2.5
single
singleplayer
sizeX
sizeY
sizeof(XML_Char)
sizeof(XML_LChar)
sleep@@GLIBC_2.2.5
slice
smoothing
snprintf@@GLIBC_2.2.5
socketData
some
songName
sort
sortOn
soundComplete
soundIOError
soundTransform
source
space
spare error
splice
split
sprite  char id = %d
sqrt
sqrt@@GLIBC_2.2.5
sqrtf
sqrtf@@GLIBC_2.2.5
square
srand
srand@@GLIBC_2.2.5
srctex
srctexscale
ss_added
sscanf@@GLIBC_2.2.5
stage
stageFocusRect
stageHeight
stageWidth
stageX
stageY
standalone
standalone="no"
standalone="yes"
start
startDrag
startTouchDrag
static protected
status
status != __null
std::string::_M_leak_hard()
std::terminate()
stderr
stderr@@GLIBC_2.2.5
stop
stopAll
stopDrag
stopImmediatePropagation
stopPropagation
stopTouchDrag
strcasecmp
strcasecmp@@GLIBC_2.2.5
strcat
strcat@@GLIBC_2.2.5
strchr
strchr@@GLIBC_2.2.5
strcmp
strcmp@@GLIBC_2.2.5
strcpy
strcpy@@GLIBC_2.2.5
strcspn
strcspn@@GLIBC_2.2.5
stream end
strength
strftime
strftime@@GLIBC_2.2.5
strlen
strlen@@GLIBC_2.2.5
strncasecmp
strncasecmp@@GLIBC_2.2.5
strncmp
strncmp@@GLIBC_2.2.5
strncpy@@GLIBC_2.2.5
strnlen
strnlen@@GLIBC_2.2.5
strrchr
strrchr@@GLIBC_2.2.5
strspn
strspn@@GLIBC_2.2.5
strstr
strstr@@GLIBC_2.2.5
strtod@@GLIBC_2.2.5
strtok@@GLIBC_2.2.5
strtol
strtol@@GLIBC_2.2.5
strtoul
strtoul@@GLIBC_2.2.5
strtoull
strtoull@@GLIBC_2.2.5
stub
styleNames
styleSheet
subAudioTrack
subSoundTransform
subString
subpattern name expected
subpattern name is too long (maximum 32 characters)
subpixel
substr
substring
subtitleTrack
subtitleTracksCount
subtitleTracksNumber
subtract
super
support for \P, \p, and \X has not been compiled
supportedGestures
supportsAnalogEvents
supportsGestureEvents
supportsOrientationChange
supportsTouchEvents
swapChildren
swapChildrenAt
swapDepths
swfSync
swfVersion
swipe
syntax error
syntax error in subpattern name (missing terminator)
sysconf
sysconf@@GLIBC_2.2.5
t
t@
tP
tRNS chunk has out-of-range samples for bit_depth
tRNS chunk not allowed with alpha channel
tabChildren
tabChildrenChange
tabEnabled
tabEnabledChange
tabIndex
tabIndexChange
tabStops
tan@@GLIBC_2.2.5
tanf@@GLIBC_2.2.5
tapLocalX
tapLocalY
tapStageX
tapStageY
tc%d = intc%d * srctexscale;
tc%d = intc%d * texscale;
tchinese
test
texgen
text compression mode is out of range
text declaration not well-formed
text style change
text-align
text-decoration
text-indent
textAlign
textAutoSize
textColor
textDecoration
textFieldHeight
textFieldWidth
textHeight
textIndent
textInput
textSnapshot
textWidth
thick
thickness
this
this version of PCRE is not compiled with PCRE_UCP support
this version of PCRE is not compiled with PCRE_UTF8 support
threshold
throwError
thunk
thunk function
time@@GLIBC_2.2.5
timeout
timer
timerComplete
timezoneOffset
toDateString
toExponential
toFixed
toLocaleDateString
toLocaleLowerCase
toLocaleString
toLocaleTimeString
toLocaleUpperCase
toLowerCase
toMatrix3D
toPrecision
toString
toTimeString
toUTCString
toUpperCase
toXMLString
togglePause
tolower
tolower@@GLIBC_2.2.5
too many forward references
too many length or distance symbols
too many named subpatterns (maximum 10000)
topExtension
topLeft
topmostLevel
totalFrames
totalMemory
totalSamples
touchBegin
touchEnd
touchMove
touchOut
touchOver
touchPoint
touchPointID
touchRollOut
touchRollOver
touchTap
toupper
toupper@@GLIBC_2.2.5
trace
track
trackAsMenu
trackIndex
trailing spaces removed from keyword
transform
transformPoint
transformVector
transformVectors
translate
transparent
transpose
true
trunc@@GLIBC_2.2.5
two named subpatterns have the same name
typeinfo for CThreadSyncObject
typeof unknown - %02X
u
u64( %lld = 0x%llX )
ui.click_forward
ui.click_toptab
ui.highlight_misc
unbound prefix
unclosed CDATA section
unclosed token
uncompress
undefined
undefined entity
underline
underlineColor
underlineStyle
unescape
unescapeMultiByte
unescapeSpecialHTML
unexpected parser state - please send a bug report
unicode
unicode-1-1-utf-8
uniform mat4 cxmul;uniform mat4 cxmul1;uniform sampler2D tex[2];varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor_original = texture2D(tex[int(0.0)], tc0);vec4 fcolor_source   = texture2D(tex[int(1.0)], tc1);gl_FragColor = (fcolor_original) * ( cxmul) + (fcolor_source) * ( cxmul1);}
uniform mat4 mvp;attribute vec2 atc;attribute vec4 pos;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc = atc;}
uniform mat4 mvp;attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;void main() {gl_Position = (pos) * ( mvp);color = acolor;factor = afactor;}
uniform mat4 mvp;attribute vec4 acolor;attribute vec4 pos;varying vec4 color;void main() {gl_Position = (pos) * ( mvp);color = acolor;}
uniform mat4 mvp;attribute vec4 pos;void main() {gl_Position = (pos) * ( mvp);}
uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 pos;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);}
uniform mat4 mvp;uniform vec4 texgen[4];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = (pos) * ( mvp);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);factor = afactor;}
uniform mat4 vfmuniforms[24];attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc = atc;}
uniform mat4 vfmuniforms[24];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;factor = afactor;}
uniform mat4 vfmuniforms[24];attribute vec4 acolor;attribute vec4 pos;attribute float vbatch;varying vec4 color;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);color = acolor;}
uniform mat4 vfmuniforms[24];attribute vec4 pos;attribute float vbatch;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[144];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 3.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 6.0 + 1.0+ 0.1)];factor = afactor;}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc = atc;fucxadd = vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 2.0 + 1.0+ 0.1)];}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec2 tc;varying vec4 vcolor;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);vcolor = acolor * vfuniforms[int(vbatch * 2.0 + 1.0+ 0.1)] + vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1)];tc = atc;}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 1.0)]);factor = afactor;}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;fucxadd = vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 2.0 + 1.0+ 0.1)];factor = afactor;}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec4 pos;attribute float vbatch;varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);color = acolor;fucxadd = vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 2.0 + 1.0+ 0.1)];}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 1.0)]);factor = afactor;}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[48];attribute vec4 pos;attribute float vbatch;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 4.0 + 1.0+ 0.1)];factor = afactor;}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 3.0)]);factor = afactor;}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(afactor.b*255.01 * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 4.0 + 1.0+ 0.1)];factor = afactor;}
uniform mat4 vfmuniforms[24];uniform vec4 vfuniforms[96];attribute vec4 pos;attribute float vbatch;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( vfmuniforms[int(vbatch * 1.0 + 0.0+ 0.1)]);tc.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)];}
uniform sampler2D srctex;uniform sampler2D tex;varying vec2 tc;void main() {vec4 fchannels = texture2D(tex, tc);gl_FragColor  = texture2D(srctex, vec2(fchannels.r, 0.125));gl_FragColor += texture2D(srctex, vec2(fchannels.g, 0.375));gl_FragColor += texture2D(srctex, vec2(fchannels.b, 0.625));gl_FragColor += texture2D(srctex, vec2(fchannels.a, 0.875));}
uniform sampler2D tex;uniform vec2 texscale;uniform vec4 cxmul;uniform vec4 cxadd;uniform float samples;
uniform sampler2D tex;varying vec2 tc;varying vec4 vcolor;void main() {vec4 c = vcolor;c.a = c.a * texture2D(tex, tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec2 tc;varying vec4 vcolor;void main() {vec4 c = vcolor;c.a = c.a * texture2D(tex, tc).a;gl_FragColor = c;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec2 tc;varying vec4 vcolor;void main() {vec4 c = vcolor;c.a = c.a * texture2D(tex, tc).a;gl_FragColor = c;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {vec4 fcolor0 = texture2D(tex,tc);vec4 fcolor1 = color;gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 factor;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 factor;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 factor;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);vec4 diff = fcolor0 - fcolor1;vec4 oneValue = vec4(1.0/255.0, 1.0/255.0, 1.0/255.0, 1.0/255.0 );vec4 ltZero = (sign(diff)+vec4(1.0,1,1.0,1))*-0.25;vec4 partDiff = oneValue * (sign(ltZero)+vec4(1.0,1,1.0,1));vec4 wrapDiff = fract(diff + vec4(1.0,1,1.0,1)) + partDiff;float rgbdiff = sign(dot(wrapDiff.rgb, vec3(1.0,1,1.0)));gl_FragColor = mix( vec4(1.0,1,1.0, wrapDiff.a), vec4(wrapDiff.rgb, 1.0), rgbdiff );}
uniform sampler2D tex[2];varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);float inAlpha = fcolor_src.a;gl_FragColor.a = 1.0;gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
uniform sampler2D tex[2];varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);float inAlpha = fcolor_src.a;gl_FragColor.a = inAlpha;gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
uniform sampler2D tex[2];varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);float inAlpha = fcolor_src.a;gl_FragColor.a = mix(inAlpha, 1.0, fcolor_org.a);gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[2];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {vec4 fcolor0 = texture2D(tex[int(0.0)], tc0);vec4 fcolor1 = texture2D(tex[int(1.0)], tc1);gl_FragColor = mix(fcolor1, fcolor0, factor.r);gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec2 tc0;varying vec2 tc1;varying vec2 tc2;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);vec4 fcolor_alp = texture2D(tex[int(2.0)], tc2);float inAlpha = fcolor_src.a * fcolor_alp.a;gl_FragColor.a = 1.0;gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
uniform sampler2D tex[3];varying vec2 tc0;varying vec2 tc1;varying vec2 tc2;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);vec4 fcolor_alp = texture2D(tex[int(2.0)], tc2);float inAlpha = fcolor_src.a * fcolor_alp.a;gl_FragColor.a = inAlpha;gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
uniform sampler2D tex[3];varying vec2 tc0;varying vec2 tc1;varying vec2 tc2;void main() {vec4 fcolor_org = texture2D(tex[int(0.0)], tc0);vec4 fcolor_src = texture2D(tex[int(1.0)], tc1);vec4 fcolor_alp = texture2D(tex[int(2.0)], tc2);float inAlpha = fcolor_src.a * fcolor_alp.a;gl_FragColor.a = mix(inAlpha, 1.0, fcolor_org.a);gl_FragColor.rgb = mix(fcolor_org.rgb, fcolor_src.rgb, inAlpha / gl_FragColor.a);}
uniform sampler2D tex[3];varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec4 factor;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec4 factor;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[3];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = 1.0;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 factor;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 factor;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 factor;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform sampler2D tex[4];varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {float c0 = float((texture2D(tex[int(0.0)], tc).a - 16./255.) * 1.164);float U0 = float(texture2D(tex[int(1.0)], tc).a - 128./255.);float V0 = float(texture2D(tex[int(2.0)], tc).a - 128./255.);vec4 c = vec4(c0,c0,c0,c0);vec4 U = vec4(U0,U0,U0,U0);vec4 V = vec4(V0,V0,V0,V0);c += V * vec4(1.596, -0.813, 0.0, 0.0);c += U * vec4(0.0, -0.392, 2.017, 0.0);c.a = texture2D(tex[int(3.0)], tc).a;gl_FragColor = c;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform vec2 srctexscale;
uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor) * (cxmul) + cxadd * (gl_FragColor.a + cxadd.a);gl_FragColor = gl_FragColor;}
uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor) * (cxmul) + cxadd * (gl_FragColor.a + cxadd.a);gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;varying vec4 factor;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor) * (cxmul) + cxadd * (gl_FragColor.a + cxadd.a);gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
uniform vec4 cxadd;uniform mat4 cxmul;uniform sampler2D tex;varying vec4 factor;varying vec2 tc;void main() {gl_FragColor = texture2D(tex,tc);gl_FragColor = (gl_FragColor) * (cxmul) + cxadd * (gl_FragColor.a + cxadd.a);gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;attribute vec2 atc;attribute vec4 pos;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc = atc;fucxadd = cxadd;fucxmul = cxmul;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;attribute vec4 acolor;attribute vec2 atc;attribute vec4 pos;varying vec2 tc;varying vec4 vcolor;void main() {gl_Position = (pos) * ( mvp);vcolor = acolor * cxmul + cxadd;tc = atc;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = (pos) * ( mvp);color = acolor;fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;attribute vec4 acolor;attribute vec4 pos;varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = (pos) * ( mvp);color = acolor;fucxadd = cxadd;fucxmul = cxmul;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[2];attribute vec4 pos;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = (pos) * ( mvp);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform mat4 mvp;uniform vec4 texgen[4];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = (pos) * ( mvp);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];attribute vec2 atc;attribute vec4 pos;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc = atc;fucxadd = cxadd;fucxmul = cxmul;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];attribute vec4 acolor;attribute vec2 atc;attribute vec4 pos;varying vec2 tc;varying vec4 vcolor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);vcolor = acolor * cxmul + cxadd;tc = atc;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];attribute vec4 acolor;attribute vec4 pos;varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;fucxadd = cxadd;fucxmul = cxmul;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 pos;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);fucxadd = cxadd;fucxmul = cxmul;}
uniform vec4 cxadd;uniform vec4 cxmul;uniform vec4 mvp[2];uniform vec4 texgen[4];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);fucxadd = cxadd;fucxmul = cxmul;factor = afactor;}
uniform vec4 cxmul;void main() {gl_FragColor = cxmul;gl_FragColor = gl_FragColor;}
uniform vec4 cxmul;void main() {gl_FragColor = cxmul;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 cxmul;void main() {gl_FragColor = cxmul;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);float  i = 0.0;for (i = -fsize.x; i <= fsize.x; i++){{color += texture2DLod(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.gl_FragColor = color * fsize.w;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);float  i = 0.0;for (i = -fsize.x; i <= fsize.x; i++){{color += texture2DLod(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.gl_FragColor = color * fsize.w;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.gl_FragColor = color * fsize.w;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + i * texscale.xy, 0.0);}} // EndBox1/2.gl_FragColor = color * fsize.w;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - gl_FragColor.a) * fsize.z, 0.0, 1.0);gl_FragColor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - gl_FragColor.a) * fsize.z, 0.0, 1.0);gl_FragColor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - gl_FragColor.a) * fsize.z, 0.0, 1.0);gl_FragColor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);float lerpval = clamp((base.a - gl_FragColor.a) * fsize.z, 0.0, 1.0);gl_FragColor = mix(base, scolor, lerpval) * base.a;vec4 knockout = base * (1.0-lerpval) * base.a;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor = scolor * clamp(gl_FragColor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor = scolor * clamp(gl_FragColor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor = scolor * clamp(gl_FragColor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor = scolor * clamp(gl_FragColor.a * (1.0-base.a) * fsize.z, 0.0, 1.0) + base;vec4 knockout = base;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;gl_FragColor = scolor * clamp(gl_FragColor.a * fsize.z, 0.0, 1.0);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0);}} // EndBox2.gl_FragColor = color * fsize.w;gl_FragColor = scolor * clamp(gl_FragColor.a * fsize.z, 0.0, 1.0);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r) * base.a;gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r)) * base.a;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r) * base.a;gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r)) * base.a;gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r) * base.a;gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r)) * base.a;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r) * base.a;gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r)) * base.a;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r);gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r));gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base * (1.0 - gl_FragColor.a - gl_FragColor.r);gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r + base* (1.0 - gl_FragColor.a - gl_FragColor.r));gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;gl_FragColor = ((scolor * gl_FragColor.a + scolor2 * gl_FragColor.r)*(1.0-base.a) + base);gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;gl_FragColor = ((scolor * gl_FragColor.a + scolor2 * gl_FragColor.r)*(1.0-base.a) + base);gl_FragColor -= knockout;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;gl_FragColor = ((scolor * gl_FragColor.a + scolor2 * gl_FragColor.r)*(1.0-base.a) + base);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D srctex;uniform vec4 srctexscale;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;vec4 base = texture2DLod(srctex, tc * srctexscale.xy, 0.0);gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);vec4 knockout = base;gl_FragColor = ((scolor * gl_FragColor.a + scolor2 * gl_FragColor.r)*(1.0-base.a) + base);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 fsize;uniform vec4 offset;uniform vec4 scolor;uniform vec4 scolor2;uniform sampler2D tex;uniform vec4 texscale;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_FragColor       = vec4(0.0, 0.0, 0.0, 0.0);vec4 color = vec4(0.0, 0.0, 0.0, 0.0);vec2 i = vec2(0.0, 0.0);for (i.x = -fsize.x; i.x <= fsize.x; i.x++){for (i.y = -fsize.y; i.y <= fsize.y; i.y++){color.a += texture2DLod(tex, tc + (offset.xy + i) * texscale.xy, 0.0).a;color.r += texture2DLod(tex, tc - (offset.xy + i) * texscale.xy, 0.0).a;}} // EndBox2.gl_FragColor = color * fsize.w;gl_FragColor.ar = clamp((1.0 - gl_FragColor.ar * fsize.z) - (1.0 - gl_FragColor.ra * fsize.z), 0.0, 1.0);gl_FragColor = (scolor * gl_FragColor.a + scolor2 * gl_FragColor.r);gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
uniform vec4 mvp[2];attribute vec2 atc;attribute vec4 pos;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc = atc;}
uniform vec4 mvp[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;factor = afactor;}
uniform vec4 mvp[2];attribute vec4 acolor;attribute vec4 pos;varying vec4 color;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;}
uniform vec4 mvp[2];attribute vec4 pos;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);}
uniform vec4 mvp[2];uniform vec2 texscale;
uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);color = acolor;tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);factor = afactor;}
uniform vec4 mvp[2];uniform vec4 texgen[2];attribute vec4 pos;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc.x = dot(pos, texgen[int(0.0)]);tc.y = dot(pos, texgen[int(1.0)]);}
uniform vec4 mvp[2];uniform vec4 texgen[4];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);factor = afactor;}
uniform vec4 mvp[2];uniform vec4 texgen[4];attribute vec4 pos;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);}
uniform vec4 mvp[2];uniform vec4 texgen[6];attribute vec4 pos;varying vec2 tc0;varying vec2 tc1;varying vec2 tc2;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, mvp[int(0.0)]);gl_Position.y = dot(pos, mvp[int(1.0)]);tc0.x = dot(pos, texgen[int(0.0)]);tc0.y = dot(pos, texgen[int(1.0)]);tc1.x = dot(pos, texgen[int(2.0)]);tc1.y = dot(pos, texgen[int(3.0)]);tc2.x = dot(pos, texgen[int(4.0)]);tc2.y = dot(pos, texgen[int(5.0)]);}
uniform vec4 scolor2;
uniform vec4 scolor;uniform sampler2D srctex;
uniform vec4 vfuniforms[144];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 6.0 + 1.0+ 0.1)];factor = afactor;}
uniform vec4 vfuniforms[144];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1 + 1.0)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 3.0)]);factor = afactor;}
uniform vec4 vfuniforms[144];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 2.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 6.0 + 1.0+ 0.1)];factor = afactor;}
uniform vec4 vfuniforms[144];attribute vec4 pos;attribute float vbatch;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 6.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 6.0 + 2.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(vbatch * 6.0 + 4.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 6.0 + 4.0+ 0.1 + 1.0)]);fucxadd = vfuniforms[int(vbatch * 6.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 6.0 + 1.0+ 0.1)];}
uniform vec4 vfuniforms[192];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc0;varying vec2 tc1;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 2.0+ 0.1 + 1.0)]);tc0.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 0.0)]);tc0.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 1.0)]);tc1.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 2.0)]);tc1.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 8.0 + 4.0+ 0.1 + 3.0)]);fucxadd = vfuniforms[int(afactor.b*255.01 * 8.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 8.0 + 1.0+ 0.1)];factor = afactor;}
uniform vec4 vfuniforms[48];attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);tc = atc;}
uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 2.0 + 0.0+ 0.1 + 1.0)]);color = acolor;factor = afactor;}
uniform vec4 vfuniforms[48];attribute vec4 acolor;attribute vec4 pos;attribute float vbatch;varying vec4 color;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);color = acolor;}
uniform vec4 vfuniforms[48];attribute vec4 pos;attribute float vbatch;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 2.0 + 0.0+ 0.1 + 1.0)]);}
uniform vec4 vfuniforms[96];attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec4 fucxadd;varying vec4 fucxmul;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);tc = atc;fucxadd = vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)];}
uniform vec4 vfuniforms[96];attribute vec4 acolor;attribute vec2 atc;attribute vec4 pos;attribute float vbatch;varying vec2 tc;varying vec4 vcolor;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);vcolor = acolor * vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)] + vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];tc = atc;}
uniform vec4 vfuniforms[96];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 1.0)]);color = acolor;tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);factor = afactor;}
uniform vec4 vfuniforms[96];attribute vec4 acolor;attribute vec4 afactor;attribute vec4 pos;varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);color = acolor;fucxadd = vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(afactor.b*255.01 * 4.0 + 1.0+ 0.1)];factor = afactor;}
uniform vec4 vfuniforms[96];attribute vec4 acolor;attribute vec4 pos;attribute float vbatch;varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);color = acolor;fucxadd = vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1)];fucxmul = vfuniforms[int(vbatch * 4.0 + 1.0+ 0.1)];}
uniform vec4 vfuniforms[96];attribute vec4 afactor;attribute vec4 pos;varying vec4 factor;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 0.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(afactor.b*255.01 * 4.0 + 2.0+ 0.1 + 1.0)]);factor = afactor;}
uniform vec4 vfuniforms[96];attribute vec4 pos;attribute float vbatch;varying vec2 tc;void main() {gl_Position = vec4(0.0,0,0.0,1);gl_Position.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1 + 0.0)]);gl_Position.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 0.0+ 0.1 + 1.0)]);tc.x = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 0.0)]);tc.y = dot(pos, vfuniforms[int(vbatch * 4.0 + 2.0+ 0.1 + 1.0)]);}
union
unknown
unknown POSIX class name
unknown compression method
unknown critical chunk
unknown encoding
unknown header flags set
unknown option bit(s) set
unknown property name after \P or \p
unknown_variant_type
unlink
unlink@@GLIBC_2.2.5
unload
unloadAndStop
unloadClip
unloadMovie
unlock
unmatched parentheses
unrecognized character after (? or (?-
unrecognized character after (?<
unrecognized character after (?P
unrecognized character follows \
unshift
unwatch
upState
updateAfterEvent
updateImageSubstitution
updateProperties
upload
uploadCompleteData
uploadUnencoded
upper
upsideDown
uri
uriDereferencer
us-ascii
useCache
useCodePage
useEchoSuppression
useHandCursor
useRichTextClipboard
useSystemTrustStore
user
userAgent
userIdle
userPresent
usingTLS
usleep
usleep@@GLIBC_2.2.5
usm
utf-16
utlbuffer.cpp
utlstring.cpp
uvOrigin.x = %f, uvOrigin.y = %f
v
v1.1.0
vQO+
validityStatus
valueOf
variable
variables
varying   vec2 tc%d;
varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 factor;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 factor;void main() {gl_FragColor = color;gl_FragColor.a *= factor.a;gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 factor;void main() {gl_FragColor = color;gl_FragColor.a *= factor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 factor;void main() {gl_FragColor = color;gl_FragColor.a *= factor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = (gl_FragColor * vec4(fucxmul.rgb,1.0)) * fucxmul.a;gl_FragColor += fucxadd * gl_FragColor.a;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
varying vec4 color;varying vec4 fucxadd;varying vec4 fucxmul;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor * fucxmul + fucxadd;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
varying vec4 color;void main() {gl_FragColor = color;gl_FragColor = gl_FragColor;}
varying vec4 color;void main() {gl_FragColor = color;gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;gl_FragColor = gl_FragColor;}
varying vec4 color;void main() {gl_FragColor = color;gl_FragColor.rgb = vec3(gl_FragColor.a, gl_FragColor.a, gl_FragColor.a);gl_FragColor = gl_FragColor;}
vbatch
vec4 base = texture2D(srctex, tc%d);
vector
vector2d
vector4d
verify
version
vertical
verticalAlign
verticalAutoSize
vfmuniforms
vfuniforms
video = %d
videoHeight
videoWidth
visibleRect
voiceTrack
void
void XML_GetParsingStatus(XML_Parser, XML_ParsingStatus*)
void main(void){  vec4 color = vec4(0);
volume
vorbis
vorbis_analysis_blockout
vorbis_analysis_buffer
vorbis_analysis_headerout
vorbis_analysis_init
vorbis_analysis_wrote
vorbis_bitrate_addblock
vorbis_bitrate_clear
vorbis_bitrate_flushpacket
vorbis_bitrate_init
vorbis_bitrate_managed
vorbis_block_clear
vorbis_block_init
vorbis_book_clear
vorbis_book_codelen
vorbis_book_codeword
vorbis_book_decode
vorbis_book_decodev_add
vorbis_book_decodev_set
vorbis_book_decodevs_add
vorbis_book_decodevv_add
vorbis_book_encode
vorbis_book_init_decode
vorbis_book_init_encode
vorbis_comment_add
vorbis_comment_add_tag
vorbis_comment_clear
vorbis_comment_init
vorbis_comment_query
vorbis_comment_query_count
vorbis_commentheader_out
vorbis_dsp_clear
vorbis_granule_time
vorbis_info_blocksize
vorbis_info_clear
vorbis_info_init
vorbis_lpc_from_data
vorbis_lpc_predict
vorbis_lpc_to_lsp
vorbis_lsp_to_curve
vorbis_packet_blocksize
vorbis_staticbook_destroy
vorbis_staticbook_pack
vorbis_staticbook_unpack
vorbis_synthesis
vorbis_synthesis_blockin
vorbis_synthesis_halfrate
vorbis_synthesis_halfrate_p
vorbis_synthesis_headerin
vorbis_synthesis_idheader
vorbis_synthesis_init
vorbis_synthesis_lapout
vorbis_synthesis_pcmout
vorbis_synthesis_read
vorbis_synthesis_restart
vorbis_synthesis_trackonly
vorbis_version_string
vorbis_window
vp8/decoder/decodframe.c
vp8/decoder/onyxd_if.c
vp8_bilinear_predict16x16_sse2
vp8_bilinear_predict16x16_ssse3
vp8_bilinear_predict4x4_mmx
vp8_bilinear_predict8x4_mmx
vp8_bilinear_predict8x8_mmx
vp8_bilinear_predict8x8_sse2
vp8_bilinear_predict8x8_ssse3
vp8_copy32xn_sse2
vp8_copy32xn_sse3
vp8_copy_mem16x16_mmx
vp8_copy_mem16x16_sse2
vp8_copy_mem8x4_mmx
vp8_copy_mem8x8_mmx
vp8_dc_only_idct_add_mmx
vp8_dequant_idct_add_mmx
vp8_dequantize_b_impl_mmx
vp8_fast_quantize_b_sse2
vp8_fast_quantize_b_ssse3
vp8_filter_block1d16_h6_only_sse2
vp8_filter_block1d16_h6_sse2
vp8_filter_block1d16_h6_ssse3
vp8_filter_block1d16_v6_sse2
vp8_filter_block1d16_v6_ssse3
vp8_filter_block1d4_h6_ssse3
vp8_filter_block1d4_v6_ssse3
vp8_filter_block1d8_h6_only_sse2
vp8_filter_block1d8_h6_sse2
vp8_filter_block1d8_h6_ssse3
vp8_filter_block1d8_v6_only_sse2
vp8_filter_block1d8_v6_sse2
vp8_filter_block1d8_v6_ssse3
vp8_filter_block1d_h6_mmx
vp8_filter_block1dc_v6_mmx
vp8_filter_block2d_bil4x4_var_mmx
vp8_filter_block2d_bil_var_mmx
vp8_filter_block2d_bil_var_sse2
vp8_filter_block2d_bil_var_ssse3
vp8_filter_by_weight16x16_sse2
vp8_filter_by_weight8x8_sse2
vp8_get16x16var_sse2
vp8_get4x4sse_cs_mmx
vp8_get4x4var_mmx
vp8_get8x8var_mmx
vp8_get8x8var_sse2
vp8_get_mb_ss_mmx
vp8_get_mb_ss_sse2
vp8_half_horiz_variance16x_h_sse2
vp8_half_horiz_variance8x_h_sse2
vp8_half_horiz_vert_variance16x_h_sse2
vp8_half_horiz_vert_variance8x_h_sse2
vp8_half_vert_variance16x_h_sse2
vp8_half_vert_variance8x_h_sse2
vp8_idct_dequant_0_2x_sse2
vp8_idct_dequant_dc_0_2x_sse2
vp8_idct_dequant_dc_full_2x_sse2
vp8_idct_dequant_full_2x_sse2
vp8_intra_pred_uv_dc128_mmx
vp8_intra_pred_uv_dc_mmx2
vp8_intra_pred_uv_dcleft_mmx2
vp8_intra_pred_uv_dctop_mmx2
vp8_intra_pred_uv_ho_mmx2
vp8_intra_pred_uv_ho_ssse3
vp8_intra_pred_uv_tm_sse2
vp8_intra_pred_uv_tm_ssse3
vp8_intra_pred_uv_ve_mmx
vp8_intra_pred_y_dc128_sse2
vp8_intra_pred_y_dc_sse2
vp8_intra_pred_y_dcleft_sse2
vp8_intra_pred_y_dctop_sse2
vp8_intra_pred_y_ho_sse2
vp8_intra_pred_y_tm_sse2
vp8_intra_pred_y_tm_ssse3
vp8_intra_pred_y_ve_sse2
vp8_loop_filter_bh_y_sse2
vp8_loop_filter_bv_y_sse2
vp8_loop_filter_horizontal_edge_mmx
vp8_loop_filter_horizontal_edge_uv_sse2
vp8_loop_filter_simple_horizontal_edge_mmx
vp8_loop_filter_simple_horizontal_edge_sse2
vp8_loop_filter_simple_vertical_edge_mmx
vp8_loop_filter_simple_vertical_edge_sse2
vp8_loop_filter_vertical_edge_mmx
vp8_loop_filter_vertical_edge_uv_sse2
vp8_mbloop_filter_horizontal_edge_mmx
vp8_mbloop_filter_horizontal_edge_sse2
vp8_mbloop_filter_horizontal_edge_uv_sse2
vp8_mbloop_filter_vertical_edge_mmx
vp8_mbloop_filter_vertical_edge_sse2
vp8_mbloop_filter_vertical_edge_uv_sse2
vp8_mbpost_proc_across_ip_xmm
vp8_mbpost_proc_down_xmm
vp8_plane_add_noise_wmt
vp8_post_proc_down_and_across_xmm
vp8_regular_quantize_b_sse2
vp8_regular_quantize_b_sse4
vp8_sad16x16_sse3
vp8_sad16x16_wmt
vp8_sad16x16x3_sse3
vp8_sad16x16x3_ssse3
vp8_sad16x16x4d_sse3
vp8_sad16x16x8_sse4
vp8_sad16x8_wmt
vp8_sad16x8x3_sse3
vp8_sad16x8x3_ssse3
vp8_sad16x8x4d_sse3
vp8_sad16x8x8_sse4
vp8_sad4x4_wmt
vp8_sad4x4x3_sse3
vp8_sad4x4x4d_sse3
vp8_sad4x4x8_sse4
vp8_sad8x16_wmt
vp8_sad8x16x3_sse3
vp8_sad8x16x4d_sse3
vp8_sad8x16x8_sse4
vp8_sad8x8_wmt
vp8_sad8x8x3_sse3
vp8_sad8x8x4d_sse3
vp8_sad8x8x8_sse4
vp8_short_idct4x4llm_mmx
vp8_short_inv_walsh4x4_sse2
vp8_unpack_block1d16_h6_sse2
vp8_variance_and_sad_16x16_sse2
vp8dx_receive_compressed_data
vpx_reset_mmx_state
vrgrp
vrnmd
vsnprintf@@GLIBC_2.2.5
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
w
w+b
w3(?
w=
wb
wcscasecmp
wcscasecmp@@GLIBC_2.2.5
wcschr
wcschr@@GLIBC_2.2.5
wcscmp
wcscmp@@GLIBC_2.2.5
wcscoll
wcscoll@@GLIBC_2.2.5
wcslen
wcslen@@GLIBC_2.2.5
wcsncmp
wcsncmp@@GLIBC_2.2.5
webm
will be generated from "
willTrigger
windowlessDisable
with %d x %d thumbnail image
word
wordWrap
wrap
write@@GLIBC_2.2.5
writeBoolean
writeByte
writeBytes
writeDouble
writeDynamicProperties
writeDynamicProperty
writeExternal
writeFloat
writeInt
writeMultiByte
writeObject
writeShort
writeUTF
writeUTFBytes
writeUnsignedInt
writeonly
wx=%d, wy=%d, rx=%d, ry=%d
x
x-unicode-2-0-utf-8
xMax
xMin
xP
xdigit
xmin = %g, ymin = %g, xmax = %g, ymax = %g
xml version="
xml=http://www.w3.org/XML/1998/namespace
xmlDecl
xmlns
xvalue
y
y9*O
y@
yMax
yMin
year
yes
yvalue
z
zDThe method instance::NetConnection::clientGet() is not implemented
zP
zero length keyword
zlib failed to initialize compressor
zlib failed to initialize compressor -- mem error
zlib failed to initialize compressor -- stream error
zlib failed to initialize compressor -- version error
zlib memory error
zlib stream error
zlib version error
zoom
{
{0:02}:{1:02}:{2:02}
{0:02}:{1:02}:{2:02} {3}{4:04}
{0:sep:,}
{0:sw:,:}{1}
{0}
{0} ({1}) from {2} ({3}): {4} times
{0} : {1}
{0} {1} {2:2} {3:02}:{4:02}:{5:02} GMT{6:+03}{7:02} {8}
{0} {1} {2}
{0}: {1} ms ({2} times)
{0}</MemItem>
{0}<MemItem Name="{1}" Value={2}>
{0}<MemItem Name="{1}">
{|}"
{}()':
|
| {0:4.4} {1:4.4} {2:4.4} || {3:4.4} {4:4.4} {5:4.4} |
|P
}
~

C
