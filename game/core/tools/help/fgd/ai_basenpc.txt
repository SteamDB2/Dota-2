<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CHelpData CHelpData_0
{
	CHelpEntry[] m_Entries = 
	[
		CHelpEntry
		{
			string m_Id = "Element.TalkNPC"
			string m_FriendlyName = "TalkNPC"
			string m_TooltipOverride = ""
			string m_HelpText = "TalkNPC"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.allowgenericnodes"
			string m_FriendlyName = "If a Hint Group is specified, whether to also allow the use of generic nodes."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.UseSentence"
			string m_FriendlyName = "Use Sentence"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.UnUseSentence"
			string m_FriendlyName = "Un-Use Sentence"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TalkNPC.DontUseSpeechSemaphore"
			string m_FriendlyName = "Don\'t Use Speech Semaphore"
			string m_TooltipOverride = ""
			string m_HelpText = "Friendly NPCs are not allowed to speak if another friendly NPC is speaking. In some cases we don\'t want speaking NPCs to prevent other NPCs from speaking (for instance, if there is a friendly NPC speaking for a long time on a monitor). To make this NPC not prevent other NPCs from talking, make it not grab the semaphore when it speaks."
		},
		CHelpEntry
		{
			string m_Id = "Element.PlayerCompanion"
			string m_FriendlyName = "PlayerCompanion"
			string m_TooltipOverride = ""
			string m_HelpText = "PlayerCompanion"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.allowgenericnodes"
			string m_FriendlyName = "If a Hint Group is specified, whether to also allow the use of generic nodes."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.AlwaysTransition"
			string m_FriendlyName = "Always transition"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, this NPC will always teleport to a Player Squad Transition Point if they\'re not within the trigger_transition volume."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.DontPickupWeapons"
			string m_FriendlyName = "Prevent picking up weapons\?"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, this NPC will NOT be allowed to pick up weapons they find on the ground."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlayerCompanion.GameEndAlly"
			string m_FriendlyName = "Is this a vital ally\?"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, this NPC will cause the game to end if killed."
		},
		CHelpEntry
		{
			string m_Id = "Element.RappelNPC"
			string m_FriendlyName = "RappelNPC"
			string m_TooltipOverride = ""
			string m_HelpText = "RappelNPC"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.allowgenericnodes"
			string m_FriendlyName = "If a Hint Group is specified, whether to also allow the use of generic nodes."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RappelNPC.waitingtorappel"
			string m_FriendlyName = "Waiting to Rappel\?"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, this NPC spawns suspended in air and awaits a BeginRappel input. It will then spawn a zipline and slide down. When it hits the ground, NPC will cut away the line and try to move forward a few feet to make room for the next NPC. The NPC will not attempt to clear its landing space if it cannot do so by taking a few steps forward"
		},
		CHelpEntry
		{
			string m_Id = "Element.VehicleDriverNPC"
			string m_FriendlyName = "VehicleDriverNPC"
			string m_TooltipOverride = ""
			string m_HelpText = "VehicleDriverNPC"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.allowgenericnodes"
			string m_FriendlyName = "If a Hint Group is specified, whether to also allow the use of generic nodes."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.VehicleDriverNPC.vehicle"
			string m_FriendlyName = "Vehicle to drive"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.npc_vehicledriver"
			string m_FriendlyName = "npc_vehicledriver"
			string m_TooltipOverride = ""
			string m_HelpText = "NPC used to drive a target vehicle."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.allowgenericnodes"
			string m_FriendlyName = "If a Hint Group is specified, whether to also allow the use of generic nodes."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.vehicle"
			string m_FriendlyName = "Vehicle to drive"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.drivermaxspeed"
			string m_FriendlyName = "Maxspeed (percentage of vehicle\'s maxspeed)."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_vehicledriver.driverminspeed"
			string m_FriendlyName = "MinSpeed (percentage of vehicle\'s maxspeed)."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.npc_bullseye"
			string m_FriendlyName = "npc_bullseye"
			string m_TooltipOverride = ""
			string m_HelpText = "Bullseye"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.allowgenericnodes"
			string m_FriendlyName = "If a Hint Group is specified, whether to also allow the use of generic nodes."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.health"
			string m_FriendlyName = "Health"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.minangle"
			string m_FriendlyName = "Minimum Angle"
			string m_TooltipOverride = ""
			string m_HelpText = "Angle from the bullseye required for bullseye to be a valid enemy"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.mindist"
			string m_FriendlyName = "Minimum Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance from the bullseye required for bullseye to be a valid enemy"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_bullseye.autoaimradius"
			string m_FriendlyName = "Autoaim Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius of autoaim influence. Use ent_autoaim <picker> to visualize."
		},
		CHelpEntry
		{
			string m_Id = "Element.npc_enemyfinder"
			string m_FriendlyName = "npc_enemyfinder"
			string m_TooltipOverride = ""
			string m_HelpText = "EnemyFinder"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.allowgenericnodes"
			string m_FriendlyName = "If a Hint Group is specified, whether to also allow the use of generic nodes."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.FieldOfView"
			string m_FriendlyName = "FieldOfView"
			string m_TooltipOverride = ""
			string m_HelpText = "How far to look (1.0 = straight ahead, 0.0 = +/- 90 degrees, -1.0 = all directions)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.MinSearchDist"
			string m_FriendlyName = "Min Search Dist"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.MaxSearchDist"
			string m_FriendlyName = "Max Search Dist"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.freepass_timetotrigger"
			string m_FriendlyName = "Player pass issue time"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time an enemy is hidden after which a \'free pass\' on reaquire is granted"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.freepass_duration"
			string m_FriendlyName = "Player pass duration"
			string m_TooltipOverride = ""
			string m_HelpText = "After granted \'free pass\', the amount of time a target is allowed before reaquire"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.freepass_movetolerance"
			string m_FriendlyName = "Player pass move tolerance"
			string m_TooltipOverride = ""
			string m_HelpText = "After granted \'free pass\', the distance the target is allowed to move before reaquire"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.freepass_refillrate"
			string m_FriendlyName = "Player pass refill rate"
			string m_TooltipOverride = ""
			string m_HelpText = "After free pass begins expiring, how much the time the target gets back for every second they hide again"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.freepass_peektime"
			string m_FriendlyName = "Player pass peek time"
			string m_TooltipOverride = ""
			string m_HelpText = "How long targets in cover are allowed to peek without penalty"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_enemyfinder.StartOn"
			string m_FriendlyName = "Start On"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_goal_operator"
			string m_FriendlyName = "ai_goal_operator"
			string m_TooltipOverride = ""
			string m_HelpText = "Indicates items in the world that some NPCs may operate upon"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_operator.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_operator.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_operator.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_operator.actor"
			string m_FriendlyName = "Actor to affect"
			string m_TooltipOverride = ""
			string m_HelpText = "NPC that should perform this operation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_operator.target"
			string m_FriendlyName = "Position entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity that the NPC should move to in order to perform the operation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_operator.contexttarget"
			string m_FriendlyName = "Context target"
			string m_TooltipOverride = ""
			string m_HelpText = "(Optional) Name of an entity that the operator will use within context."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_operator.state"
			string m_FriendlyName = "Initial State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_operator.moveto"
			string m_FriendlyName = "How should NPC approach\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.monster_generic"
			string m_FriendlyName = "monster_generic"
			string m_TooltipOverride = ""
			string m_HelpText = "Generic Script NPC"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.allowgenericnodes"
			string m_FriendlyName = "If a Hint Group is specified, whether to also allow the use of generic nodes."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.model"
			string m_FriendlyName = "Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.monster_generic.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.generic_actor"
			string m_FriendlyName = "generic_actor"
			string m_TooltipOverride = ""
			string m_HelpText = "Generic Actor NPC"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.allowgenericnodes"
			string m_FriendlyName = "If a Hint Group is specified, whether to also allow the use of generic nodes."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.model"
			string m_FriendlyName = "Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.generic_actor.hull_name"
			string m_FriendlyName = "Hull type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.cycler_actor"
			string m_FriendlyName = "cycler_actor"
			string m_TooltipOverride = ""
			string m_HelpText = "Actor Cycler"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.allowgenericnodes"
			string m_FriendlyName = "If a Hint Group is specified, whether to also allow the use of generic nodes."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.model"
			string m_FriendlyName = "Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler_actor.Sentence"
			string m_FriendlyName = "Sentence Group"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.npc_maker"
			string m_FriendlyName = "npc_maker"
			string m_TooltipOverride = ""
			string m_HelpText = "NPC Maker"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.Radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius around this maker within which NPCs are to be placed. Spawned NPCs will try and find empty space within this radius to spawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.DestinationGroup"
			string m_FriendlyName = "Name of Destination Group"
			string m_TooltipOverride = ""
			string m_HelpText = "If you\'d like spawned NPCs to be created at an info_npc_spawn_destination entity, enter the name of that entity here. If you have more than one destination entity by that name, the Destination Criteria will be used to select one from the group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.CriterionVisibility"
			string m_FriendlyName = "Dest. Criterion: Visible to player\?"
			string m_TooltipOverride = ""
			string m_HelpText = "Should the NPC try to spawn at a destination that the player can see\? Only applicable if a Destination Group is being used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.CriterionDistance"
			string m_FriendlyName = "Dest. Criterion: Distance to player\?"
			string m_TooltipOverride = ""
			string m_HelpText = "Should the NPC try to spawn nearest to or farthest from the player\'s current location\? Only applicable if a Destination Group is being used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.MinSpawnDistance"
			string m_FriendlyName = "Minimum spawn distance from player"
			string m_TooltipOverride = ""
			string m_HelpText = "The spawn destination node distance to the player will have to be further or equal than this value."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.MaxNPCCount"
			string m_FriendlyName = "Num. of NPCs"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of NPCs that will spawn before this spawner is exhausted."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.SpawnFrequency"
			string m_FriendlyName = "Frequency"
			string m_TooltipOverride = ""
			string m_HelpText = "How often (in seconds) a new NPC will be spawned. If set to -1, a new NPC will be made when the last NPC dies."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.MaxLiveChildren"
			string m_FriendlyName = "Max Live NPCs"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum number of live children allowed at any one time (new ones will not be made until one dies). If set to -1, no limit is applied."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.HullCheckMode"
			string m_FriendlyName = "Hull Check Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "How NPC\'s hull should be checked at spawn destination\?"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.NPCType"
			string m_FriendlyName = "Class name of spawned NPC"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.NPCTargetname"
			string m_FriendlyName = "Childrens\' Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.NPCSquadname"
			string m_FriendlyName = "Childrens\' Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.NPCHintGroup"
			string m_FriendlyName = "Childrens\' Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_maker.additionalequipment"
			string m_FriendlyName = "Weapons"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.BaseScripted"
			string m_FriendlyName = "BaseScripted"
			string m_TooltipOverride = ""
			string m_HelpText = "BaseScripted"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_iszEntity"
			string m_FriendlyName = "Target NPC"
			string m_TooltipOverride = ""
			string m_HelpText = "The name or class name (such as \'npc_zombie\') of an NPC to use for this script."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_iszIdle"
			string m_FriendlyName = "Pre Action Idle Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the sequence (such as \'idle01\') or activity (such as \'ACT_IDLE\') to play before the action animation if the NPC must wait for the script to be triggered. Use \'Start on Spawn\' flag or MoveToPosition input to play this idle animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_iszEntry"
			string m_FriendlyName = "Entry Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the sequence (such as \'reload02\') or activity (such as \'ACT_RELOAD\') to play when the sequence starts, before transitioning to play the main action sequence."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_iszPlay"
			string m_FriendlyName = "Action Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the main sequence (such as \'reload02\') or activity (such as \'ACT_RELOAD\') to play."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_iszPostIdle"
			string m_FriendlyName = "Post Action Idle Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the sequence (such as \'idle01\') or activity (such as \'ACT_IDLE\') to play after the action animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_iszCustomMove"
			string m_FriendlyName = "Custom Move Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "Used in conjunction with the \'Custom movement\' setting for the \'Move to Position\' property, specifies the sequence (such as \'crouch_run01\') or activity (such as \'ACT_RUN\') to use while moving to the scripted position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_bLoopActionSequence"
			string m_FriendlyName = "Loop Action Animation\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_bSynchPostIdles"
			string m_FriendlyName = "Synch Post Idles\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_flRadius"
			string m_FriendlyName = "Search Radius (0=everywhere)"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius to search within for an NPC to use. 0 searches everywhere."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_flRepeat"
			string m_FriendlyName = "Repeat Rate ms"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_fMoveTo"
			string m_FriendlyName = "Move to Position"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_iszNextScript"
			string m_FriendlyName = "Next Script"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the script to run immediately after this script completes. The NPC will not return to AI between the two scripts."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_bIgnoreGravity"
			string m_FriendlyName = "Ignore Gravity on NPC during script"
			string m_TooltipOverride = ""
			string m_HelpText = "If this is set to \'Yes\', the NPC will not be subject to gravity while playing this script."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseScripted.m_bDisableNPCCollisions"
			string m_FriendlyName = "Disable NPC collisions during script"
			string m_TooltipOverride = ""
			string m_HelpText = "Useful for when NPCs playing scripts must interpenetrate while riding on trains, elevators, etc. This only disables collisions between the NPCs in the script and must be enabled on BOTH scripted_sequences."
		},
		CHelpEntry
		{
			string m_Id = "Element.scripted_sentence"
			string m_FriendlyName = "scripted_sentence"
			string m_TooltipOverride = ""
			string m_HelpText = "Scripted Sentence"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.sentence"
			string m_FriendlyName = "Sentence Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.entity"
			string m_FriendlyName = "Speaker Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.delay"
			string m_FriendlyName = "Additional Sentence Time"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.radius"
			string m_FriendlyName = "Search Radius"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.refire"
			string m_FriendlyName = "Delay Before Refire"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.listener"
			string m_FriendlyName = "Listener Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.volume"
			string m_FriendlyName = "Volume 0-10"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sentence.attenuation"
			string m_FriendlyName = "Sound Radius"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.scripted_target"
			string m_FriendlyName = "scripted_target"
			string m_TooltipOverride = ""
			string m_HelpText = "Scripted Target"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.m_iszEntity"
			string m_FriendlyName = "Target NPC"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.m_flRadius"
			string m_FriendlyName = "Search Radius (0=everywhere)"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius to search within for an NPC to use. 0 searches everywhere."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.MoveSpeed"
			string m_FriendlyName = "Move Speed"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.PauseDuration"
			string m_FriendlyName = "Pause Duration"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.EffectDuration"
			string m_FriendlyName = "Effect Duration"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_target.target"
			string m_FriendlyName = "Next Target"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_relationship"
			string m_FriendlyName = "ai_relationship"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Relationship - Sets relationships between groups of NPCs in the AI."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_relationship.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_relationship.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_relationship.subject"
			string m_FriendlyName = "Subject(s)"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the NPC(s) whose disposition will change. May be a targetname or a classname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_relationship.target"
			string m_FriendlyName = "Target(s)"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the NPC(s) about whom the Subject(s) will change their disposition. May be a tarGetname or a classname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_relationship.disposition"
			string m_FriendlyName = "Disposition"
			string m_TooltipOverride = ""
			string m_HelpText = "Choose the way the Subject(s) should feel about the Target(s)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_relationship.radius"
			string m_FriendlyName = "Radius for subject"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_relationship.rank"
			string m_FriendlyName = "Disposition Priority"
			string m_TooltipOverride = ""
			string m_HelpText = "How much the Subject(s) should Like/Hate/Fear the Target(s). Higher priority = stronger feeling."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_relationship.StartActive"
			string m_FriendlyName = "Start Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_relationship.Reciprocal"
			string m_FriendlyName = "Reciprocal"
			string m_TooltipOverride = ""
			string m_HelpText = "Set this to YES to have the new relationship mirrored by Target"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_relationship.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.LeadGoalBase"
			string m_FriendlyName = "LeadGoalBase"
			string m_TooltipOverride = ""
			string m_HelpText = "LeadGoalBase"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.goal"
			string m_FriendlyName = "Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.WaitPointName"
			string m_FriendlyName = "Point to wait at if the target\'s not visible"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.WaitDistance"
			string m_FriendlyName = "Wait until player gets this close"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.LeadDistance"
			string m_FriendlyName = "Lead Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The player is considered to be lagging if he\'s beyond this distance.  The Actor will consider retrieving when the player is 4x \'Lead Distance\' away."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.RetrieveDistance"
			string m_FriendlyName = "Retrieve Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance from the player that the NPC should return to when retrieving a lagging player. Must be between (\'Lead Distance\' + 24) and (\'Lead Distance\' * 4) to avoid the leader ping-ponging."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.SuccessDistance"
			string m_FriendlyName = "Success Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance from the player (to the NPC) that the player must be within for the Lead to succeed, once the NPC has reached the goal. If set to 0, it\'ll use the lead distance instead (for legacy support)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.Run"
			string m_FriendlyName = "Run instead of Walk"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.Retrieve"
			string m_FriendlyName = "Retrieve player\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.ComingBackWaitForSpeak"
			string m_FriendlyName = "Before Coming Back, Wait for speech\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.RetrieveWaitForSpeak"
			string m_FriendlyName = "On Retrieve, Wait for speech\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.DontSpeakStart"
			string m_FriendlyName = "Speak start greeting\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.LeadDuringCombat"
			string m_FriendlyName = "Lead during combat\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.GagLeader"
			string m_FriendlyName = "Gag Leader\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.AttractPlayerConceptModifier"
			string m_FriendlyName = "Attract player concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_ATTRACTPLAYER\' concept is spoken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.WaitOverConceptModifier"
			string m_FriendlyName = "Player wait over concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_WAITOVER\' concept is spoken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.ArrivalConceptModifier"
			string m_FriendlyName = "Arrival concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_ARRIVAL\' concept is spoken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.PostArrivalConceptModifier"
			string m_FriendlyName = "Post-arrival concepts modifier"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.SuccessConceptModifier"
			string m_FriendlyName = "Success concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_SUCCESS\' concept is spoken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.FailureConceptModifier"
			string m_FriendlyName = "Failure concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'lead_fail\' concept is spoken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.ComingBackConceptModifier"
			string m_FriendlyName = "Coming Back concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_RETRIEVE\' concept is spoken. Spoken as the NPC starts returning to the player to retrieve him."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.RetrieveConceptModifier"
			string m_FriendlyName = "Retrieve concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_COMINGBACK\' concept is spoken. Spoken when NPC has finally reached the player to retrieve him."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.LeadGoalBase.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_goal_lead"
			string m_FriendlyName = "ai_goal_lead"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Goal Lead"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.goal"
			string m_FriendlyName = "Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.WaitPointName"
			string m_FriendlyName = "Point to wait at if the target\'s not visible"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.WaitDistance"
			string m_FriendlyName = "Wait until player gets this close"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.LeadDistance"
			string m_FriendlyName = "Lead Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The player is considered to be lagging if he\'s beyond this distance.  The Actor will consider retrieving when the player is 4x \'Lead Distance\' away."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.RetrieveDistance"
			string m_FriendlyName = "Retrieve Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance from the player that the NPC should return to when retrieving a lagging player. Must be between (\'Lead Distance\' + 24) and (\'Lead Distance\' * 4) to avoid the leader ping-ponging."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.SuccessDistance"
			string m_FriendlyName = "Success Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance from the player (to the NPC) that the player must be within for the Lead to succeed, once the NPC has reached the goal. If set to 0, it\'ll use the lead distance instead (for legacy support)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.Run"
			string m_FriendlyName = "Run instead of Walk"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.Retrieve"
			string m_FriendlyName = "Retrieve player\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.ComingBackWaitForSpeak"
			string m_FriendlyName = "Before Coming Back, Wait for speech\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.RetrieveWaitForSpeak"
			string m_FriendlyName = "On Retrieve, Wait for speech\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.DontSpeakStart"
			string m_FriendlyName = "Speak start greeting\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.LeadDuringCombat"
			string m_FriendlyName = "Lead during combat\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.GagLeader"
			string m_FriendlyName = "Gag Leader\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.AttractPlayerConceptModifier"
			string m_FriendlyName = "Attract player concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_ATTRACTPLAYER\' concept is spoken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.WaitOverConceptModifier"
			string m_FriendlyName = "Player wait over concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_WAITOVER\' concept is spoken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.ArrivalConceptModifier"
			string m_FriendlyName = "Arrival concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_ARRIVAL\' concept is spoken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.PostArrivalConceptModifier"
			string m_FriendlyName = "Post-arrival concepts modifier"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.SuccessConceptModifier"
			string m_FriendlyName = "Success concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_SUCCESS\' concept is spoken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.FailureConceptModifier"
			string m_FriendlyName = "Failure concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'lead_fail\' concept is spoken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.ComingBackConceptModifier"
			string m_FriendlyName = "Coming Back concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_RETRIEVE\' concept is spoken. Spoken as the NPC starts returning to the player to retrieve him."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.RetrieveConceptModifier"
			string m_FriendlyName = "Retrieve concept modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Appended to the keyvalues passed into the response rules when the \'TLK_LEAD_COMINGBACK\' concept is spoken. Spoken when NPC has finally reached the player to retrieve him."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_lead.SearchType"
			string m_FriendlyName = "Search Type"
			string m_TooltipOverride = ""
			string m_HelpText = "How to search for the entities using the targetname."
		},
		CHelpEntry
		{
			string m_Id = "Element.FollowGoal"
			string m_FriendlyName = "FollowGoal"
			string m_TooltipOverride = ""
			string m_HelpText = "FollowGoal"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.FollowGoal.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.FollowGoal.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.FollowGoal.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.FollowGoal.goal"
			string m_FriendlyName = "Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the entity to follow. If blank, and the actor likes the player, then defaults to player"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.FollowGoal.SearchType"
			string m_FriendlyName = "Search Type"
			string m_TooltipOverride = ""
			string m_HelpText = "How to search for the entities using the targetname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.FollowGoal.StartActive"
			string m_FriendlyName = "Start Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.FollowGoal.MaximumState"
			string m_FriendlyName = "Maximum state"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.FollowGoal.Formation"
			string m_FriendlyName = "Formation"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_goal_follow"
			string m_FriendlyName = "ai_goal_follow"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Goal Follow"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_follow.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_follow.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_follow.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_follow.goal"
			string m_FriendlyName = "Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the entity to follow. If blank, and the actor likes the player, then defaults to player"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_follow.SearchType"
			string m_FriendlyName = "Search Type"
			string m_TooltipOverride = ""
			string m_HelpText = "How to search for the entities using the targetname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_follow.StartActive"
			string m_FriendlyName = "Start Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_follow.MaximumState"
			string m_FriendlyName = "Maximum state"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_follow.Formation"
			string m_FriendlyName = "Formation"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_goal_injured_follow"
			string m_FriendlyName = "ai_goal_injured_follow"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Goal Injured Follow"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_injured_follow.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_injured_follow.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_injured_follow.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_injured_follow.goal"
			string m_FriendlyName = "Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the entity to follow. If blank, and the actor likes the player, then defaults to player"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_injured_follow.SearchType"
			string m_FriendlyName = "Search Type"
			string m_TooltipOverride = ""
			string m_HelpText = "How to search for the entities using the targetname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_injured_follow.StartActive"
			string m_FriendlyName = "Start Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_injured_follow.MaximumState"
			string m_FriendlyName = "Maximum state"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_injured_follow.Formation"
			string m_FriendlyName = "Formation"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_battle_line"
			string m_FriendlyName = "ai_battle_line"
			string m_TooltipOverride = ""
			string m_HelpText = "Battle line"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.actor"
			string m_FriendlyName = "Actor(s) or squad to affect"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.MatchByNameOnly"
			string m_FriendlyName = "Match by actor name only"
			string m_TooltipOverride = ""
			string m_HelpText = "If false, match by squad name as well as actor name."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.Active"
			string m_FriendlyName = "Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_battle_line.Strict"
			string m_FriendlyName = "Strict"
			string m_TooltipOverride = ""
			string m_HelpText = "Player orders can override, applies to allies only"
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_goal_fightfromcover"
			string m_FriendlyName = "ai_goal_fightfromcover"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Fight from Cover"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.goal"
			string m_FriendlyName = "Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the entity to follow. If blank, and the actor likes the player, then defaults to player"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.DirectionalMarker"
			string m_FriendlyName = "Directional Marker"
			string m_TooltipOverride = ""
			string m_HelpText = "Specify the entity that indicates the direction of battle"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.GenericHintType"
			string m_FriendlyName = "Generic Hint Type"
			string m_TooltipOverride = ""
			string m_HelpText = "Behavior looks for \'generic\' hints, and requires a text tag to search for"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.width"
			string m_FriendlyName = "Zone Width"
			string m_TooltipOverride = ""
			string m_HelpText = "Width of the hint search area"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.length"
			string m_FriendlyName = "Zone Length"
			string m_TooltipOverride = ""
			string m_HelpText = "Length of the hint search area"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.height"
			string m_FriendlyName = "Zone Height"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the direction of the hint search area"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.bias"
			string m_FriendlyName = "Zone Bias"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the direction of the hint search area"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_fightfromcover.StartActive"
			string m_FriendlyName = "Start Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_goal_standoff"
			string m_FriendlyName = "ai_goal_standoff"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Goal Standoff"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_standoff.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_standoff.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_standoff.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_standoff.SearchType"
			string m_FriendlyName = "Search Type"
			string m_TooltipOverride = ""
			string m_HelpText = "How to search for the entities using the targetname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_standoff.StartActive"
			string m_FriendlyName = "Start Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_standoff.HintGroupChangeReaction"
			string m_FriendlyName = "Reaction to tactical change"
			string m_TooltipOverride = ""
			string m_HelpText = "What to do if leader moves, threat is neutralized, hint group changes, etc"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_standoff.Aggressiveness"
			string m_FriendlyName = "Aggressiveness"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_standoff.PlayerBattleline"
			string m_FriendlyName = "Player battleline"
			string m_TooltipOverride = ""
			string m_HelpText = "Player defines a battle line, applies to allies only"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_standoff.StayAtCover"
			string m_FriendlyName = "Stay at cover location"
			string m_TooltipOverride = ""
			string m_HelpText = "When have suitable cover, don\'t change it (disables advancing to battle line)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_standoff.AbandonIfEnemyHides"
			string m_FriendlyName = "Abandon if enemies hide"
			string m_TooltipOverride = ""
			string m_HelpText = "If no enemy detected recently, stop the standoff"
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_goal_police"
			string m_FriendlyName = "ai_goal_police"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Goal Police"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_police.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_police.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_police.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_police.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_police.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_police.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_police.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_police.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_police.policeradius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius to police"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_police.policetarget"
			string m_FriendlyName = "Target"
			string m_TooltipOverride = ""
			string m_HelpText = "Target to police"
		},
		CHelpEntry
		{
			string m_Id = "Element.assault_rallypoint"
			string m_FriendlyName = "assault_rallypoint"
			string m_TooltipOverride = ""
			string m_HelpText = "(Assault) rally point"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.assaultpoint"
			string m_FriendlyName = "Assault Point"
			string m_TooltipOverride = ""
			string m_HelpText = "Location to move to as assault begins"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.assaultdelay"
			string m_FriendlyName = "Assault Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "How long to wait after cue is given before assault begins."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.rallysequence"
			string m_FriendlyName = "Rally Sequence"
			string m_TooltipOverride = ""
			string m_HelpText = "Override the NPC\'s wait activity by entering a sequence name."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.priority"
			string m_FriendlyName = "Priority"
			string m_TooltipOverride = ""
			string m_HelpText = "Higher priority rally points get selected first."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.forcecrouch"
			string m_FriendlyName = "Force Crouch"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs using this assault point are forced into crouching while holding it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.urgent"
			string m_FriendlyName = "Urgent"
			string m_TooltipOverride = ""
			string m_HelpText = "If true, NPCs will consider movement to this rally point as Urgent Navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_rallypoint.lockpoint"
			string m_FriendlyName = "Lock Point"
			string m_TooltipOverride = ""
			string m_HelpText = "Should this point be locked by a character using it."
		},
		CHelpEntry
		{
			string m_Id = "Element.assault_assaultpoint"
			string m_FriendlyName = "assault_assaultpoint"
			string m_TooltipOverride = ""
			string m_HelpText = "(Assault) assault point"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.assaultgroup"
			string m_FriendlyName = "Assault Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "NPC\'s movements are constrained to this hint group once assault has begun"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.nextassaultpoint"
			string m_FriendlyName = "Next assault point (optional)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.assaulttimeout"
			string m_FriendlyName = "Assault time out"
			string m_TooltipOverride = ""
			string m_HelpText = "This point is cleared when no enemies are seen for this long (seconds)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.clearoncontact"
			string m_FriendlyName = "Clear on contact with enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "If you come in contact with enemies while approaching the assault point, clear our assault point"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.allowdiversion"
			string m_FriendlyName = "Allow diversion"
			string m_TooltipOverride = ""
			string m_HelpText = "If you come in contact with enemies while approaching the assault point, divert to kill them. Resume the assault once contact is lost."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.allowdiversionradius"
			string m_FriendlyName = "Diversion Proximity"
			string m_TooltipOverride = ""
			string m_HelpText = "If Allow Diversion is set, NPC will only divert from assault to attack an enemy that is within this distance of the assault point. 0 = No limit."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.nevertimeout"
			string m_FriendlyName = "Never Timeout"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the assault never ends for NPCs assaulting this point. Useful for forcing NPCs back to a point."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.strict"
			string m_FriendlyName = "Strict\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.forcecrouch"
			string m_FriendlyName = "Force Crouch"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs using this assault point are forced into crouching while holding it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.urgent"
			string m_FriendlyName = "Urgent"
			string m_TooltipOverride = ""
			string m_HelpText = "If true, NPCs will consider movement to this assault point as Urgent Navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.assault_assaultpoint.assaulttolerance"
			string m_FriendlyName = "Attack Tolerance"
			string m_TooltipOverride = ""
			string m_HelpText = "How far this NPC may move from the assault point to try to attack an enemy."
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_goal_assault"
			string m_FriendlyName = "ai_goal_assault"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Goal Assault"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_assault.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_assault.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_assault.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = "NPC\'s that should perform this assault"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_assault.rallypoint"
			string m_FriendlyName = "Rally Point Set"
			string m_TooltipOverride = ""
			string m_HelpText = "Root name of rally points for this assault. Use an asterisk \'*\' after the root name to match all with the same root."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_assault.SearchType"
			string m_FriendlyName = "Search Type"
			string m_TooltipOverride = ""
			string m_HelpText = "How to search for the entities using the targetname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_assault.StartActive"
			string m_FriendlyName = "Start Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_assault.AssaultCue"
			string m_FriendlyName = "Assault Cue"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_assault.RallySelectMethod"
			string m_FriendlyName = "Rally Point Selection Method"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_assault.BranchingMethod"
			string m_FriendlyName = "Branching Assault Selection Method"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.BaseActBusy"
			string m_FriendlyName = "BaseActBusy"
			string m_TooltipOverride = ""
			string m_HelpText = "BaseActBusy"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseActBusy.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseActBusy.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseActBusy.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = "NPC\'s that should act busy"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseActBusy.StartActive"
			string m_FriendlyName = "Start Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseActBusy.SearchType"
			string m_FriendlyName = "Search Type"
			string m_TooltipOverride = ""
			string m_HelpText = "How to search for the entities using the targetname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseActBusy.busysearchrange"
			string m_FriendlyName = "Search Range for Busy Hints"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseActBusy.visibleonly"
			string m_FriendlyName = "Visible Busy Hints Only"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_goal_actbusy"
			string m_FriendlyName = "ai_goal_actbusy"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Goal Act Busy"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = "NPC\'s that should act busy"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.StartActive"
			string m_FriendlyName = "Start Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.SearchType"
			string m_FriendlyName = "Search Type"
			string m_TooltipOverride = ""
			string m_HelpText = "How to search for the entities using the targetname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.busysearchrange"
			string m_FriendlyName = "Search Range for Busy Hints"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.visibleonly"
			string m_FriendlyName = "Visible Busy Hints Only"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.seeentity"
			string m_FriendlyName = "Sight Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The Sight Entity (if you provide one) is an entity that will leave the current ActBusy if the Actor playing the ActBusy loses sight of it for the amount of time specified in \'Sight Entity Timeout\'. THIS MAY ONLY BE A TARGET NAME. NO CLASSNAMES."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.seeentitytimeout"
			string m_FriendlyName = "Sight Entity Timeout"
			string m_TooltipOverride = ""
			string m_HelpText = "If you provide a Sight Entity, the Actor will leave the current ActBusy if the Actor has lost sight of Sight Entity for this many seconds."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.sightmethod"
			string m_FriendlyName = "Sight Enemy Method"
			string m_TooltipOverride = ""
			string m_HelpText = "The method to use to determine whether the Sight enemy is visible."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.forcetype"
			string m_FriendlyName = "Forced"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.type"
			string m_FriendlyName = "Actbusy Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.safezone"
			string m_FriendlyName = "Combat Safe Zone"
			string m_TooltipOverride = ""
			string m_HelpText = "Only for combat actbusy. Lets you specify a volume which is the \'safe zone\'. The Combat ActBusy will cancel if any enemies are seen in the safe zone."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy.allowteleport"
			string m_FriendlyName = "Allow actor to teleport\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_goal_actbusy_queue"
			string m_FriendlyName = "ai_goal_actbusy_queue"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Goal Act Busy Queue"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.actor"
			string m_FriendlyName = "Actor(s) to affect"
			string m_TooltipOverride = ""
			string m_HelpText = "NPC\'s that should act busy"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.StartActive"
			string m_FriendlyName = "Start Active"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.SearchType"
			string m_FriendlyName = "Search Type"
			string m_TooltipOverride = ""
			string m_HelpText = "How to search for the entities using the targetname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.busysearchrange"
			string m_FriendlyName = "Search Range for Busy Hints"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.visibleonly"
			string m_FriendlyName = "Visible Busy Hints Only"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node_exit"
			string m_FriendlyName = "Exit Node"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the node the first NPC in the queue should move to when he leaves the head of the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node01"
			string m_FriendlyName = "Node 1"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the first actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node02"
			string m_FriendlyName = "Node 2"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the second actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node03"
			string m_FriendlyName = "Node 3"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the third actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node04"
			string m_FriendlyName = "Node 4"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the fourth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node05"
			string m_FriendlyName = "Node 5"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the fifth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node06"
			string m_FriendlyName = "Node 6"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the sixth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node07"
			string m_FriendlyName = "Node 7"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the seventh actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node08"
			string m_FriendlyName = "Node 8"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the eighth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node09"
			string m_FriendlyName = "Node 9"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the ninth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node10"
			string m_FriendlyName = "Node 10"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the tenth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node11"
			string m_FriendlyName = "Node 11"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the eleventh actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node12"
			string m_FriendlyName = "Node 12"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the twelfth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node13"
			string m_FriendlyName = "Node 13"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the thirteenth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node14"
			string m_FriendlyName = "Node 14"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the fourteenth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node15"
			string m_FriendlyName = "Node 15"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the fifteenth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node16"
			string m_FriendlyName = "Node 16"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the sixteenth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node17"
			string m_FriendlyName = "Node 17"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the seventeenth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node18"
			string m_FriendlyName = "Node 18"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the eighteenth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node19"
			string m_FriendlyName = "Node 19"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the nineteenth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.node20"
			string m_FriendlyName = "Node 20"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the twentieth actbusy hint node in the queue."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_goal_actbusy_queue.mustreachfront"
			string m_FriendlyName = "Must Reach Front"
			string m_TooltipOverride = ""
			string m_HelpText = "If true, NPCs much reach the front node in the queue before they\'re allowed to leave the queue."
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_changetarget"
			string m_FriendlyName = "ai_changetarget"
			string m_TooltipOverride = ""
			string m_HelpText = "Change Target"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changetarget.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changetarget.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changetarget.target"
			string m_FriendlyName = "Target entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of entity whose target will be changed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changetarget.m_iszNewTarget"
			string m_FriendlyName = "New Target"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_npc_eventresponsesystem"
			string m_FriendlyName = "ai_npc_eventresponsesystem"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that allows you to generate events for nearby friendly NPCs to respond to."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_npc_eventresponsesystem.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_npc_eventresponsesystem.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_changehintgroup"
			string m_FriendlyName = "ai_changehintgroup"
			string m_TooltipOverride = ""
			string m_HelpText = "Change Hint Group"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changehintgroup.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changehintgroup.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changehintgroup.SearchType"
			string m_FriendlyName = "Search Type"
			string m_TooltipOverride = ""
			string m_HelpText = "How to search for the entities to change."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changehintgroup.SearchName"
			string m_FriendlyName = "Name to search for"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changehintgroup.NewHintGroup"
			string m_FriendlyName = "New Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changehintgroup.Radius"
			string m_FriendlyName = "Search Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius to search (0 for all of map)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_changehintgroup.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_script_conditions"
			string m_FriendlyName = "ai_script_conditions"
			string m_TooltipOverride = ""
			string m_HelpText = "AI Script Conditions"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.Actor"
			string m_FriendlyName = "Actor"
			string m_TooltipOverride = ""
			string m_HelpText = "NPC Target"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.MinimumState"
			string m_FriendlyName = "Minimum state"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.MaximumState"
			string m_FriendlyName = "Maximum state"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.ScriptStatus"
			string m_FriendlyName = "Actor is running a script\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.RequiredTime"
			string m_FriendlyName = "Required Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Duration of time that all the conditions must be true"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.MinTimeout"
			string m_FriendlyName = "Minimum time out"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum time before OnConditionsTimeout is fired. 0 = never expire."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.MaxTimeout"
			string m_FriendlyName = "Maximum time out"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum time before OnConditionsTimeout is fired. 0 = ignore (If you don\'t specify a Maximum timeout, conditions will time out at exactly Minimum Time Out. If you DO specify a Maximum time out, timeout will occur randomly between Minimum and Maximum time out values.)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.ActorSeePlayer"
			string m_FriendlyName = "Actor Sees Player"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.PlayerActorProximity"
			string m_FriendlyName = "Player distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance the player must/must not be to the actor. Negative values for NOT, 0 for ignore."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.PlayerActorFOV"
			string m_FriendlyName = "Player FOV for Actor "
			string m_TooltipOverride = ""
			string m_HelpText = "Specify angle of view cone in degrees. Negative value = NOT"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.PlayerActorFOVTrueCone"
			string m_FriendlyName = "Play FOV to Actor is a true view cone"
			string m_TooltipOverride = ""
			string m_HelpText = "Player\'s view cone is evaluated as a true cone, not pie slice "
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.PlayerActorLOS"
			string m_FriendlyName = "Player has LOS to Actor"
			string m_TooltipOverride = ""
			string m_HelpText = "Checks that the player has clear Line of Sight to the Actor"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.target"
			string m_FriendlyName = "Target (Optional)"
			string m_TooltipOverride = ""
			string m_HelpText = "Optional entity to include in conditions"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.ActorSeeTarget"
			string m_FriendlyName = "Actor Sees Target"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.ActorTargetProximity"
			string m_FriendlyName = "Target distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance the actor must/must not be to the Target. Negative values for NOT, 0 for ignore."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.PlayerTargetProximity"
			string m_FriendlyName = "Player distance from Target"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance the player must/must not be to the Target. Negative values for NOT, 0 for ignore."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.PlayerTargetFOV"
			string m_FriendlyName = "Player FOV for Target"
			string m_TooltipOverride = ""
			string m_HelpText = "Specify angle of view cone in degrees. Negative value = NOT"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.PlayerTargetFOVTrueCone"
			string m_FriendlyName = "Play FOV to Target is a true view cone"
			string m_TooltipOverride = ""
			string m_HelpText = "Player\'s view cone is evaluated as a true cone, not pie slice "
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.PlayerTargetLOS"
			string m_FriendlyName = "Player has LOS to Target"
			string m_TooltipOverride = ""
			string m_HelpText = "Checks that the player has clear Line of Sight to the Target"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.PlayerBlockingActor"
			string m_FriendlyName = "Player blocking Actor"
			string m_TooltipOverride = ""
			string m_HelpText = "Checks that the player is blocking the Actor\'s path"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.ActorInPVS"
			string m_FriendlyName = "Actor in Player\'s PVS"
			string m_TooltipOverride = ""
			string m_HelpText = "Checks that the actor is in the player\'s PVS"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.ActorInVehicle"
			string m_FriendlyName = "Actor in a vehicle"
			string m_TooltipOverride = ""
			string m_HelpText = "Checks the actor\'s state in a vehicle"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.PlayerInVehicle"
			string m_FriendlyName = "Player in a vehicle"
			string m_TooltipOverride = ""
			string m_HelpText = "Checks the player\'s state in a vehicle"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_script_conditions.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.scripted_sequence"
			string m_FriendlyName = "scripted_sequence"
			string m_TooltipOverride = ""
			string m_HelpText = "Grabs an NPC and makes them play a specified set of animations. The NPC can be told to move to the scripted sequence position or can be told to play the script wherever they currently are. Multiple scripted sequences of the same name will frame-synchronize in the action animation once all the actors have moved to position. This allows tight interaction between actors (one actor grabbing another, hitting them, etc.) The flow is as follows:\n\n1) Move to position using the specified movement animation. If \'Move to Position\' is set to NONE, skip to step 2.\n2) If forced to wait for another actor to move to position, play the pre-action idle animation, otherwise skip to step 3. If there is no pre-action idle specified, ACT_IDLE is used.\n3) Fire the OnBeginSequence output.\n4) Play the action animation. If no action animation is specified, skip to step 5.\n5) Play the post-action idle animation. If none is specified, skip to step 6. If the \'Loop in Post Idle\' spawnflag is set, keep playing the post-action idle until the script is cancelled. If no post-action idle animation is specified, ACT_IDLE is used.\n6) Fire the OnEndSequence output.\n7) If a next script to play is specified, hand the NPC to the next script and repeat this process for that script.\n\nThe MoveToPosition input runs steps 1 and 2, then waits while playing the pre-action idle animation until the BeginSequence input is received.\n\nIf the sequence has motion extraction in it, set the \'Don\'t Teleport NPC On End\' spawnflag."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_iszEntity"
			string m_FriendlyName = "Target NPC"
			string m_TooltipOverride = ""
			string m_HelpText = "The name or class name (such as \'npc_zombie\') of an NPC to use for this script."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_iszIdle"
			string m_FriendlyName = "Pre Action Idle Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the sequence (such as \'idle01\') or activity (such as \'ACT_IDLE\') to play before the action animation if the NPC must wait for the script to be triggered. Use \'Start on Spawn\' flag or MoveToPosition input to play this idle animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_iszEntry"
			string m_FriendlyName = "Entry Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the sequence (such as \'reload02\') or activity (such as \'ACT_RELOAD\') to play when the sequence starts, before transitioning to play the main action sequence."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_iszPlay"
			string m_FriendlyName = "Action Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the main sequence (such as \'reload02\') or activity (such as \'ACT_RELOAD\') to play."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_iszPostIdle"
			string m_FriendlyName = "Post Action Idle Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the sequence (such as \'idle01\') or activity (such as \'ACT_IDLE\') to play after the action animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_iszCustomMove"
			string m_FriendlyName = "Custom Move Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "Used in conjunction with the \'Custom movement\' setting for the \'Move to Position\' property, specifies the sequence (such as \'crouch_run01\') or activity (such as \'ACT_RUN\') to use while moving to the scripted position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_bLoopActionSequence"
			string m_FriendlyName = "Loop Action Animation\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_bSynchPostIdles"
			string m_FriendlyName = "Synch Post Idles\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_flRadius"
			string m_FriendlyName = "Search Radius (0=everywhere)"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius to search within for an NPC to use. 0 searches everywhere."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_flRepeat"
			string m_FriendlyName = "Repeat Rate ms"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_fMoveTo"
			string m_FriendlyName = "Move to Position"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_iszNextScript"
			string m_FriendlyName = "Next Script"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the script to run immediately after this script completes. The NPC will not return to AI between the two scripts."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_bIgnoreGravity"
			string m_FriendlyName = "Ignore Gravity on NPC during script"
			string m_TooltipOverride = ""
			string m_HelpText = "If this is set to \'Yes\', the NPC will not be subject to gravity while playing this script."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.m_bDisableNPCCollisions"
			string m_FriendlyName = "Disable NPC collisions during script"
			string m_TooltipOverride = ""
			string m_HelpText = "Useful for when NPCs playing scripts must interpenetrate while riding on trains, elevators, etc. This only disables collisions between the NPCs in the script and must be enabled on BOTH scripted_sequences."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.scripted_sequence.onplayerdeath"
			string m_FriendlyName = "On player death"
			string m_TooltipOverride = ""
			string m_HelpText = "What should this entity do if the player dies"
		},
		CHelpEntry
		{
			string m_Id = "Element.aiscripted_schedule"
			string m_FriendlyName = "aiscripted_schedule"
			string m_TooltipOverride = ""
			string m_HelpText = "Issues a command to an NPC without taking the NPC out of its AI. This does not seize control of the NPC as a scripted_sequence does"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.aiscripted_schedule.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.aiscripted_schedule.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.aiscripted_schedule.m_iszEntity"
			string m_FriendlyName = "Target NPC"
			string m_TooltipOverride = ""
			string m_HelpText = "The name or classname of an NPC to use."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.aiscripted_schedule.m_flRadius"
			string m_FriendlyName = "Search Radius (0=everywhere)"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius to search within for an NPC to use. 0 searches everywhere."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.aiscripted_schedule.graball"
			string m_FriendlyName = "All in radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to grab all matching NPCs in the specified radius, instead of just one"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.aiscripted_schedule.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.aiscripted_schedule.forcestate"
			string m_FriendlyName = "AI state to set"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.aiscripted_schedule.schedule"
			string m_FriendlyName = "Schedule to run"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.aiscripted_schedule.interruptability"
			string m_FriendlyName = "Interruptability"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.aiscripted_schedule.goalent"
			string m_FriendlyName = "Goal entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Provides the name of a schedule-specific goal entity (see \'Schedule to run\')"
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_choreographed_scene"
			string m_FriendlyName = "logic_choreographed_scene"
			string m_TooltipOverride = ""
			string m_HelpText = "Manages a choreographed scene of one or more actors."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.SceneFile"
			string m_FriendlyName = "Scene file"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.target1"
			string m_FriendlyName = "Target 1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.target2"
			string m_FriendlyName = "Target 2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.target3"
			string m_FriendlyName = "Target 3"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.target4"
			string m_FriendlyName = "Target 4"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.target5"
			string m_FriendlyName = "Target 5"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.target6"
			string m_FriendlyName = "Target 6"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.target7"
			string m_FriendlyName = "Target 7"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.target8"
			string m_FriendlyName = "Target 8"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.busyactor"
			string m_FriendlyName = "If an Actor is talking..."
			string m_TooltipOverride = ""
			string m_HelpText = "What to do if an actor this scene needs is already talking when this scene is told to start."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_choreographed_scene.onplayerdeath"
			string m_FriendlyName = "On player death"
			string m_TooltipOverride = ""
			string m_HelpText = "What should this entity do if the player dies"
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_scene_list_manager"
			string m_FriendlyName = "logic_scene_list_manager"
			string m_TooltipOverride = ""
			string m_HelpText = "Manages a list of logic_choreographed_scene entities. Store choreo scenes in them in order that they will be played by other inputs. Whenever a scene plays, the manager will remove all scenes before that one in the list. The name of another logic_scene_list_manager can be entered in a slot instead of an invididual scene, which will cause all scenes in that manager to be removed when a later scene in this list is played."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene0"
			string m_FriendlyName = "Scene 1"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene1"
			string m_FriendlyName = "Scene 2"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene2"
			string m_FriendlyName = "Scene 3"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene3"
			string m_FriendlyName = "Scene 4"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene4"
			string m_FriendlyName = "Scene 5"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene5"
			string m_FriendlyName = "Scene 6"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene6"
			string m_FriendlyName = "Scene 7"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene7"
			string m_FriendlyName = "Scene 8"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene8"
			string m_FriendlyName = "Scene 9"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene9"
			string m_FriendlyName = "Scene 10"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene10"
			string m_FriendlyName = "Scene 11"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene11"
			string m_FriendlyName = "Scene 12"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene12"
			string m_FriendlyName = "Scene 13"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene13"
			string m_FriendlyName = "Scene 14"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene14"
			string m_FriendlyName = "Scene 15"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_scene_list_manager.scene15"
			string m_FriendlyName = "Scene 16"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a logic_choreographed_scene, or logic_scene_list_manager."
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_sound"
			string m_FriendlyName = "ai_sound"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity makes sounds or smells that can be sensed by NPCs, butnot by the player. This can be used to cause reactions in nearby NPCs.\n\nSound Types\n  Combat: Will cause most NPCs to become alert\n  World: Will cause most NPCs to become alert\n  Danger: Will cause most NPCs to move away from the position of the sound\n  Bullet Impact: \n  Carcass: \n  Meat: \n  Garbage: \n  Thumper: causes antlions to run away briefly\n  Readiness: (Low, Medium, High) Causes player companions that can hear this sound to change readiness\n"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.volume"
			string m_FriendlyName = "Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "How far away this sound can be heard. This is a radius."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.duration"
			string m_FriendlyName = "Duration"
			string m_TooltipOverride = ""
			string m_HelpText = "How long the sound persists each time you insert it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.soundtype"
			string m_FriendlyName = "Sound Type"
			string m_TooltipOverride = ""
			string m_HelpText = "The type of sound or smell will determine the reaction of NPCs that sense it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.soundcontext"
			string m_FriendlyName = "Additional sound context (optional)"
			string m_TooltipOverride = ""
			string m_HelpText = "Optional settings specifying such things as who can or cannot hear the sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_sound.locationproxy"
			string m_FriendlyName = "Location Proxy"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of an entity to use as a proxy to determine the location at which to make the sound. If you specify an entity here, the sound will be made at that entity\'s location (!player included)"
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_addon"
			string m_FriendlyName = "ai_addon"
			string m_TooltipOverride = ""
			string m_HelpText = "ai_addon"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_addon.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_addon.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_addon.target"
			string m_FriendlyName = "Host NPC"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_addon_builder"
			string m_FriendlyName = "ai_addon_builder"
			string m_TooltipOverride = ""
			string m_HelpText = "ai_addon_builder"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_addon_builder.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_addon_builder.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_addon_builder.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_addon_builder.NPCName"
			string m_FriendlyName = "NPC name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name to give built NPCs"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_addon_builder.AddOnName"
			string m_FriendlyName = "Add on name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name to give built addons"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_addon_builder.NpcPoints"
			string m_FriendlyName = "NPC Points"
			string m_TooltipOverride = ""
			string m_HelpText = "Points available to spend for NPCs"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_addon_builder.AddonPoints"
			string m_FriendlyName = "Addon Points"
			string m_TooltipOverride = ""
			string m_HelpText = "Points available to spend for addons"
		}
	]
}