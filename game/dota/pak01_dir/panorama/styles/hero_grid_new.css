/* When creating a new category, what is its size? */
@define newCategoryWidth: 300px;
@define newCategoryHeight: 100px;

/* When creating a new category, how much offset do you place after the last category? */
@define newCategoryOffset: 32px;

/* What is the unscaled size of a card? */
@define defaultCardWidth: 51px;
@define defaultCardHeight: 83px;

/* How much padding is inside a list of hero cards? */
@define heroListPadding: 4px;

DOTAHeroGridNew
{
	width: 1204px;
	height: 664px;
	flow-children: down;
}

#MainContents
{
	width: 100%;
	height: fill-parent-flow( 1.0 );
}

#Footer
{
	width: 100%;
	height: 46px;
	padding: 5px;
}

.IsEditingHeroGrid #Footer {
	background-color: #00000060;
}

#ViewModeControls
{
	width: 100%;
	height: 100%;
	flow-children: right;
}

.IsEditingHeroGrid #ViewModeControls
{
	visibility: collapse;
}

#ArrangeContainer
{
	flow-children: right;
	vertical-align: bottom;
}

#ArrangeButton
{
	width: 300px;
	height: 46px;
	background-color: black;
	context-menu-position: top;
	flow-children: right;
	border-radius: 4px;
}

#ArrangeButton:hover
{
	brightness: 2.0;
}
#ArrangeButton:active
{
	brightness: 1.5;
}

#ArrangeButton Label
{
	font-size: 16px;
	vertical-align: middle;
	color: #b1ccec;
	margin-left: 10px;
	font-weight: semi-bold;
	width: fill-parent-flow( 1.0 );
	max-height: 22px;
}

#ArrangeButtonIcon
{
	width: 16px;
	height: 16px;

	margin-right: 8px;
	vertical-align: middle;

	background-image: url("s2r://panorama/images/control_icons/arrow_solid_down_png.vtex");
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center;

	wash-color: #b1ccec;
}

#EditCurrentConfigButton
{
	vertical-align: middle;
	margin-left: 8px;
	background-color: black;
	height: 32px;
	padding: 0px 8px;
	border-radius: 4px;
	visibility: collapse;
}

#EditCurrentConfigButton:hover
{
	brightness: 2.0;
}

##EditCurrentConfigButton:active
{
	brightness: 1.5;
}

.ConfigType_Custom #EditCurrentConfigButton
{
	visibility: visible;
}

#EditCurrentConfigButton Label
{
	vertical-align: middle;
	font-size: 15px;
	text-transform: uppercase;
	letter-spacing: 2px;
	text-align: center;
	color: #b1ccec;
}

#EditModeControls
{
	width: 100%;
	flow-children: right;

	visibility: collapse;
}

.IsEditingHeroGrid #EditModeControls
{
	visibility: visible;
}

.EditingLabel
{
	vertical-align: middle;
	margin-right: 8px;
}


#EditingConfigName
{
	width: 300px;
	margin-right: 8px;
}

TextEntry  {
	background-color: #000000;
	border: 1px solid #1d1d1d;
	font-size: 17px;
	color: #b1ccec;
	padding: 6px 8px;
}

.EditLayoutButton
{
	margin-right: 8px;
	/*border: 2px solid #999;*/
	padding: 7px 20px 8px 20px;
	font-weight: semi-bold;
	border-radius: 1px;
	vertical-align: middle;
}

#ConfirmEditButton  {
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #5e842c ), to( #40621d ) );
}

#DiscardEditButton  {
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #5a6c75 ), to( #3d4a50 ) );
}

#AddCategoryButton {
	/*background-color: #ffffff80;*/
	border: 1px solid #ffffff60;
}

.EditLayoutButton Label {
	color: #ffffff;
	font-size: 16px;
}

#AddCategoryButton Label {
	color: #ffffff;
}

#DeleteButton {
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #db6565 ), to( #75362b ) );
}

.EditLayoutButton:hover
{
	brightness: 1.5;
}

.EditLayoutButton:active
{
	brightness: 1.5;
}


.EditButtonContents
{
	flow-children: right;
	horizontal-align: center;
}

.EditButtonIcon
{
	width: 15px;
	height: 15px;
	margin-right: 6px;
	vertical-align: middle;
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center;
}

#ConfirmEditButton .EditButtonIcon
{
	background-image: url("s2r://panorama/images/control_icons/check_png.vtex");
	wash-color: #0f0;
}

#DiscardEditButton .EditButtonIcon
{
	background-image: url("s2r://panorama/images/control_icons/x_close_png.vtex");
	wash-color: #f00;
}

#DeleteButton .EditButtonIcon
{
	background-image: url("s2r://panorama/images/control_icons/x_close_png.vtex");
}

.IsEditingNewConfig #DeleteButton
{
	visibility: collapse;
}



#AddCategoryButton .EditButtonIcon
{
	background-image: url("s2r://panorama/images/control_icons/plus_thin_png.vtex");
	/*opacity: 1;*/
}

#GridCategories
{
	width: 100%;
	height: 100%;
	overflow: scroll scroll;
}

.ConfigType_Preset #GridCategories
{
	overflow: squish;
	flow-children: down;
}

.HeroCategory
{
	flow-children: down;
}

.ConfigType_Preset .HeroCategory
{
	margin-bottom: 8px;
}

.HeroCategory #HeroList
{
	/*background-color: #0009;*/
	flow-children: right-wrap;
	padding: heroListPadding;
	overflow: squish scroll;
}

.IsEditingHeroGrid .HeroCategory #HeroList
{
	background-color: #0009;
}

.HeroCategory #HeroListOverlay
{
	width: 100%;
	height: 100%;
}

#HeroListSizeDragPoint
{
	horizontal-align: right;
	vertical-align: bottom;

	width: 20px;
	height: 20px;

	border-right: 2px solid #999;
	border-bottom: 2px solid #999;

	visibility: collapse;
}

#HeroListSizeDragPoint:hover
{
	brightness: 2.0;
}

#HeroListSizeDragPoint:active
{
	brightness: 1.5;
}

/* Useful to enable for debugging */
/*.DragPoint
{
	width: 20px;
	height: 20px;
	border: 2px solid red;
}*/

.IsEditingHeroGrid #HeroListSizeDragPoint
{
	visibility: visible;
}

.HeroCategory .HeroCategoryControls
{
	flow-children: right;
	height: 20px;
}

.HeroCategory #CategoryDragTarget
{
	flow-children: right;
	height: 100%;
}

.IsEditingHeroGrid .HeroCategory #CategoryDragTarget:hover
{
	brightness: 2.0;
}

.IsEditingHeroGrid .HeroCategory #CategoryDragTarget:active
{
	brightness: 1.5;
}

.HeroCategory #CategoryDragIcon
{
	width: 13px;
	height: 13px;
	margin-right: 2px;
	vertical-align: middle;
	wash-color: #999;

	background-image: url("s2r://panorama/images/control_icons/move_png.vtex");
	background-size: contain;
	background-position: center;
	background-repeat: no-repeat;
	tooltip-position: top;
	tooltip-body-position: 50% 50%;

	visibility: collapse;
}

.IsEditingHeroGrid #CategoryDragIcon
{
	visibility: visible;
}

.HeroCategory #HeroCategoryName
{
	color: #ffffff80;
	text-shadow: 2px 2px 4px black;
	padding-left: 4px;
	text-transform: uppercase;
	letter-spacing: 2px;
	font-size: 16px;
	height: 100%;
	font-weight: semi-bold;
}

.HeroCategory #EditCategorySettingsButton
{
	width: 13px;
	height: 13px;
	margin-left: 3px;

	vertical-align: middle;

	background-size: contain;
	background-position: center;
	background-repeat: no-repeat;
	background-image: url("s2r://panorama/images/control_icons/gear_png.vtex");

	wash-color: #999;

	context-menu-position: top;
	context-menu-body-position: 50% 50%;

	tooltip-position: top;
	tooltip-body-position: 50% 50%;

	visibility: collapse;
}

.IsEditingHeroGrid .HeroCategory #EditCategorySettingsButton
{
	visibility: visible;
}

#EditCategorySettingsButton:hover {
	brightness: 2.0;
}


.HeroCard
{
	width: 51px;
	height: 83px;
	tooltip-body-position: 50% 50%;

	transition-property: saturation, brightness, wash-color, opacity;
	transition-duration: 0.2s;
}

.HeroCardContents
{
	width: 100%;
	height: 100%;
}

.HeroCardOverlays
{
	width: 100%;
	height: 100%;
}

.HeroCard #HeroImage
{
	saturation: 0.7;
}

.SearchActive .HeroCard:not(.SearchHighlighted),
.HeroCard.Filtered,
.HeroCard.AlreadyPicked,
.HeroCard.Unavailable
{
	brightness: 0.2;
	saturation: 0;
	wash-color: #7ABCCEaa;
	opacity: 0.5;
}

@keyframes 'HeroCardSelected'
{
    0%		{ brightness: 1; }
    50%		{ brightness: 2; }
    100%    { brightness: 1; }
}

.SearchActive .HeroCard.SearchHighlighted
{
	saturation: 1.0;
	brightness: 1.0;

	z-index: 1;

	box-shadow: #00ffff44 -4px -4px 8px 8px;

	animation-name: HeroCardSelected;
	animation-iteration-count: infinite;   
    animation-duration: 0.8s;	
}

.HeroCard #HeroImage
{
	width: 100%;
	height: 100%;
	margin: 4px;
}

.HeroCard #DragOverlay
{
	vertical-align: middle;
	horizontal-align: center;

	width: 32px;
	height: 32px;

	background-image: url("s2r://panorama/images/control_icons/move_png.vtex");
	background-size: contain;
	background-position: center;
	background-repeat: no-repeat;

	opacity: 0.0;

	transition-property: opacity;
	transition-duration: 0.2s;
}

.IsEditingHeroGrid .HeroCard:not(.AddHeroButtonHeroCard):hover #DragOverlay
{
	opacity: 1.0;
}

.HeroCard.DropPlaceholderHeroCard #HeroImage
{
	border: 1px solid #ffffff05;
	background-color: #00000060;
}

.HeroCard.AddHeroButtonHeroCard #HeroImage
{
	border: 1px solid #666;
}

.HeroCard.DropPlaceholderHeroCard,
.HeroCard.AddHeroButtonHeroCard
{
	saturation: 1.0;
}

.HeroCard.AddHeroButtonHeroCard:hover
{
	brightness: 2.0;
}
.HeroCard.AddHeroButtonHeroCard:active
{
	brightness: 1.5;
}

#AddHeroOverlay
{
	vertical-align: middle;
	horizontal-align: center;

	width: 32px;
	height: 32px;

	background-image: url("s2r://panorama/images/control_icons/plus_thin_png.vtex");
	background-size: contain;
	background-position: center;
	background-repeat: no-repeat;

	wash-color: #666;

	visibility: collapse;
}

.HeroCard.AddHeroButtonHeroCard #AddHeroOverlay
{
	visibility: visible;
}


.HeroCard #DragDeleteOverlay
{
	vertical-align: middle;
	horizontal-align: center;
	width: 32px;
	height: 32px;
	wash-color: #e1d9db;

	background-image: url("s2r://panorama/images/control_icons/icon_trash_png.vtex");
	background-size: contain;
	background-position: center;
	background-repeat: no-repeat;
	
	opacity: 0.0;

	transition-property: opacity;
	transition-duration: 0.2s;
}

.HeroCard.DropWillDelete #DragDeleteOverlay
{
	opacity: 1.0;
}


.HeroCard #NewHeroOverlay
{
	color: white;
	font-size: 14px;
	font-weight: bold;
	vertical-align: top;
	horizontal-align: middle;
	text-align: center;
	text-shadow: 0px 0px 4px #000;
	text-transform: uppercase;
	margin-top: 4px;

	visibility: collapse;
}

.HeroCard.NewHero #NewHeroOverlay
{
	visibility: visible;
}

.HeroCard #BannedOverlay
{
	background-image: url("s2r://panorama/images/hero_selection/banned_overlay_psd.vtex");
	background-size: 100% 100%;
	background-position: 50% 50%;
	background-repeat: no-repeat;

	wash-color: red;

	width: 80%;
	height: 100%;

	horizontal-align: center;
	vertical-align: center;

	pre-transform-scale2d: 1.15;

	transform: translateX(14px) translateY(-18px);
	opacity: 0.0;

	transition-property: opacity, transform;
	transition-duration: .24s;
}

.HeroCard.Banned #BannedOverlay
{
	opacity: 1.0;
	transform: translateX(0px) translateY(2px);
}

.HeroCard.Banned
{
	brightness: 0.3;
	saturation: 0.2;
	wash-color: #ff4444aa;
}

.HeroCardImageOverlay
{
	width: 100%;
	height: 100%;
	background-size: 63px 92px;
	background-repeat: no-repeat;
	background-position: center;

	visibility: collapse;
}

#SuggestedOverlay {
	background-image: url("s2r://panorama/images/hero_selection/suggested_overlay_psd.vtex");
}

#SuggestedBanOverlay {
	background-image: url("s2r://panorama/images/hero_selection/suggested_ban_overlay_psd.vtex");
}

#AllHeroChallengeOverlay {
	background-image: url("s2r://panorama/images/hero_selection/allhero_overlay_psd.vtex");
}

#DailyHeroChallengeIcon
{
	background-image: bp_point_log_pass_activated;
	background-size: contain;
	background-repeat: no-repeat;
	width: 20px;
	height: 20px;
	horizontal-align: left;
	vertical-align: top;

	visibility: collapse;
}

#RecommendHeroIcon,
#AvoidHeroIcon
{
	background-size: contain;
	background-repeat: no-repeat;
	width: 14px;
	height: 14px;
	horizontal-align: right;
	vertical-align: top;

	visibility: collapse;
}

#RecommendHeroIcon
{
	background-image: url("s2r://panorama/images/hero_selection/recommended_hero_icon_png.vtex");
}

#AvoidHeroIcon
{
	background-image: url("s2r://panorama/images/hero_selection/avoid_hero_icon_png.vtex");
}

#PlaytestHeroOverlay
{
	font-size: 16px;
	padding: 4px 8px;
	color: white;
	font-weight: bold;
	text-transform: uppercase;
	vertical-align: middle;
	horizontal-align: center;
	pre-transform-rotate2d: -45deg;
	text-overflow: shrink;

	animation-name: PlaytestAnimation;
	animation-duration: 0.5s;
	animation-iteration-count: infinite;
	animation-direction: alternate;

	visibility: collapse;
}

@keyframes 'PlaytestAnimation'
{
	0% { text-shadow: 0px 0px 8px #00ffff; pre-transform-scale2d: 1.0; }
	100% { text-shadow: 0px 0px 16px #00ffff; pre-transform-scale2d: 1.10; }
}

.HeroCard.Suggested:not(.SuggestedBan) #SuggestedOverlay,
.HeroCard.SuggestedBan #SuggestedBanOverlay,
.HeroCard.AllHeroChallenge #AllHeroChallengeOverlay,
.HeroCard.DailyHeroChallenge #DailyHeroChallengeIcon,
.HeroCard.Recommend #RecommendHeroIcon,
.HeroCard.Avoid #AvoidHeroIcon,
.HeroCard.NewHero #NewHeroOverlay,
.HeroCard.Playtest #PlaytestHeroOverlay
{
	visibility: visible;
}

#HeroBadgeStatus
{
	vertical-align: bottom;
	flow-children: down;
	margin-bottom: -3px;
	visibility: collapse;
}

.PlusSubscriber #HeroBadgeStatus
{
	visibility: visible;
}

#HeroBadgeLevel
{
	font-size: 14px;
	color: white;
    font-weight: bold;
	text-align: center;
	text-shadow: 0px 0px 4px 2.0 black;
	margin-bottom: -5px;
	width: 12px;
	padding-left: 2px;
    text-overflow: shrink;
    background-color: gradient( linear, 0% 100%, 0% 0%, from( #000 ), to( #00000009 ) );
}

#HeroBadgeIcon
{
	width: 15px;
	height: 18px;
}

.NoTier #HeroBadgeStatus
{
	visibility: collapse;
}


.HeroCard #CavernIcon
{
	width: 16px;
	height: 16px;

	vertical-align: bottom;
	horizontal-align: right;

	background-image: bp_cavern_crawl_challenge;
	background-size: contain;
	background-position: center;
	background-repeat: no-repeat;

	visibility: collapse;
}

.HeroCard.CavernSupportAvailable #CavernIcon,
.HeroCard.CavernCarryAvailable #CavernIcon,
.HeroCard.CavernUtilityAvailable #CavernIcon
{
	visibility: visible;
}

.HeroCard.CavernSupportAvailable.CavernWounded,
.HeroCard.CavernCarryAvailable.CavernWounded,
.HeroCard.CavernUtilityAvailable.CavernWounded
{
    background-image: bp_cavern_crawl_challenge_wounded;
}

.HeroCard.CavernSupportAvailable
{
	wash-color: #fff09d;
}

.HeroCard.CavernCarryAvailable
{
	wash-color: #affeff;
}

.HeroCard.CavernUtilityAvailable
{
	wash-color: #dfd2ff;
}



/* -- Quick Search --------------------------------------------------------- */

/* Don't change the name - referenced from code */
@define QuickSearchFadeOutTime: 1.5s;

#GridOverlay
{
	width: 100%;
	height: 100%;
}

#QuickSearch
{
	vertical-align: middle;
	width: 100%;
	text-align: center;
	text-overflow: clip;
	font-size: 100px;
	font-weight: normal;
	color: white;
	text-shadow: #000000 2px 2px 10px 10px;
	text-transform: uppercase;
	transition-property: pre-transform-scale2d, opacity, blur;
	transition-duration: 0.2s;
}

#QuickSearch.Hidden
{
	pre-transform-scale2d: 2;
}

@keyframes 'QuickSearchUserFadeOut'
{
	0%
	{
		opacity: 1.0;
		blur: none;
	}
	50%
	{
		blur: none;
	}
	100%
	{
		opacity: 0.0;
		blur: gaussian( 4, 4, 2 );
	}
}

.QuickSearchUserAnimation
{
	animation-name: QuickSearchUserFadeOut;
	animation-duration: QuickSearchFadeOutTime;
}

@keyframes 'QuickSearchAutoFadeOut'
{
	0%
	{
		opacity: 0.0;
	}
	25%
	{
		opacity: 0.2;
	}
	50%
	{
		blur: none;
	}
	100%
	{
		opacity: 0.0;
		blur: gaussian( 4, 4, 2 );
	}
}

.QuickSearchAutoAnimation
{
	animation-name: QuickSearchAutoFadeOut;
	animation-duration: QuickSearchFadeOutTime;
}

/* -- Missing Heroes --------------------------------------------------------- */

#MissingHeroesOverlay
{
	width: 100%;
	vertical-align: bottom;
	flow-children: down;

	visibility: collapse;
}

.HasMissingHeroes #MissingHeroesOverlay
{
	visibility: visible;
}

#MissingHeroesButton
{
	vertical-align: bottom;
	horizontal-align: center;
	background-color: #00000060;
	padding: 8px 15px;
}

#MissingHeroesButton Label
{
	text-transform: uppercase;
	font-size: 16px;
	letter-spacing: 1px;
}

#MissingHeroesButton:hover
{
	brightness: 2.0;
}

#MissingHeroesButton:active
{
	brightness: 1.5;
}

#MissingHeroesList
{
	max-width: 800px;
	max-height: 400px;
	ui-scale: 80%;
	horizontal-align: center;
	background-color: #222;
	flow-children: right-wrap;
	margin-bottom: 2px;
	border: 2px solid black;
	padding: 4px;
	overflow: squish scroll;

	opacity: 0.0;
	transform: translateY( 20px );

	transition-property: opacity, transform;
	transition-duration: 0.2s;
}

.ShowMissingHeroes #MissingHeroesList
{
	opacity: 1.0;
	transform: none;
}

/* -- Filters --------------------------------------------------------- */

#Filters
{
	flow-children: right;
	vertical-align: middle;
}

.FilterCategory
{
	flow-children: right;
	margin-right: 30px;
}

.FilterCategoryTitle
{
	text-transform: uppercase;
	font-size: 15px;
	letter-spacing: 1px;
	color: #808fa6;
	vertical-align: middle;
	margin-right: 2px;
}

.FilterCategoryItems
{
	flow-children: right;
	overflow: noclip;
}

.FilterButton
{
	width: 32px;
	height: 32px;
	margin-right: -4px;

	tooltip-position: top;
	tooltip-body-position: 50% 50%;

	background-position: center;
	background-repeat: no-repeat;
	background-size: contain;

	wash-color: #616d7e;

	transition-property: pre-transform-scale2d;
	transition-duration: 0.1s;
}

.FilterButton:selected
{
	wash-color: #c5dcff;
}

.FilterButton:hover
{
	brightness: 2.0;
	pre-transform-scale2d: 1.35;
	z-index: 1;
}

.FilterButton:active
{
	brightness: 1.5;
}

#CarryButton
{
	background-image: url("s2r://panorama/images/control_icons/filter_carry_png.vtex");
}
#SupportButton
{
	background-image: url("s2r://panorama/images/control_icons/filter_support_png.vtex");
}

.ComplexityButton
{
	background-image: url("s2r://panorama/images/control_icons/filter_complexity_png.vtex");
}

#MeleeButton
{
	background-image: url("s2r://panorama/images/control_icons/filter_melee_png.vtex");
}
#RangedButton
{
	background-image: url("s2r://panorama/images/control_icons/filter_ranges_png.vtex");
}

#AttackTypeCategory
{
	visibility: collapse;
}



#BattlePassCategory
{
	visibility: collapse;
}

.CavernCrawlActive #BattlePassCategory,
.SelfGameEventVisible #BattlePassCategory
{
	visibility: visible;
}

#RecommendedButton
{
	background-image: url("s2r://panorama/images/control_icons/filter_ti2019_friends_png.vtex");
	visibility: collapse;
}

.SelfGameEventVisible #RecommendedButton
{
	visibility: visible;
}

#CavernCrawlButton
{
	background-image: url("s2r://panorama/images/control_icons/filter_ti2019_jungle_png.vtex");
	visibility: collapse;
}
#CavernMapButton
{
	margin-left: 12px;
	vertical-align: middle;
	visibility: collapse;
}

#CavernMapButton:hover
{
	brightness: 2.0;
}
#CavernMapButton:active
{
	brightness: 1.5;
}

#CavernMapButton Label 
{
	font-size: 12px;
	color: #808fa6;
}

.CavernCrawlActive #CavernCrawlButton,
.CavernCrawlActive #CavernMapButton
{
	visibility: visible;
}

