VSoundStackScript_t
{
	Struct m_SoundStacks[47] =
	[
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_music_opvars"
			CResourceString m_StackKV = ""dota_music_opvars"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"opvars"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"music_smoke_request"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_smoke_end_state"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_roshan_attack_state"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_roshan_health_state"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_roshan_health_state_smooth"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_probability_gank"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_probability_ganker"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_game_time"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_is_daytime"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_is_spectator"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_pregame_time"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"dota_music_mainloop_flag"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"current_music"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_game_state"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"spectator_battle_music_flag"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_spectator_priority"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_spectator_average_priority"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_player_level_total"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"debug_print_music"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"dota_battle_score_smooth"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_intensity_tutorial"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_intensity"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"dota_battle_score_smooth_remap"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"explore_was_played"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"state_battle_music_request"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"state_death_music_request"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"state_chasing_music_request"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"state_chased_music_request"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"dota_music_explore_no_repeat"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"dota_music_explore_night_no_repeat"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"dota_music_epic_no_repeat"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"dota_not_restart_flag"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"dota_worldmap_flag"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"music_dota_ui_vol"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"music_game_init"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "delta_printer"
			CResourceString m_StackKV = ""delta_printer"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"tracked_value"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"switch1"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"switch2"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"description"
			{
				"data_type"		"string"
				"value"		"name_here"
			}
		}
	}
	"tracked_value_delta"
	{
		"operator"		"math_delta"
		"input"		"@public.tracked_value"
	}
	"delta_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"not_equal"
		"input1"		"@tracked_value_delta.output"
		"input2"		"0.000000"
	}
	"compare1"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@delta_compare.output"
		"input2"		"@public.switch1"
	}
	"compare2"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@compare1.output"
		"input2"		"@public.switch2"
	}
	"********"
	{
		"input_execute"		"@compare2.output"
		"operator"		"util_print_string"
		"input"		"@public.description"
	}
	"****PRINT_DELTA****"
	{
		"input_execute"		"@compare2.output"
		"operator"		"util_print_float"
		"input"		"@public.tracked_value"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_start_check_music_not_playing"
			CResourceString m_StackKV = ""dota_start_check_music_not_playing"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"output_music_not_playing"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
		}
	}
	"get_current_music_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"current_music"
		"input_use_namespace"		"false"
	}
	"music_playing_test_less_than"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@get_current_music_opvar.output"
		"input2"		"4"
	}
	"music_playing_test_greater_than_equal"
	{
		"operator"		"math_float"
		"apply"		"greater_than"
		"input1"		"@get_current_music_opvar.output"
		"input2"		"8"
	}
	"music_playing_test_not_dead"
	{
		"operator"		"math_float"
		"apply"		"not_equal"
		"input1"		"@get_current_music_opvar.output"
		"input2"		"16"
	}
	"music_playing_or"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input1"		"@music_playing_test_greater_than_equal.output"
		"input2"		"@music_playing_test_less_than.output"
	}
	"music_playing_and"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@music_playing_or.output"
		"input2"		"@music_playing_test_not_dead.output"
	}
	"set_music_not_playing_opvar"
	{
		"operator"		"opvar_set_float"
		"input"		"@music_playing_and.output"
		"input_operator_name"		"public"
		"input_field_name"		"output_music_not_playing"
		"input_use_namespace"		"true"
	}
	"****PRINT_NOT_PLAYING****"
	{
		"input_execute"		"0.000000"
		"operator"		"util_print_float"
		"input"		"@music_playing_and.output"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_music_type_tracker_add"
			CResourceString m_StackKV = ""dota_music_type_tracker_add"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"public"
	{
		"operator"		"util_null"
		"input_execute"		"1.000000"
		"operator_variables"
		{
			"music_value"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
		}
	}
	"get_currently_playing_music"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"current_music"
		"input_use_namespace"		"false"
	}
	"add_music_value"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@get_currently_playing_music.output"
		"input2"		"@public.music_value"
	}
	"print_current_music"
	{
		"execute_once"		"true"
		"operator"		"util_print_float"
		"input"		"@add_music_value.output"
		"input_execute"		"0.000000"
	}
	"set_music_type_opvar"
	{
		"execute_once"		"true"
		"operator"		"opvar_set_float"
		"input"		"@add_music_value.output"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"current_music"
		"input_use_namespace"		"false"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_music_type_tracker_remove"
			CResourceString m_StackKV = ""dota_music_type_tracker_remove"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"public"
	{
		"operator"		"util_null"
		"input_execute"		"1.000000"
		"operator_variables"
		{
			"music_value"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
		}
	}
	"get_currently_playing_music"
	{
		"execute_once"		"true"
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"current_music"
		"input_use_namespace"		"false"
	}
	"remove_music_value"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"@get_currently_playing_music.output"
		"input2"		"@public.music_value"
	}
	"print_current_music"
	{
		"execute_once"		"true"
		"operator"		"util_print_float"
		"input"		"@remove_music_value.output"
		"input_execute"		"0.000000"
	}
	"set_music_type_opvar"
	{
		"execute_once"		"true"
		"operator"		"opvar_set_float"
		"input"		"@remove_music_value.output"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"current_music"
		"input_use_namespace"		"false"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_opvar_smoothing_update"
			CResourceString m_StackKV = ""dota_opvar_smoothing_update"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"live_opvar_name"
			{
				"data_type"		"string"
				"value"		"foo.bar"
			}
			"smooth_opvar_name"
			{
				"data_type"		"string"
				"value"		"foo.bar"
			}
			"spectator_score_opvar_name"
			{
				"data_type"		"string"
				"value"		"foo.bar"
			}
			"tutorial_opvar_name"
			{
				"data_type"		"string"
				"value"		"foo.bar"
			}
			"travel_distance_to_time_x1"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_y1"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_x2"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_y2"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_x3"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_y3"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_x4"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_y4"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_falling_x1"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_falling_y1"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_falling_x2"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_falling_y2"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_falling_x3"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_falling_y3"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_falling_x4"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"travel_distance_to_time_falling_y4"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
		}
	}
	"get_current_spectator_status"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_is_spectator"
		"input_use_namespace"		"false"
	}
	"get_current_game_time"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_game_time"
		"input_use_namespace"		"false"
	}
	"get_current_pregame_time"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_pregame_time"
		"input_use_namespace"		"false"
	}
	"get_spectator_score_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"@public.spectator_score_opvar_name"
		"input_use_namespace"		"false"
	}
	"remap_spectator_to_battle_score"
	{
		"operator"		"math_curve_2d_4knot"
		"curve_type"		"linear"
		"input"		"@get_spectator_score_opvar.output"
		"input_X1"		"0.000000"
		"input_Y1"		"0.000000"
		"input_X2"		"25.000000"
		"input_Y2"		"8.000000"
		"input_X3"		"50.000000"
		"input_Y3"		"15.500000"
		"input_X4"		"75.000000"
		"input_Y4"		"25.000000"
	}
	"get_live_value_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"@public.live_opvar_name"
		"input_use_namespace"		"false"
	}
	"get_smooth_value_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"@public.smooth_opvar_name"
		"input_use_namespace"		"false"
	}
	"get_live_value_opvar_tutorial"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"@public.tutorial_opvar_name"
		"input_use_namespace"		"false"
	}
	"tutorial_opvar_switch_live"
	{
		"operator"		"ctrl_switch_float"
		"input_execute"		"1.000000"
		"input1"		"@get_live_value_opvar.output"
		"input2"		"@get_live_value_opvar_tutorial.output"
		"input_switch"		"0.000000"
	}
	"spectator_opvar_switch_live"
	{
		"operator"		"ctrl_switch_float"
		"input_execute"		"1.000000"
		"input1"		"@tutorial_opvar_switch_live.output"
		"input2"		"@remap_spectator_to_battle_score.output"
		"input_switch"		"@get_current_spectator_status.output"
	}
	"live_opvar_delta"
	{
		"operator"		"math_delta"
		"input"		"@spectator_opvar_switch_live.output"
	}
	"live_opvar_delta_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@live_opvar_delta.output"
		"input2"		"0.000000"
	}
	"live_opvar_delta_invert"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@live_opvar_delta_compare.output"
	}
	"opvar_smoothing_difference"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"@spectator_opvar_switch_live.output"
		"input2"		"@get_smooth_value_opvar.output"
	}
	"abs_travel_distance"
	{
		"operator"		"math_func_float"
		"function"		"fabs"
		"input1"		"@opvar_smoothing_difference.output"
	}
	"opvar_smoothing_difference_compare"
	{
		"operator"		"math_float"
		"apply"		"greater_than"
		"input1"		"@opvar_smoothing_difference.output"
		"input2"		"0.000000"
	}
	"remap_travel_distance_to_time"
	{
		"operator"		"math_curve_2d_4knot"
		"curve_type"		"linear"
		"input"		"@abs_travel_distance.output"
		"input_X1"		"@public.travel_distance_to_time_x1"
		"input_Y1"		"@public.travel_distance_to_time_y1"
		"input_X2"		"@public.travel_distance_to_time_x2"
		"input_Y2"		"@public.travel_distance_to_time_y2"
		"input_X3"		"@public.travel_distance_to_time_x3"
		"input_Y3"		"@public.travel_distance_to_time_y3"
		"input_X4"		"@public.travel_distance_to_time_x4"
		"input_Y4"		"@public.travel_distance_to_time_y4"
	}
	"remap_travel_distance_to_time_falling"
	{
		"operator"		"math_curve_2d_4knot"
		"curve_type"		"linear"
		"input"		"@abs_travel_distance.output"
		"input_X1"		"@public.travel_distance_to_time_falling_x1"
		"input_Y1"		"@public.travel_distance_to_time_falling_y1"
		"input_X2"		"@public.travel_distance_to_time_falling_x2"
		"input_Y2"		"@public.travel_distance_to_time_falling_y2"
		"input_X3"		"@public.travel_distance_to_time_falling_x3"
		"input_Y3"		"@public.travel_distance_to_time_falling_y3"
		"input_X4"		"@public.travel_distance_to_time_falling_x4"
		"input_Y4"		"@public.travel_distance_to_time_falling_y4"
	}
	"time_remap_logic_switch"
	{
		"operator"		"ctrl_switch_float"
		"input_execute"		"1.000000"
		"input1"		"@remap_travel_distance_to_time_falling.output"
		"input2"		"@remap_travel_distance_to_time.output"
		"input_switch"		"@opvar_smoothing_difference_compare.output"
	}
	"opvar_value_latch"
	{
		"input_execute"		"@live_opvar_delta_invert.output"
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@spectator_opvar_switch_live.output"
		"input2"		"1"
	}
	"opvar_value_smooth_latch"
	{
		"input_execute"		"@live_opvar_delta_invert.output"
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@get_smooth_value_opvar.output"
		"input2"		"1"
	}
	"interp_time_latch"
	{
		"input_execute"		"@live_opvar_delta_invert.output"
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@time_remap_logic_switch.output"
		"input2"		"1"
	}
	"opvar_value_ramp"
	{
		"operator"		"util_timer_ramp"
		"input_start"		"1.000000"
		"input_stop"		"@live_opvar_delta_invert.output"
		"input_start_value"		"@opvar_value_smooth_latch.output"
		"input_end_value"		"@opvar_value_latch.output"
		"input_duration"		"@interp_time_latch.output"
	}
	"set_smooth_opvar"
	{
		"operator"		"opvar_set_float"
		"input"		"@opvar_value_ramp.output"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"@public.smooth_opvar_name"
		"input_use_namespace"		"false"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_random_music_entry_random_start"
			CResourceString m_StackKV = ""dota_random_music_entry_random_start"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"no_repeat_opvar"
			{
				"data_type"		"string"
				"value"		"dota_change_this_opvar_name"
			}
			"variation_01_name"
			{
				"data_type"		"string"
				"value"		"dota_change_this_opvar_name"
			}
			"variation_02_name"
			{
				"data_type"		"string"
				"value"		"dota_change_this_opvar_name"
			}
			"variation_03_name"
			{
				"data_type"		"string"
				"value"		"dota_change_this_opvar_name"
			}
		}
	}
	"get_no_repeat_opvar"
	{
		"execute_once"		"true"
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"@public.no_repeat_opvar"
		"input_use_namespace"		"false"
	}
	"random_variation_picker"
	{
		"execute_once"		"true"
		"operator"		"math_random_float"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"input_min"		"@get_no_repeat_opvar.output_opvar_exists"
		"input_max"		"3.000000"
		"round_to_int"		"true"
	}
	"sum_stored_and_rand"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"add"
		"input_execute"		"1.000000"
		"input1"		"@get_no_repeat_opvar.output"
		"input2"		"@random_variation_picker.output"
	}
	"mod_added_num"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"mod"
		"input1"		"@sum_stored_and_rand.output"
		"input2"		"3"
	}
	"set_no_repeat_opvar"
	{
		"execute_once"		"true"
		"operator"		"opvar_set_float"
		"input"		"@mod_added_num.output"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"@public.no_repeat_opvar"
		"input_use_namespace"		"false"
	}
	"compare_1"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"equal"
		"input_execute"		"1.000000"
		"input1"		"@mod_added_num.output"
		"input2"		"0.000000"
	}
	"compare_2"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"equal"
		"input_execute"		"1.000000"
		"input1"		"@mod_added_num.output"
		"input2"		"1.000000"
	}
	"compare_3"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"equal"
		"input_execute"		"1.000000"
		"input1"		"@mod_added_num.output"
		"input2"		"2.000000"
	}
	"play_variation_1"
	{
		"execute_once"		"true"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"@public.variation_01_name"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@compare_1.output"
	}
	"play_variation_2"
	{
		"execute_once"		"true"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"@public.variation_02_name"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@compare_2.output"
	}
	"play_variation_3"
	{
		"execute_once"		"true"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"@public.variation_03_name"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@compare_3.output"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_random_music_entry_start"
			CResourceString m_StackKV = ""dota_random_music_entry_start"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"no_repeat_opvar"
			{
				"data_type"		"string"
				"value"		"dota_change_this_opvar_name"
			}
			"variation_01_name"
			{
				"data_type"		"string"
				"value"		"dota_change_this_sound_name"
			}
			"variation_02_name"
			{
				"data_type"		"string"
				"value"		"dota_change_this_sound_name"
			}
			"variation_03_name"
			{
				"data_type"		"string"
				"value"		"dota_change_this_sound_name"
			}
			"variation_override"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"use_random_variation"
			{
				"data_type"		"bool"
				"value"		"1.000000"
			}
		}
	}
	"get_no_repeat_opvar"
	{
		"execute_once"		"true"
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"@public.no_repeat_opvar"
		"input_use_namespace"		"false"
	}
	"random_variation_picker"
	{
		"execute_once"		"true"
		"operator"		"math_random_float"
		"execute_once"		"true"
		"input_execute"		"@public.use_random_variation"
		"input_min"		"@get_no_repeat_opvar.output_opvar_exists"
		"input_max"		"3.000000"
		"round_to_int"		"true"
	}
	"sum_stored_and_rand"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"add"
		"input_execute"		"1.000000"
		"input1"		"@get_no_repeat_opvar.output"
		"input2"		"@random_variation_picker.output"
	}
	"mod_added_num"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"mod"
		"input1"		"@sum_stored_and_rand.output"
		"input2"		"3"
	}
	"set_no_repeat_opvar"
	{
		"execute_once"		"true"
		"operator"		"opvar_set_float"
		"input"		"@mod_added_num.output"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"@public.no_repeat_opvar"
		"input_use_namespace"		"false"
	}
	"random_variation_switch"
	{
		"execute_once"		"true"
		"operator"		"ctrl_switch_float"
		"input_execute"		"1.000000"
		"input1"		"@public.variation_override"
		"input2"		"@random_variation_picker.output"
		"input_switch"		"@public.use_random_variation"
	}
	"compare_1"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"equal"
		"input_execute"		"1.000000"
		"input1"		"@random_variation_switch.output"
		"input2"		"0.000000"
	}
	"compare_2"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"equal"
		"input_execute"		"1.000000"
		"input1"		"@random_variation_switch.output"
		"input2"		"1.000000"
	}
	"compare_3"
	{
		"execute_once"		"true"
		"operator"		"math_float"
		"apply"		"equal"
		"input_execute"		"1.000000"
		"input1"		"@random_variation_switch.output"
		"input2"		"2.000000"
	}
	"play_variation_1"
	{
		"execute_once"		"true"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"@public.variation_01_name"
		"input_start"		"1.000000"
		"input_execute"		"@compare_1.output"
	}
	"play_variation_2"
	{
		"execute_once"		"true"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"@public.variation_02_name"
		"input_start"		"1.000000"
		"input_execute"		"@compare_2.output"
	}
	"play_variation_3"
	{
		"execute_once"		"true"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"@public.variation_03_name"
		"input_start"		"1.000000"
		"input_execute"		"@compare_3.output"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_start_3layer_delay"
			CResourceString m_StackKV = ""dota_start_3layer_delay"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"delay_time_low"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"delay_time_high"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"delay_time_tutorial_low"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"delay_time_tutorial_high"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"layer_01_soundevent"
			{
				"data_type"		"string"
				"value"		"None"
			}
			"layer_02_soundevent"
			{
				"data_type"		"string"
				"value"		"None"
			}
			"layer_03_soundevent"
			{
				"data_type"		"string"
				"value"		"None"
			}
			"output_dependency"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"output_entries_finished"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"explicit_stop"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
	"elapsed_3layer_time"
	{
		"operator"		"soundevent_get_info"
		"input_execute"		"1.000000"
	}
	"stop_time_compare"
	{
		"operator"		"math_float"
		"apply"		"less_than_or_equal"
		"input1"		"@elapsed_3layer_time.output_stop_elapsed_time"
		"input2"		"0.100000"
	}
	"set_dependency"
	{
		"operator"		"opvar_set_float"
		"input"		"@stop_time_compare.output"
		"input_operator_name"		"public"
		"input_field_name"		"output_dependency"
		"input_use_namespace"		"true"
	}
	"get_random_delay"
	{
		"operator"		"math_random_float"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"input_min"		"@public.delay_time_low"
		"input_max"		"@public.delay_time_high"
	}
	"get_random_delay_tutorial"
	{
		"operator"		"math_random_float"
		"execute_once"		"true"
		"input_execute"		"0.000000"
		"input_min"		"@public.delay_time_tutorial_low"
		"input_max"		"@public.delay_time_tutorial_high"
	}
	"tutorial_opvar_switch"
	{
		"operator"		"ctrl_switch_float"
		"input_execute"		"1.000000"
		"input1"		"@get_random_delay.output"
		"input2"		"@get_random_delay_tutorial.output"
		"input_switch"		"0.000000"
	}
	"time_elapsed_trigger"
	{
		"operator"		"math_float"
		"apply"		"greater_than_or_equal"
		"input1"		"@elapsed_3layer_time.output_elapsed_time"
		"input2"		"@tutorial_opvar_switch.output"
	}
	"time_elapsed_trigger_hold"
	{
		"operator"		"math_float"
		"apply"		"less_than_or_equal"
		"input1"		"@elapsed_3layer_time.output_elapsed_time"
		"input2"		"@tutorial_opvar_switch.output"
	}
	"explicit_stop_invert"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@public.explicit_stop"
	}
	"explicit_stop_min"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@explicit_stop_invert.output"
		"input2"		"@time_elapsed_trigger_hold.output"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@explicit_stop_min.output"
	}
	"layer1"
	{
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"@public.layer_01_soundevent"
		"input_start"		"1.000000"
		"input_execute"		"@time_elapsed_trigger.output"
	}
	"layer2"
	{
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"@public.layer_02_soundevent"
		"input_start"		"1.000000"
		"input_execute"		"@time_elapsed_trigger.output"
	}
	"layer3"
	{
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"@public.layer_03_soundevent"
		"input_start"		"1.000000"
		"input_execute"		"@time_elapsed_trigger.output"
	}
	"layer_end_compare_01"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@layer1.output_event_finished"
		"input2"		"@layer2.output_event_finished"
	}
	"layer_end_compare_02"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@layer_end_compare_01.output"
		"input2"		"@layer3.output_event_finished"
	}
	"set_entry_played_end"
	{
		"operator"		"opvar_set_float"
		"input"		"@layer_end_compare_02.output"
		"input_execute"		"1.000000"
		"input_operator_name"		"public"
		"input_field_name"		"output_entries_finished"
		"input_use_namespace"		"true"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_music_mainloop"
			CResourceString m_StackKV = ""dota_music_mainloop"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"get_mainloop_flag"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_music_mainloop_flag"
		"input_use_namespace"		"false"
	}
	"turn_debug_printing_on"
	{
		"execute_once"		"true"
		"operator"		"opvar_set_float"
		"input"		"0.000000"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"block_start"
	{
		"operator"		"sos_goto"
		"execute_once"		"true"
		"input_execute"		"@get_mainloop_flag.output"
		"input_goto_end"		"true"
	}
	"set_mainloop_flag"
	{
		"execute_once"		"true"
		"operator"		"opvar_set_float"
		"input"		"1.000000"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_music_mainloop_flag"
		"input_use_namespace"		"false"
	}
	"get_debug_printing_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"soundevent_get_info"
	{
		"operator"		"soundevent_get_info"
		"input_execute"		"1.000000"
	}
	"get_currently_playing_music"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"current_music"
		"input_use_namespace"		"false"
	}
	"import_opvar_smoothing"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"dota_opvar_smoothing_update"
		"operator_variables"
		{
			"live_opvar_name"
			{
				"value"		"music_intensity"
			}
			"smooth_opvar_name"
			{
				"value"		"dota_battle_score_smooth"
			}
			"spectator_score_opvar_name"
			{
				"value"		"music_spectator_priority"
			}
			"tutorial_opvar_name"
			{
				"value"		"music_intensity_tutorial"
			}
			"travel_distance_to_time_x1"
			{
				"value"		"0.100000"
			}
			"travel_distance_to_time_y2"
			{
				"value"		"0.001000"
			}
			"travel_distance_to_time_x2"
			{
				"value"		"5.000000"
			}
			"travel_distance_to_time_y2"
			{
				"value"		"0.600000"
			}
			"travel_distance_to_time_x3"
			{
				"value"		"10.000000"
			}
			"travel_distance_to_time_y3"
			{
				"value"		"3.000000"
			}
			"travel_distance_to_time_x4"
			{
				"value"		"30.000000"
			}
			"travel_distance_to_time_y4"
			{
				"value"		"2.750000"
			}
			"travel_distance_to_time_falling_x1"
			{
				"value"		"0.000000"
			}
			"travel_distance_to_time_falling_y1"
			{
				"value"		"0.100000"
			}
			"travel_distance_to_time_falling_x2"
			{
				"value"		"0.100000"
			}
			"travel_distance_to_time_falling_y2"
			{
				"value"		"0.500000"
			}
			"travel_distance_to_time_falling_x3"
			{
				"value"		"5.000000"
			}
			"travel_distance_to_time_falling_y3"
			{
				"value"		"6"
			}
			"travel_distance_to_time_falling_x4"
			{
				"value"		"15.000000"
			}
			"travel_distance_to_time_falling_y4"
			{
				"value"		"7"
			}
		}
	}
	"get_smooth_operator_val"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_battle_score_smooth"
		"input_use_namespace"		"false"
	}
	"remap_smooth_to_one_dot_zero"
	{
		"operator"		"math_curve_2d_4knot"
		"curve_type"		"linear"
		"input"		"@get_smooth_operator_val.output"
		"input_X1"		"0.000000"
		"input_Y1"		"0.000000"
		"input_X2"		"7.000000"
		"input_Y2"		"0.750000"
		"input_X3"		"25.000000"
		"input_Y3"		"1.000000"
		"input_X4"		"25.000000"
		"input_Y4"		"1.000000"
	}
	"set_music_intensity_remap_opvar"
	{
		"input"		"@remap_smooth_to_one_dot_zero.output"
		"operator"		"opvar_set_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_battle_score_smooth_remap"
		"input_use_namespace"		"false"
	}
	"battle_ramp_printer"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"delta_printer"
		"operator_variables"
		{
			"tracked_value"
			{
				"value"		"@remap_smooth_to_one_dot_zero.output"
			}
			"switch1"
			{
				"value"		"@get_debug_printing_opvar.output"
			}
			"switch2"
			{
				"value"		"0.000000"
			}
			"description"
			{
				"value"		"PRINT_BATTLE_RAMP"
			}
		}
	}
	"get_spectator_score_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_spectator_priority"
		"input_use_namespace"		"false"
	}
	"spectator_music_score_delta"
	{
		"operator"		"math_delta"
		"input"		"@get_spectator_score_opvar.output"
	}
	"spectator_music_score_delta_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"not_equal"
		"input1"		"@spectator_music_score_delta.output"
		"input2"		"0.000000"
	}
	"spectator_music_score_delta_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@spectator_music_score_delta_compare.output"
		"input2"		"@get_debug_printing_opvar.output"
	}
	"****PRINT_SPECTATOR_SCORE****"
	{
		"input_execute"		"@spectator_music_score_delta_compare_and.output"
		"operator"		"util_print_float"
		"input"		"@get_spectator_score_opvar.output"
	}
	"get_music_game_state"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_game_state"
		"input_use_namespace"		"false"
	}
	"music_state_in_game"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"greater_than_or_equal"
		"input1"		"@get_music_game_state.output"
		"input2"		"1.000000"
	}
	"ui_menu_music_stop"
	{
		"execute_once"		"false"
		"input_execute"		"@music_state_in_game.output"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		".music.ui_main"
	}
	"ui_startup_music_stop"
	{
		"execute_once"		"false"
		"input_execute"		"@music_state_in_game.output"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		".music.ui_startup"
	}
	"get_current_spectator_status"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_is_spectator"
		"input_use_namespace"		"false"
	}
	"get_current_pregame_time"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_pregame_time"
		"input_use_namespace"		"false"
	}
	"pregame_time_printer"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"delta_printer"
		"operator_variables"
		{
			"tracked_value"
			{
				"value"		"@get_current_pregame_time.output"
			}
			"switch1"
			{
				"value"		"@get_debug_printing_opvar.output"
			}
			"description"
			{
				"value"		"PRINT_PREGAME_TIME"
			}
		}
	}
	"spectator_music_current_music_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@get_currently_playing_music.output"
		"input2"		"0.000000"
	}
	"current_music_printer"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"delta_printer"
		"operator_variables"
		{
			"tracked_value"
			{
				"value"		"@get_currently_playing_music.output"
			}
			"switch1"
			{
				"value"		"@get_debug_printing_opvar.output"
			}
			"description"
			{
				"value"		"current_music_value"
			}
		}
	}
	"current_state_printer"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"delta_printer"
		"operator_variables"
		{
			"tracked_value"
			{
				"value"		"@get_music_game_state.output"
			}
			"switch1"
			{
				"value"		"@get_debug_printing_opvar.output"
			}
			"description"
			{
				"value"		"current_game_state"
			}
		}
	}
	"get_current_endgame"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_game_init"
		"input_use_namespace"		"false"
	}
	"in_game_printer"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"delta_printer"
		"operator_variables"
		{
			"tracked_value"
			{
				"value"		"@get_current_endgame.output"
			}
			"switch1"
			{
				"value"		"@get_debug_printing_opvar.output"
			}
			"description"
			{
				"value"		"in_game_state"
			}
		}
	}
	"spectator_music_should_play_hero_picker_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@get_music_game_state.output"
		"input2"		"2.000000"
	}
	"spectator_music_should_play_prehorn_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@get_music_game_state.output"
		"input2"		"4.000000"
	}
	"spectator_music_no_music_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@get_current_spectator_status.output"
		"input2"		"@spectator_music_current_music_compare.output"
	}
	"spectator_music_should_play_prehorn_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@spectator_music_no_music_and.output"
		"input2"		"@spectator_music_should_play_prehorn_compare.output"
	}
	"spectator_music_time_for_prehorn_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@get_current_pregame_time.output"
		"input2"		"70.000000"
	}
	"spectator_music_should_play_prehorn_time_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@spectator_music_should_play_prehorn_and.output"
		"input2"		"@spectator_music_time_for_prehorn_compare.output"
	}
	"play_prehorn_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.countdown"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@spectator_music_should_play_prehorn_time_and.output"
	}
	"**************PREHORN_STARTED**************"
	{
		"input_execute"		"0.000000"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
	"current_music_floor_max"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"max"
		"input1"		"@get_currently_playing_music.output"
		"input2"		"0.000000"
	}
	"set_currently_playing_music_floor"
	{
		"operator"		"opvar_set_float"
		"input"		"@current_music_floor_max.output"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"current_music"
		"input_use_namespace"		"false"
	}
	"music_type_delta"
	{
		"operator"		"math_delta"
		"input"		"@current_music_floor_max.output"
	}
	"music_type_delta_abs"
	{
		"input_execute"		"1.000000"
		"operator"		"math_func_float"
		"function"		"fabs"
		"input1"		"@music_type_delta.output"
	}
	"music_type_delta_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"greater_than"
		"input1"		"@music_type_delta_abs.output"
		"input2"		"0.000000"
	}
	"music_type_delta_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@music_type_delta_compare.output"
		"input2"		"@get_debug_printing_opvar.output"
	}
	"**************MUSIC_TYPE_PRINT**************"
	{
		"input_execute"		"@music_type_delta_compare_and.output"
		"operator"		"util_print_float"
		"input"		"@get_currently_playing_music.output"
	}
	"start_explore_timer"
	{
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@current_music_floor_max.output"
		"input2"		"0.000000"
	}
	"stop_explore_timer"
	{
		"operator"		"math_float"
		"apply"		"greater_than"
		"input1"		"@current_music_floor_max.output"
		"input2"		"1.000000"
	}
	"get_explore_played_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"explore_was_played"
		"input_use_namespace"		"false"
	}
	"stop_explore_timer_max"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input1"		"@stop_explore_timer.output"
		"input2"		"@get_explore_played_opvar.output"
	}
	"not_stopped"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@stop_explore_timer_max.output"
	}
	"not_stopped_min"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@start_explore_timer.output"
		"input2"		"@not_stopped.output"
	}
	"explore_timer_ramp"
	{
		"operator"		"util_timer_ramp"
		"input_start"		"@not_stopped_min.output"
		"input_stop"		"@stop_explore_timer_max.output"
		"input_start_value"		"5.000000"
		"input_end_value"		"0.000000"
		"input_duration"		"5.000000"
	}
	"other_music_playing_compare"
	{
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@explore_timer_ramp.output"
		"input2"		"0.000000"
	}
	"other_music_playing_compare_min"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@other_music_playing_compare.output"
		"input2"		"@not_stopped_min.output"
	}
	"is_in_main_game_state"
	{
		"operator"		"math_float"
		"apply"		"greater_than_or_equal"
		"input1"		"@get_music_game_state.output"
		"input2"		"5.000000"
	}
	"is_in_main_game_state_min"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@other_music_playing_compare_min.output"
		"input2"		"@is_in_main_game_state.output"
	}
	"set_explore_played_opvar"
	{
		"operator"		"opvar_set_float"
		"execute_once"		"false"
		"input"		"@is_in_main_game_state_min.output"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"explore_was_played"
		"input_use_namespace"		"false"
	}
	"play_explore_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.StateLaningMusic"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@is_in_main_game_state_min.output"
	}
	"state_battle_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_battle_music_request"
		"input_use_namespace"		"false"
	}
	"play_battle_epic_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.StateBattleMusic"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@state_battle_music_request_opvar.output"
	}
	"set_battle_played_opvar"
	{
		"operator"		"opvar_set_float"
		"input"		"0.000000"
		"input_execute"		"@state_battle_music_request_opvar.output"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_battle_music_request"
		"input_use_namespace"		"false"
	}
	"state_death_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_death_music_request"
		"input_use_namespace"		"false"
	}
	"play_death_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.killed"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@state_death_music_request_opvar.output"
	}
	"set_death_played_opvar"
	{
		"operator"		"opvar_set_float"
		"input"		"0.000000"
		"input_execute"		"@state_death_music_request_opvar.output"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_death_music_request"
		"input_use_namespace"		"false"
	}
	"state_ganked_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_probability_gank"
		"input_use_namespace"		"false"
	}
	"ganked_music_delta"
	{
		"operator"		"math_delta"
		"input"		"@state_ganked_music_request_opvar.output"
	}
	"ganked_music_delta_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"not_equal"
		"input1"		"@ganked_music_delta.output"
		"input2"		"0.000000"
	}
	"ganked_music_delta_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@ganked_music_delta_compare.output"
		"input2"		"@get_debug_printing_opvar.output"
	}
	"ganked_music_value_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"greater_than"
		"input1"		"@state_ganked_music_request_opvar.output"
		"input2"		"0.150000"
	}
	"ganked_music_player_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@ganked_music_delta_compare.output"
		"input2"		"@ganked_music_value_compare.output"
	}
	"ganked_music_player"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.StateGankedMusic"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@ganked_music_player_compare_and.output"
	}
	"state_win_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_win_music_request"
		"input_use_namespace"		"false"
	}
	"state_lose_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_lose_music_request"
		"input_use_namespace"		"false"
	}
	"state_prehorn_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_prehorn_music_request"
		"input_use_namespace"		"false"
	}
	"state_smoked_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_smoke_request"
		"input_use_namespace"		"false"
	}
	"state_smoked_music_end_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_smoke_end_state"
		"input_use_namespace"		"false"
	}
	"smoke_music_delta"
	{
		"operator"		"math_delta"
		"input"		"@state_smoked_music_request_opvar.output"
	}
	"smoke_popped_music_delta_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"not_equal"
		"input1"		"@smoke_music_delta.output"
		"input2"		"0.000000"
	}
	"smoke_popped_music_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@state_smoked_music_request_opvar.output"
		"input2"		"1.000000"
	}
	"smoke_popped_music_delta_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@smoke_popped_music_delta_compare.output"
		"input2"		"@smoke_popped_music_compare.output"
	}
	"play_smoke_popped_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.StateSmokePopped"
		"input_start"		"1.000000"
		"input_execute"		"@smoke_popped_music_delta_compare_and.output"
	}
	"smoke_ended_hero_music_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@state_smoked_music_end_opvar.output"
		"input2"		"3.000000"
	}
	"smoke_ended_hero_music_delta_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@smoke_popped_music_delta_compare.output"
		"input2"		"@smoke_ended_hero_music_compare.output"
	}
	"play_smoke_ended_hero_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.StateSmokeEndedHero"
		"input_start"		"1.000000"
		"input_execute"		"@smoke_ended_hero_music_delta_compare_and.output"
	}
	"smoke_ended_tower_music_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@state_smoked_music_end_opvar.output"
		"input2"		"2.000000"
	}
	"smoke_ended_tower_music_delta_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@smoke_popped_music_delta_compare.output"
		"input2"		"@smoke_ended_tower_music_compare.output"
	}
	"play_smoke_ended_tower_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.StateSmokeEndedTower"
		"input_start"		"1.000000"
		"input_execute"		"@smoke_ended_tower_music_delta_compare_and.output"
	}
	"smoke_ended_creep_music_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@state_smoked_music_end_opvar.output"
		"input2"		"1.000000"
	}
	"smoke_ended_creep_music_delta_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@smoke_popped_music_delta_compare.output"
		"input2"		"@smoke_ended_creep_music_compare.output"
	}
	"play_smoke_ended_creep_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.StateSmokeEndedCreep"
		"input_start"		"1.000000"
		"input_execute"		"@smoke_ended_creep_music_delta_compare_and.output"
	}
	"smoke_music_delta_printing_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@smoke_popped_music_delta_compare.output"
		"input2"		"@get_debug_printing_opvar.output"
	}
	"**************SMOKE_MUSIC_PRINT**************"
	{
		"input_execute"		"@smoke_music_delta_printing_compare_and.output"
		"operator"		"util_print_float"
		"input"		"@state_smoked_music_request_opvar.output"
	}
	"**************SMOKE_MUSIC_END_PRINT**************"
	{
		"input_execute"		"@smoke_music_delta_printing_compare_and.output"
		"operator"		"util_print_float"
		"input"		"@state_smoked_music_end_opvar.output"
	}
	"state_chasing_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_chasing_music_request"
		"input_use_namespace"		"false"
	}
	"state_chased_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_chased_music_request"
		"input_use_namespace"		"false"
	}
	"state_roshan_music_attack_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_roshan_attack_state"
		"input_use_namespace"		"false"
	}
	"state_roshan_music_health_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_roshan_health_state"
		"input_use_namespace"		"false"
	}
	"roshan_attack_print"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"delta_printer"
		"operator_variables"
		{
			"tracked_value"
			{
				"value"		"@state_roshan_music_attack_opvar.output"
			}
			"switch1"
			{
				"value"		"@get_debug_printing_opvar.output"
			}
			"description"
			{
				"value"		"print_roshan_attack"
			}
		}
	}
	"roshan_health_print"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"delta_printer"
		"operator_variables"
		{
			"tracked_value"
			{
				"value"		"@state_roshan_music_health_opvar.output"
			}
			"switch1"
			{
				"value"		"@get_debug_printing_opvar.output"
			}
			"description"
			{
				"value"		"roshan_health_print"
			}
		}
	}
	"roshan_music_attacked_delta"
	{
		"operator"		"math_delta"
		"input"		"@state_roshan_music_attack_opvar.output"
	}
	"roshan_music_attacked_delta_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"not_equal"
		"input1"		"@roshan_music_attacked_delta.output"
		"input2"		"0.000000"
	}
	"roshan_music_attacked_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@state_roshan_music_attack_opvar.output"
		"input2"		"1.000000"
	}
	"roshan_music_attacked_delta_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@roshan_music_attacked_compare.output"
		"input2"		"@roshan_music_attacked_delta_compare.output"
	}
	"roshan_music_attacked_health_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@state_roshan_music_health_opvar.output"
		"input2"		"100.000000"
	}
	"roshan_music_attacked_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@roshan_music_attacked_health_compare.output"
		"input2"		"@roshan_music_attacked_delta_compare_and.output"
	}
	"roshan_music_attacked_already_playing"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@get_currently_playing_music.output"
		"input2"		"128"
	}
	"roshan_music_attacked_greater_than_equal"
	{
		"operator"		"math_float"
		"apply"		"greater_than_or_equal"
		"input1"		"@get_currently_playing_music.output"
		"input2"		"256"
	}
	"roshan_music_attacked_playing_or"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input1"		"@roshan_music_attacked_greater_than_equal.output"
		"input2"		"@roshan_music_attacked_already_playing.output"
	}
	"roshan_music_attacked_play_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@roshan_music_attacked_playing_or.output"
		"input2"		"@roshan_music_attacked_compare_and.output"
	}
	"play_roshan_attacked_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.StateRoshanMusic"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@roshan_music_attacked_play_compare_and.output"
	}
	"roshan_music_killed_delta_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"not_equal"
		"input1"		"@roshan_music_attacked_delta.output"
		"input2"		"0.000000"
	}
	"roshan_music_killed_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@state_roshan_music_attack_opvar.output"
		"input2"		"2.000000"
	}
	"roshan_music_killed_delta_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@roshan_music_killed_delta_compare.output"
		"input2"		"@roshan_music_killed_compare.output"
	}
	"roshan_music_killed_health_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"less_than_or_equal"
		"input1"		"@state_roshan_music_health_opvar.output"
		"input2"		"5.000000"
	}
	"roshan_music_killed_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@roshan_music_killed_health_compare.output"
		"input2"		"@roshan_music_killed_delta_compare_and.output"
	}
	"play_roshan_killed_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.StateRoshanKilled"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@roshan_music_killed_compare_and.output"
	}
	"roshan_music_retreated_delta_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"not_equal"
		"input1"		"@roshan_music_attacked_delta.output"
		"input2"		"0.000000"
	}
	"roshan_music_retreated_compare"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@state_roshan_music_attack_opvar.output"
		"input2"		"0.000000"
	}
	"roshan_music_retreated_compare_and"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@roshan_music_retreated_compare.output"
		"input2"		"@roshan_music_retreated_delta_compare.output"
	}
	"roshan_music_stop"
	{
		"input_execute"		"@roshan_music_retreated_compare_and.output"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		".music.roshan"
	}
	"set_mainloop_flag_end"
	{
		"operator"		"opvar_set_float"
		"input_execute"		"@soundevent_get_info.output_stopped"
		"execute_once"		"true"
		"input"		"0.000000"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_music_mainloop_flag"
		"input_use_namespace"		"false"
	}
	"**************MUSIC_MAINLOOP_STOPPED**************"
	{
		"input_execute"		"0.000000"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
	"update_prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@soundevent_get_info.output_unstopped"
	}
	"stop_laning_with_extreme_prejudice"
	{
		"input_execute"		"@soundevent_get_info.output_stopped"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		".Music.Laning"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_statelaning"
			CResourceString m_StackKV = ""dota_statelaning"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"private_opvars"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"exec_counter"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
	"get_debug_printing_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"soundevent_get_info"
	{
		"operator"		"soundevent_get_info"
		"input_execute"		"1.000000"
	}
	"import_music_type_tracker_add"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"true"
		"import_stack"		"dota_music_type_tracker_add"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"131072"
			}
		}
	}
	"get_currently_playing_music_explore"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"current_music"
		"input_use_namespace"		"false"
	}
	"get_day_night_phase"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_is_daytime"
		"input_use_namespace"		"false"
	}
	"explore_day_variant"
	{
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@get_day_night_phase.output"
		"input2"		"1"
	}
	"explore_night_variant"
	{
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@get_day_night_phase.output"
		"input2"		"0"
	}
	"other_music_playing_compare"
	{
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@get_currently_playing_music_explore.output"
		"input2"		"131072"
	}
	"explore_day_night_variant_compare_day"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@other_music_playing_compare.output"
		"input2"		"@explore_day_variant.output"
	}
	"explore_day_night_variant_compare_night"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@other_music_playing_compare.output"
		"input2"		"@explore_night_variant.output"
	}
	"play_explore_entry_day"
	{
		"execute_once"		"true"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.LaningMusic_Picker_Day"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@explore_day_night_variant_compare_day.output"
	}
	"play_explore_entry_night"
	{
		"execute_once"		"true"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.LaningMusic_Picker_Night"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@explore_day_night_variant_compare_night.output"
	}
	"other_music_playing_compare_and"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@other_music_playing_compare.output"
		"input2"		"@get_debug_printing_opvar.output"
	}
	"import_music_type_tracker_remove"
	{
		"operator"		"sos_import_stack"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"import_stack"		"dota_music_type_tracker_remove"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"131072"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_statebattlemusic"
			CResourceString m_StackKV = ""dota_statebattlemusic"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"check_music_not_playing"
	{
		"operator"		"sos_import_stack"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"import_stack"		"dota_start_check_music_not_playing"
	}
	"play_battle_epic_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"soundevent_name"		"DOTAMusic.BattlePicker"
		"input_start"		"1.000000"
		"input_execute"		"@check_music_not_playing.output_music_not_playing"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_stateganked"
			CResourceString m_StackKV = ""dota_stateganked"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"test_soundevent_block"
	{
		"operator"		"soundevent_block_test"
		"execute_once"		"true"
		"match_this_event"		"true"
		"input_execute"		"1.000000"
	}
	"gank_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_probability_gank"
		"input_use_namespace"		"false"
	}
	"gank_music_sm_compare_less"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@gank_music_request_opvar.output"
		"input2"		"0.550000"
	}
	"gank_music_md_compare_greater"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"greater_than_or_equal"
		"input1"		"@gank_music_request_opvar.output"
		"input2"		"0.550000"
	}
	"gank_music_md_compare_less"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@gank_music_request_opvar.output"
		"input2"		"0.800000"
	}
	"gank_music_md_compare_min"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@gank_music_md_compare_greater.output"
		"input2"		"@gank_music_md_compare_less.output"
	}
	"gank_music_lg_compare_greater"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"greater_than_or_equal"
		"input1"		"@gank_music_request_opvar.output"
		"input2"		"0.800000"
	}
	"play_ganked_entry_sm"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.ganked_sml"
		"input_start"		"1.000000"
		"input_execute"		"@gank_music_sm_compare_less.output"
	}
	"play_ganked_entry_md"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.ganked_med"
		"input_start"		"1.000000"
		"input_execute"		"@gank_music_md_compare_min.output"
	}
	"play_ganked_entry_lg"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.ganked_lg"
		"input_start"		"1.000000"
		"input_execute"		"@gank_music_lg_compare_greater.output"
	}
	"get_debug_printing_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"**************GANKED_MUSIC_REQUESTED**************"
	{
		"input_execute"		"@get_debug_printing_opvar.output"
		"execute_once"		"true"
		"operator"		"util_print_float"
		"input"		"@gank_music_request_opvar.output"
	}
	"block_ganked_entries"
	{
		"operator"		"soundevent_block"
		"input_active"		"1.000000"
		"input_duration"		"10.000000"
		"match_substring"		"false"
		"match_event_name"		"DOTAMusic.StateGankedMusic"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_statesmokepopped"
			CResourceString m_StackKV = ""dota_statesmokepopped"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"check_music_not_playing"
	{
		"operator"		"sos_import_stack"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"import_stack"		"dota_start_check_music_not_playing"
	}
	"play_smoke_popped_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.smoke"
		"input_start"		"1.000000"
		"input_execute"		"@check_music_not_playing.output_music_not_playing"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_smokeendedhero"
			CResourceString m_StackKV = ""dota_smokeendedhero"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"check_music_not_playing"
	{
		"operator"		"sos_import_stack"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"import_stack"		"dota_start_check_music_not_playing"
	}
	"play_smoke_ended_hero_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.smoke_end_hero"
		"input_start"		"1.000000"
		"input_execute"		"@check_music_not_playing.output_music_not_playing"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_statesmokeendedtower"
			CResourceString m_StackKV = ""dota_statesmokeendedtower"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"check_music_not_playing"
	{
		"operator"		"sos_import_stack"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"import_stack"		"dota_start_check_music_not_playing"
	}
	"play_smoke_ended_tower_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.smoke_end_hero"
		"input_start"		"1.000000"
		"input_execute"		"@check_music_not_playing.output_music_not_playing"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_statesmokeendedcreep"
			CResourceString m_StackKV = ""dota_statesmokeendedcreep"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"check_music_not_playing"
	{
		"operator"		"sos_import_stack"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"import_stack"		"dota_start_check_music_not_playing"
	}
	"play_smoke_ended_creep_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.smoke_end_creep"
		"input_start"		"1.000000"
		"input_execute"		"@check_music_not_playing.output_music_not_playing"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_stateroshan"
			CResourceString m_StackKV = ""dota_stateroshan"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"check_music_not_playing"
	{
		"operator"		"sos_import_stack"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"import_stack"		"dota_start_check_music_not_playing"
	}
	"play_roshan_battlemusic_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.roshan"
		"input_start"		"1.000000"
		"input_execute"		"@check_music_not_playing.output_music_not_playing"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_roshankilled"
			CResourceString m_StackKV = ""dota_roshankilled"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"check_music_not_playing"
	{
		"operator"		"sos_import_stack"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"import_stack"		"dota_start_check_music_not_playing"
	}
	"play_roshan_battlemusic_end_entry"
	{
		"execute_once"		"false"
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"soundevent_name"		"valve_dota_001.music.roshan_end"
		"input_start"		"1.000000"
		"input_execute"		"@check_music_not_playing.output_music_not_playing"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_battle"
			CResourceString m_StackKV = ""dota_battle"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"set_battle_request_opvar"
	{
		"operator"		"opvar_set_float"
		"input"		"1.000000"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_battle_music_request"
		"input_use_namespace"		"false"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_battleend"
			CResourceString m_StackKV = ""dota_battleend"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"get_battle_choice_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_music_epic_no_repeat"
		"input_use_namespace"		"false"
	}
	"import_random_entry_start"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"dota_random_music_entry_start"
		"operator_variables"
		{
			"variation_01_name"
			{
				"value"		"valve_dota_001.music.battle_01_end"
			}
			"variation_02_name"
			{
				"value"		"valve_dota_001.music.battle_02_end"
			}
			"variation_03_name"
			{
				"value"		"valve_dota_001.music.battle_03_end"
			}
			"variation_override"
			{
				"value"		"@get_battle_choice_opvar.output"
			}
			"use_random_variation"
			{
				"value"		"0.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_battlepicker"
			CResourceString m_StackKV = ""dota_battlepicker"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"import_random_entry_start"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"dota_random_music_entry_random_start"
		"operator_variables"
		{
			"variation_01_name"
			{
				"value"		"valve_dota_001.music.battle_01"
			}
			"variation_02_name"
			{
				"value"		"valve_dota_001.music.battle_02"
			}
			"variation_03_name"
			{
				"value"		"valve_dota_001.music.battle_03"
			}
			"no_repeat_opvar"
			{
				"value"		"dota_music_epic_no_repeat"
			}
		}
	}
	"get_debug_printing_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"**************BATTLE MUSIC PICKER STARTED**************"
	{
		"execute_once"		"false"
		"execute_once"		"true"
		"input_execute"		"@get_debug_printing_opvar.output"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_laning_picker_day"
			CResourceString m_StackKV = ""dota_laning_picker_day"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"import_random_entry_start"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"dota_random_music_entry_random_start"
		"operator_variables"
		{
			"variation_01_name"
			{
				"value"		"DOTAMusic.Laning_01"
			}
			"variation_02_name"
			{
				"value"		"DOTAMusic.Laning_03"
			}
			"variation_03_name"
			{
				"value"		"DOTAMusic.Laning_02"
			}
			"no_repeat_opvar"
			{
				"value"		"dota_music_explore_no_repeat"
			}
		}
	}
	"get_debug_printing_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"**************EXPLORE MUSIC PICKER STARTED**************"
	{
		"execute_once"		"false"
		"input_execute"		"0.000000"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
	"remove_dependents"
	{
		"operator"		"soundevent_control"
		"input_clear_dependencies"		"1.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_laning_picker_night"
			CResourceString m_StackKV = ""dota_laning_picker_night"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"import_random_entry_start"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"dota_random_music_entry_random_start"
		"operator_variables"
		{
			"variation_01_name"
			{
				"value"		"DOTAMusic.Laning_01"
			}
			"variation_02_name"
			{
				"value"		"DOTAMusic.Laning_03"
			}
			"variation_03_name"
			{
				"value"		"DOTAMusic.Laning_02"
			}
			"no_repeat_opvar"
			{
				"value"		"dota_music_explore_night_no_repeat"
			}
		}
	}
	"get_debug_printing_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"**************EXPLORE MUSIC PICKER STARTED**************"
	{
		"execute_once"		"false"
		"input_execute"		"0.000000"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
	"remove_dependents"
	{
		"operator"		"soundevent_control"
		"input_clear_dependencies"		"1.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_laning_layered"
			CResourceString m_StackKV = ""dota_laning_layered"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"layer_01_soundevent"
			{
				"data_type"		"string"
				"value"		"valve_dota_001.music.laning_01_layer_01"
			}
			"layer_02_soundevent"
			{
				"data_type"		"string"
				"value"		"valve_dota_001.music.laning_01_layer_02"
			}
			"layer_03_soundevent"
			{
				"data_type"		"string"
				"value"		"valve_dota_001.music.laning_01_layer_03"
			}
			"track"
			{
				"data_type"		"string"
				"value"		"main"
			}
			"priority"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"priority_override"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"block_equal_priority"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"@public.track"
		"priority_override"		"false"
		"block_equal_priority"		"false"
		"input_priority"		"@public.priority"
	}
	"soundevent_get_info"
	{
		"operator"		"soundevent_get_info"
		"input_execute"		"1.000000"
	}
	"import_music_type_tracker_add"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"true"
		"import_stack"		"dota_music_type_tracker_add"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"2"
			}
		}
	}
	"import_start_3layer_delay"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_start_3layer_delay"
		"stopped_includes_dependencies"		"true"
		"operator_variables"
		{
			"delay_time_low"
			{
				"value"		"10.000000"
			}
			"delay_time_high"
			{
				"value"		"20.000000"
			}
			"delay_time_tutorial_low"
			{
				"value"		"3.000000"
			}
			"delay_time_tutorial_high"
			{
				"value"		"5.000000"
			}
			"layer_01_soundevent"
			{
				"value"		"@public.layer_01_soundevent"
			}
			"layer_02_soundevent"
			{
				"value"		"@public.layer_02_soundevent"
			}
			"layer_03_soundevent"
			{
				"value"		"@public.layer_03_soundevent"
			}
			"explicit_stop"
			{
				"value"		"@soundevent_get_info.output_stopped"
			}
		}
	}
	"import_music_type_tracker_remove"
	{
		"operator"		"sos_import_stack"
		"execute_once"		"true"
		"input_execute"		"@import_start_3layer_delay.output_entries_finished"
		"import_stack"		"dota_music_type_tracker_remove"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"2"
			}
		}
	}
	"get_debug_printing_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"printing_stop_test"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@get_debug_printing_opvar.output"
		"input2"		"@import_start_3layer_delay.output_entries_finished"
	}
	"**************LANING_MUSIC_KILLED**************"
	{
		"input_execute"		"@printing_stop_test.output"
		"execute_once"		"true"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
	"min_stopped_and_entries_stopped"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@soundevent_get_info.output_stopped"
		"input2"		"@import_start_3layer_delay.output_entries_finished"
	}
	"max_stopped_and_entries_stopped"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input1"		"@soundevent_get_info.output_stopped"
		"input2"		"@import_start_3layer_delay.output_entries_finished"
	}
	"stop_explore1"
	{
		"input_execute"		"@max_stopped_and_entries_stopped.output"
		"operator"		"track_stop"
		"input_track_name"		"explore1"
	}
	"stop_explore2"
	{
		"input_execute"		"@max_stopped_and_entries_stopped.output"
		"operator"		"track_stop"
		"input_track_name"		"explore2"
	}
	"stop_explore3"
	{
		"input_execute"		"@max_stopped_and_entries_stopped.output"
		"operator"		"track_stop"
		"input_track_name"		"explore3"
	}
	"invert_stop"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@min_stopped_and_entries_stopped.output"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@invert_stop.output"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_music_stereo"
			CResourceString m_StackKV = ""dota_update_music_stereo"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"volume_adjust"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"fade_out"
			{
				"data_type"		"float"
				"value"		"2.000000"
			}
			"fade_in"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"output_vsnd_finished"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"event_type"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"restart_time"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"mixgroup"
			{
				"data_type"		"string"
				"value"		"Music"
			}
			"convar_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
	"elapsed_time"
	{
		"operator"		"soundevent_get_info"
	}
	"source_info"
	{
		"operator"		"game_get_source_info"
		"source"		"emitter"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_exclusive"
	}
	"globals"
	{
		"operator"		"get_system_globals"
		"input_execute"		"1"
		"input_listener_index"		"0"
	}
	"mixer"
	{
		"operator"		"soundmixer_get_mixgroup"
		"mixgroup"		"@public.mixgroup"
		"input_vsnd"		"@get_vsnd.output"
		"input_class_name"		"@source_info.output_entity_classname"
		"input_is_player"		"0.000000"
		"input_soundlevel"		"65.000000"
		"input_event_type"		"@public.event_type"
	}
	"mixer_mixgraph"
	{
		"operator"		"soundmixer_set_vmix"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"snd_musicvolume_convar_floor"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input1"		"@globals.output_snd_musicvolume_convar"
		"input2"		"@public.convar_min"
	}
	"volume_fade_in"
	{
		"operator"		"math_remap_float"
		"input"		"@elapsed_time.output_elapsed_time"
		"input_min"		"0.000000"
		"input_max"		"@public.fade_in"
		"input_map_min"		"0.000000"
		"input_map_max"		"1.000000"
		"default_to_max"		"true"
	}
	"volume_accumulate"
	{
		"operator"		"math_accumulate12_float"
		"apply"		"mult"
		"input1"		"@public.volume"
		"input2"		"@snd_musicvolume_convar_floor.output"
		"input3"		"@mixer.output_volume"
		"input4"		"@globals.output_snd_gain_convar"
		"input5"		"@public.volume_adjust"
		"input6"		"@volume_fade_in.output"
		"input7"		"1.000000"
		"input8"		"1.000000"
		"input9"		"1.000000"
		"input10"		"1.000000"
		"input11"		"1.000000"
		"input12"		"1.000000"
	}
	"volume_fan"
	{
		"operator"		"util_float_to_speakers"
		"execute_once"		"false"
		"input"		"@volume_accumulate.output"
	}
	"speakers_limit"
	{
		"operator"		"math_speakers"
		"apply"		"mult"
		"left_front"		"1.000000"
		"right_front"		"1.000000"
		"center"		"0.000000"
		"lfe"		"0.000000"
		"left_rear"		"0.700000"
		"right_rear"		"0.700000"
		"input2"		"@volume_fan.output"
	}
	"mixer_trigger"
	{
		"operator"		"soundmixer_set_trigger"
		"input_trigger"		"@volume_accumulate.output"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"execute_once"		"false"
		"input_execute"		"1.000000"
		"input_start"		"@elapsed_time.output_unstopped"
		"input_fade_out"		"@public.fade_out"
		"input_speaker_volumes"		"@speakers_limit.output"
		"input_pitch"		"1.000000"
		"input_delay"		"0.000000"
		"input_memory_type"		"0"
		"input_restart_time"		"@public.restart_time"
	}
	"set_vsnd_status"
	{
		"operator"		"opvar_set_float"
		"input"		"@start_vsnd.output_vsnd_finished"
		"input_operator_name"		"public"
		"input_field_name"		"output_vsnd_finished"
		"input_use_namespace"		"true"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_music_stereo_random"
			CResourceString m_StackKV = ""dota_update_music_stereo_random"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"volume_adjust"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"fade_out"
			{
				"data_type"		"float"
				"value"		"2.000000"
			}
			"fade_in"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"output_vsnd_finished"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"event_type"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"weights"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"elapsed_time"
	{
		"operator"		"soundevent_get_info"
	}
	"source_info"
	{
		"operator"		"game_get_source_info"
		"source"		"emitter"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_weighted"
		"weights_field_name"		"public.weights"
	}
	"globals"
	{
		"operator"		"get_system_globals"
		"input_execute"		"1"
		"input_listener_index"		"0"
	}
	"mixer"
	{
		"operator"		"soundmixer_get_mixgroup"
		"mixgroup"		"Music"
		"input_vsnd"		"@get_vsnd.output"
		"input_class_name"		"@source_info.output_entity_classname"
		"input_is_player"		"0.000000"
		"input_soundlevel"		"65.000000"
		"input_event_type"		"@public.event_type"
	}
	"mixer_mixgraph"
	{
		"operator"		"soundmixer_set_vmix"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"snd_musicvolume_convar_floor"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input1"		"@globals.output_snd_musicvolume_convar"
		"input2"		"0.000000"
	}
	"volume_fade_in"
	{
		"operator"		"math_remap_float"
		"input"		"@elapsed_time.output_elapsed_time"
		"input_min"		"0.000000"
		"input_max"		"@public.fade_in"
		"input_map_min"		"0.000000"
		"input_map_max"		"1.000000"
		"default_to_max"		"true"
	}
	"get_ui_volume_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_dota_ui_vol"
		"input_use_namespace"		"false"
	}
	"filter_ui_vol"
	{
		"operator"		"math_filter_float"
		"input"		"@get_ui_volume_opvar.output"
		"input_max_velocity"		"0.850000"
	}
	"volume_accumulate"
	{
		"operator"		"math_accumulate12_float"
		"apply"		"mult"
		"input1"		"@public.volume"
		"input2"		"@snd_musicvolume_convar_floor.output"
		"input3"		"@mixer.output_volume"
		"input4"		"@globals.output_snd_gain_convar"
		"input5"		"@public.volume_adjust"
		"input6"		"@volume_fade_in.output"
		"input7"		"@filter_ui_vol.output"
		"input8"		"1.000000"
		"input9"		"1.000000"
		"input10"		"1.000000"
		"input11"		"1.000000"
		"input12"		"1.000000"
	}
	"volume_fan"
	{
		"operator"		"util_float_to_speakers"
		"execute_once"		"false"
		"input"		"@volume_accumulate.output"
	}
	"speakers_limit"
	{
		"operator"		"math_speakers"
		"apply"		"mult"
		"left_front"		"1.000000"
		"right_front"		"1.000000"
		"center"		"0.000000"
		"lfe"		"0.000000"
		"left_rear"		"0.700000"
		"right_rear"		"0.700000"
		"input2"		"@volume_fan.output"
	}
	"mixer_trigger"
	{
		"operator"		"soundmixer_set_trigger"
		"input_trigger"		"@volume_accumulate.output"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"execute_once"		"false"
		"input_execute"		"1.000000"
		"input_start"		"@elapsed_time.output_unstopped"
		"input_fade_out"		"@public.fade_out"
		"input_speaker_volumes"		"@speakers_limit.output"
		"input_pitch"		"1.000000"
		"input_delay"		"0.000000"
		"input_memory_type"		"0"
	}
	"set_vsnd_status"
	{
		"operator"		"opvar_set_float"
		"input"		"@start_vsnd.output_vsnd_finished"
		"input_operator_name"		"public"
		"input_field_name"		"output_vsnd_finished"
		"input_use_namespace"		"true"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_music_3layer"
			CResourceString m_StackKV = ""dota_update_music_3layer"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"remap_intensity_x1"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"remap_intensity_y1"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"remap_intensity_x2"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_intensity_y2"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_intensity_x3"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_intensity_y3"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_intensity_x4"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_intensity_y4"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"laning_master"
			{
				"data_type"		"string"
				"value"		"none"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"random_delay_opvar"
			{
				"data_type"		"string"
				"value"		"none"
			}
			"fade_in"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"fade_out"
			{
				"data_type"		"float"
				"value"		"2.000000"
			}
			"seed"
			{
				"data_type"		"float"
				"value"		"-1.000000"
			}
			"memory_type"
			{
				"data_type"		"uint64"
				"value"		"0"
			}
			"event_type"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundlevel"
			{
				"data_type"		"float"
				"value"		"100"
			}
			"track"
			{
				"data_type"		"string"
				"value"		"none"
			}
			"stops_others"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
		}
	}
	"get_vsnd_string"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"@public.track"
		"priority_override"		"0.000000"
		"block_equal_priority"		"0.000000"
		"input_priority"		"1.000000"
	}
	"globals"
	{
		"operator"		"get_system_globals"
		"input_execute"		"1"
		"input_listener_index"		"0"
	}
	"elapsed_time"
	{
		"operator"		"soundevent_get_info"
	}
	"source_info"
	{
		"operator"		"game_get_source_info"
		"source"		"emitter"
	}
	"mixer"
	{
		"operator"		"soundmixer_get_mixgroup"
		"mixgroup"		"Music"
		"input_vsnd_path"		"@get_vsnd_string.output"
		"input_class_name"		"@source_info.output_entity_classname"
		"input_is_player"		"false"
		"input_soundlevel"		"@public.soundlevel"
		"input_event_type"		"@public.event_type"
	}
	"mixer_mixgraph"
	{
		"operator"		"soundmixer_set_vmix"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"snd_musicvolume_convar_floor"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input1"		"@globals.output_snd_musicvolume_convar"
		"input2"		"0.000000"
	}
	"volume_fade_in"
	{
		"operator"		"math_remap_float"
		"input"		"@elapsed_time.output_elapsed_time"
		"input_min"		"0.000000"
		"input_max"		"@public.fade_in"
		"input_map_min"		"0.000000"
		"input_map_max"		"1.000000"
		"default_to_max"		"true"
	}
	"volume_fade_out"
	{
		"operator"		"math_remap_float"
		"input"		"@elapsed_time.output_stop_elapsed_time"
		"input_min"		"0.000000"
		"input_max"		"@public.fade_out"
		"input_map_min"		"0.000000"
		"input_map_max"		"1.000000"
		"default_to_max"		"false"
	}
	"volume_invert_fadeout"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@volume_fade_out.output"
	}
	"get_music_intensity_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_battle_score_smooth_remap"
		"input_use_namespace"		"false"
	}
	"get_spectator_status"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_is_spectator"
		"input_use_namespace"		"false"
	}
	"get_hero_levels"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_player_level_total"
		"input_use_namespace"		"false"
	}
	"spectator_hero_levels_remap"
	{
		"input_execute"		"@get_spectator_status.output"
		"operator"		"math_curve_2d_4knot"
		"curve_type"		"linear"
		"input"		"@get_hero_levels.output"
		"input_X1"		"40.000000"
		"input_Y1"		"0.000000"
		"input_X2"		"100.000000"
		"input_Y2"		"0.500000"
		"input_X3"		"200.000000"
		"input_Y3"		"0.850000"
		"input_X4"		"200.000000"
		"input_Y4"		"0.850000"
	}
	"intensity_add_offset"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@get_music_intensity_opvar.output"
		"input2"		"@spectator_hero_levels_remap.output"
	}
	"intensity_to_vol_remap"
	{
		"operator"		"math_curve_2d_4knot"
		"curve_type"		"linear"
		"input"		"@intensity_add_offset.output"
		"input_X1"		"@public.remap_intensity_x1"
		"input_Y1"		"@public.remap_intensity_y1"
		"input_X2"		"@public.remap_intensity_x2"
		"input_Y2"		"@public.remap_intensity_y2"
		"input_X3"		"@public.remap_intensity_x3"
		"input_Y3"		"@public.remap_intensity_y3"
		"input_X4"		"@public.remap_intensity_x4"
		"input_Y4"		"@public.remap_intensity_y4"
	}
	"dota_music_intensity_cap"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@intensity_to_vol_remap.output"
		"input2"		"1.000000"
	}
	"volume_accumulate"
	{
		"operator"		"math_accumulate12_float"
		"apply"		"mult"
		"input1"		"@snd_musicvolume_convar_floor.output"
		"input2"		"@globals.output_snd_gain_convar"
		"input3"		"1.000000"
		"input4"		"@volume_fade_in.output"
		"input5"		"1.000000"
		"input6"		"1.000000"
		"input7"		"@volume_invert_fadeout.output"
		"input8"		"@dota_music_intensity_cap.output"
		"input9"		"@mixer.output_volume"
		"input10"		"@public.volume"
		"input11"		"1.000000"
		"input12"		"1.000000"
	}
	"mixer_trigger"
	{
		"operator"		"soundmixer_set_trigger"
		"input_trigger"		"@volume_accumulate.output"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"speaker_volume_fan"
	{
		"operator"		"util_float_to_speakers"
		"input"		"@volume_accumulate.output"
	}
	"speakers_limit"
	{
		"operator"		"math_speakers"
		"apply"		"mult"
		"left_front"		"1.000000"
		"right_front"		"1.000000"
		"center"		"0.000000"
		"lfe"		"0.000000"
		"left_rear"		"0.700000"
		"right_rear"		"0.700000"
		"input2"		"@speaker_volume_fan.output"
	}
	"stop_hold"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@elapsed_time.output_stop_elapsed_time"
		"input2"		"@public.fade_out"
	}
	"stop_engage"
	{
		"operator"		"math_float"
		"apply"		"greater_than"
		"input1"		"@elapsed_time.output_stop_elapsed_time"
		"input2"		"0.000000"
	}
	"stop_engage_min"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@stop_engage.output"
		"input2"		"@public.stops_others"
	}
	"get_random_delay_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"@public.random_delay_opvar"
		"input_use_namespace"		"false"
	}
	"start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd_string.output"
		"execute_once"		"false"
		"input_execute"		"1.000000"
		"input_start"		"@stop_hold.output"
		"input_speaker_volumes"		"@speakers_limit.output"
		"input_pitch"		"1.000000"
		"input_delay"		"@get_random_delay_opvar.output"
		"input_memory_type"		"@public.memory_type"
	}
	"stop_hold_delta"
	{
		"operator"		"math_delta"
		"input"		"@elapsed_time.output_stopped"
	}
	"stop_hold_delta_cmp"
	{
		"input_execute"		"1.000000"
		"operator"		"math_float"
		"apply"		"not_equal"
		"input1"		"@stop_hold_delta.output"
		"input2"		"0.000000"
	}
	"stop_laning_master"
	{
		"execute_once"		"true"
		"input_execute"		"@stop_engage_min.output"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		"@public.laning_master"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_battle_music"
			CResourceString m_StackKV = ""dota_update_battle_music"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"volume_adjust"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"fade_in"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"fade_out"
			{
				"data_type"		"float"
				"value"		"1.500000"
			}
			"start_point"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"		"0.000000"
			}
			"end_point"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"		"100.000000"
			}
			"syncpoints"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
			}
			"restart_time"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
	"soundevent_get_info"
	{
		"operator"		"soundevent_get_info"
		"input_execute"		"1.000000"
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"main"
		"input_sync_track_name"		"main"
		"input_sync_field_name"		"public.syncpoints"
		"priority_override"		"false"
		"block_equal_priority"		"false"
		"input_priority"		"45"
	}
	"get_debug_printing_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"**************BATTLE MUSIC STARTED**************"
	{
		"execute_once"		"false"
		"execute_once"		"true"
		"input_execute"		"@get_debug_printing_opvar.output"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
	"private_opvars"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"exec_counter"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
	"import_music_type_tracker_add"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"true"
		"import_stack"		"dota_music_type_tracker_add"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"4"
			}
		}
	}
	"set_spectator_flag_opvar"
	{
		"operator"		"opvar_set_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"spectator_battle_music_flag"
		"input_use_namespace"		"false"
		"input"		"1.000000"
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume_adjust"
			{
				"value"		"@public.volume_adjust"
			}
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"@public.fade_in"
			}
			"fade_out"
			{
				"value"		"@public.fade_out"
			}
			"restart_time"
			{
				"value"		"@public.restart_time"
			}
		}
	}
	"invert_stop"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@import_dota_update_music_stereo.output_vsnd_finished"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@invert_stop.output"
	}
	"set_spectator_flag_opvar_end"
	{
		"operator"		"opvar_set_float"
		"input_execute"		"@import_dota_update_music_stereo.output_vsnd_finished"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"spectator_battle_music_flag"
		"input_use_namespace"		"false"
		"input"		"0.000000"
	}
	"import_music_type_tracker_remove"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"@import_dota_update_music_stereo.output_vsnd_finished"
		"import_stack"		"dota_music_type_tracker_remove"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"4"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_battle_end"
			CResourceString m_StackKV = ""dota_update_battle_end"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"volume_adjust"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"fade_in"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"fade_out"
			{
				"data_type"		"float"
				"value"		"2.000000"
			}
			"start_point"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"		"0.000000"
			}
			"end_point"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"		"100.000000"
			}
			"syncpoints"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
			}
		}
	}
	"set_spectator_flag_opvar_end"
	{
		"operator"		"opvar_set_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"spectator_battle_music_flag"
		"input_use_namespace"		"false"
		"input"		"0.000000"
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"main"
		"input_sync_track_name"		"main"
		"input_sync_field_name"		"public.syncpoints"
		"priority_override"		"false"
		"block_equal_priority"		"false"
		"input_priority"		"47"
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume_adjust"
			{
				"value"		"@public.volume_adjust"
			}
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"@public.fade_in"
			}
			"fade_out"
			{
				"value"		"@public.fade_out"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_countdown"
			CResourceString m_StackKV = ""dota_update_countdown"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"test_soundevent_block"
	{
		"operator"		"soundevent_block_test"
		"execute_once"		"true"
		"match_this_event"		"true"
		"input_execute"		"1.000000"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.750000"
			}
		}
	}
	"soundevent_get_info"
	{
		"operator"		"soundevent_get_info"
		"input_execute"		"1.000000"
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"main"
		"priority_override"		"true"
		"block_equal_priority"		"false"
		"input_priority"		"1"
	}
	"import_music_type_tracker_add"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"true"
		"import_stack"		"dota_music_type_tracker_add"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"4096"
			}
		}
	}
	"set_prehorn_opvar"
	{
		"operator"		"opvar_set_float"
		"execute_once"		"true"
		"input"		"1.000000"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_prehorn_playing"
		"input_use_namespace"		"false"
	}
	"select_music_stop"
	{
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		".music.ui_hero_select"
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"5.000000"
			}
			"fade_out"
			{
				"value"		"3.000000"
			}
		}
	}
	"block_prehorn_entries"
	{
		"operator"		"soundevent_block"
		"input_active"		"1.000000"
		"input_duration"		"0.500000"
		"match_substring"		"true"
		"match_event_name"		".music.countdown"
	}
	"import_music_type_tracker_remove"
	{
		"operator"		"sos_import_stack"
		"execute_once"		"true"
		"input_execute"		"@import_dota_update_music_stereo.output_vsnd_finished"
		"import_stack"		"dota_music_type_tracker_remove"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"4096"
			}
		}
	}
	"set_prehorn_opvar_end"
	{
		"operator"		"opvar_set_float"
		"execute_once"		"true"
		"input_execute"		"@import_dota_update_music_stereo.output_vsnd_finished"
		"input"		"0.000000"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_prehorn_playing"
		"input_use_namespace"		"false"
	}
	"stopped_in_some_way"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input1"		"@soundevent_get_info.output_stopped"
		"input2"		"@import_dota_update_music_stereo.output_vsnd_finished"
	}
	"block_countdown_end_hack"
	{
		"operator"		"soundevent_block"
		"input_execute"		"@stopped_in_some_way.output"
		"input_active"		"1.000000"
		"input_duration"		"10"
		"match_substring"		"true"
		"match_event_name"		".music.countdown"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "battle_end_countdown"
			CResourceString m_StackKV = ""battle_end_countdown"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.700000"
			}
		}
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"main"
		"priority_override"		"true"
		"block_equal_priority"		"false"
		"input_priority"		"47"
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"2.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_roshan"
			CResourceString m_StackKV = ""dota_update_roshan"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.700000"
			}
			"start_point"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"0.500000"
			}
			"end_point"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"1.000000"
			}
			"syncpoints"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"
				{
					"1"		"0.000000"
					"2"		"1.000000"
				}
			}
		}
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"main"
		"priority_override"		"false"
		"block_equal_priority"		"false"
		"input_priority"		"40"
	}
	"import_music_type_tracker_add"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"true"
		"import_stack"		"dota_music_type_tracker_add"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"128"
			}
		}
	}
	"import_opvar_smoothing"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"import_stack"		"dota_opvar_smoothing_update"
		"operator_variables"
		{
			"live_opvar_name"
			{
				"value"		"music_roshan_health_state"
			}
			"smooth_opvar_name"
			{
				"value"		"music_roshan_health_state_smooth"
			}
			"spectator_score_opvar_name"
			{
				"value"		"music_spectator_priority"
			}
			"tutorial_opvar_name"
			{
				"value"		"music_intensity_tutorial"
			}
			"travel_distance_to_time_x1"
			{
				"value"		"0.100000"
			}
			"travel_distance_to_time_y2"
			{
				"value"		"0.100000"
			}
			"travel_distance_to_time_x2"
			{
				"value"		"5.000000"
			}
			"travel_distance_to_time_y2"
			{
				"value"		"2.000000"
			}
			"travel_distance_to_time_x3"
			{
				"value"		"8.000000"
			}
			"travel_distance_to_time_y3"
			{
				"value"		"2.000000"
			}
			"travel_distance_to_time_x4"
			{
				"value"		"10.000000"
			}
			"travel_distance_to_time_y4"
			{
				"value"		"4.000000"
			}
			"travel_distance_to_time_falling_x1"
			{
				"value"		"0.100000"
			}
			"travel_distance_to_time_falling_y1"
			{
				"value"		"0.100000"
			}
			"travel_distance_to_time_falling_x2"
			{
				"value"		"5.000000"
			}
			"travel_distance_to_time_falling_y2"
			{
				"value"		"2.000000"
			}
			"travel_distance_to_time_falling_x3"
			{
				"value"		"8.000000"
			}
			"travel_distance_to_time_falling_y3"
			{
				"value"		"2.000000"
			}
			"travel_distance_to_time_falling_x4"
			{
				"value"		"10.000000"
			}
			"travel_distance_to_time_falling_y4"
			{
				"value"		"3.000000"
			}
		}
	}
	"get_smooth_operator_val"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_roshan_health_state_smooth"
		"input_use_namespace"		"false"
	}
	"get_attack_value_opvar"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_roshan_attack_state"
		"input_use_namespace"		"false"
	}
	"remap_health_to_vol"
	{
		"operator"		"math_curve_2d_4knot"
		"curve_type"		"linear"
		"input"		"@get_smooth_operator_val.output"
		"input_X1"		"10.000000"
		"input_Y1"		"1.000000"
		"input_X2"		"50.000000"
		"input_Y2"		"0.800000"
		"input_X3"		"75.000000"
		"input_Y3"		"0.700000"
		"input_X4"		"100.000000"
		"input_Y4"		"0.600000"
	}
	"fadetime_compare"
	{
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@get_attack_value_opvar.output"
		"input2"		"2.000000"
	}
	"fadetime_logic_switch"
	{
		"operator"		"ctrl_switch_float"
		"input1"		"3.000000"
		"input2"		"0.500000"
		"input_switch"		"@fadetime_compare.output"
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"volume_adjust"
			{
				"value"		"@remap_health_to_vol.output"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"@fadetime_logic_switch.output"
			}
		}
	}
	"vsnd_finished_invert"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@import_dota_update_music_stereo.output_vsnd_finished"
	}
	"import_music_type_tracker_remove"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"@import_dota_update_music_stereo.output_vsnd_finished"
		"import_stack"		"dota_music_type_tracker_remove"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"128"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_roshan_end"
			CResourceString m_StackKV = ""dota_update_roshan_end"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.800000"
			}
			"start_point"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"0.500000"
			}
			"end_point"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"1.000000"
			}
			"syncpoints"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"
				{
					"1"		"0.000000"
					"2"		"1.000000"
				}
			}
		}
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"main"
		"input_sync_track_name"		"main"
		"input_sync_field_name"		"public.syncpoints"
		"priority_override"		"false"
		"block_equal_priority"		"false"
		"input_priority"		"42"
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"2.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_smoke"
			CResourceString m_StackKV = ""dota_update_smoke"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.800000"
			}
			"start_point"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"0.500000"
			}
			"end_point"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"1.000000"
			}
		}
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"main"
		"input_sync_track_name"		"main"
		"input_sync_field_name"		"public.syncpoints"
		"priority_override"		"false"
		"block_equal_priority"		"false"
		"input_priority"		"5"
	}
	"import_music_type_tracker_add"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"true"
		"import_stack"		"dota_music_type_tracker_add"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"8192"
			}
		}
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"3.000000"
			}
		}
	}
	"vsnd_finished_invert"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@import_dota_update_music_stereo.output_vsnd_finished"
	}
	"import_music_type_tracker_remove"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"@import_dota_update_music_stereo.output_vsnd_finished"
		"import_stack"		"dota_music_type_tracker_remove"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"8192"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_smoke_end_hero"
			CResourceString m_StackKV = ""dota_update_smoke_end_hero"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.800000"
			}
			"start_point"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"0.500000"
			}
			"end_point"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"1.000000"
			}
		}
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"main"
		"input_sync_track_name"		"main"
		"input_sync_field_name"		"public.syncpoints"
		"priority_override"		"false"
		"block_equal_priority"		"false"
		"input_priority"		"10"
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"3.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_smoke_end"
			CResourceString m_StackKV = ""dota_update_smoke_end"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.800000"
			}
			"start_point"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"0.500000"
			}
			"end_point"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"1.000000"
			}
			"syncpoints"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"
				{
					"1"		"0.000000"
					"2"		"1.000000"
				}
			}
		}
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"main"
		"input_sync_track_name"		"main"
		"input_sync_field_name"		"public.syncpoints"
		"priority_override"		"false"
		"block_equal_priority"		"false"
		"input_priority"		"10"
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"3.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_not_worldmap"
			CResourceString m_StackKV = ""dota_not_worldmap"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"soundevent_name"
			{
				"data_type"		"string"
				"value"		"valve_dota_001.music.ui_main"
			}
		}
	}
	"soundevent_get_info"
	{
		"operator"		"soundevent_get_info"
		"input_execute"		"1.000000"
	}
	"get_worldmap_flag"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_worldmap_flag"
		"input_use_namespace"		"false"
	}
	"not_worldmap"
	{
		"operator"		"math_float"
		"apply"		"equal"
		"input1"		"@get_worldmap_flag.output"
		"input2"		"0.000000"
	}
	"get_restart_flag"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_not_restart_flag"
		"input_use_namespace"		"false"
	}
	"not_restart_not_worldmap"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@not_worldmap.output"
		"input2"		"@get_restart_flag.output"
	}
	"not_stopped_not_anything_else"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@not_restart_not_worldmap.output"
		"input2"		"@soundevent_get_info.output_unstopped"
	}
	"repeat_secondary_ui_entry"
	{
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"execute_once"		"true"
		"soundevent_name"		"@public.soundevent_name"
		"input_start"		"1.000000"
		"input_spawn_oneshots"		"1.000000"
		"input_execute"		"@not_stopped_not_anything_else.output"
	}
	"set_restart_flag"
	{
		"operator"		"opvar_set_float"
		"input"		"1.000000"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_not_restart_flag"
		"input_use_namespace"		"false"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_ui_startup"
			CResourceString m_StackKV = ""dota_update_ui_startup"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.750000"
			}
			"weights"
			{
				"data_type"		"float"
				"soundevent_data"		"true"
				"value"		"0"
			}
		}
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo_random"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"3.000000"
			}
		}
	}
	"startup_music_stop"
	{
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		".music."
	}
	"startup_music_stop_mainloop"
	{
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		"DOTAMusic.MainLoop"
	}
	"startup_music_stop_laning"
	{
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		"music.laning"
	}
	"set_worldmap_flag"
	{
		"operator"		"opvar_set_float"
		"input"		"0.000000"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"dota_worldmap_flag"
		"input_use_namespace"		"false"
	}
	"import_dota_not_world_map"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"@import_dota_update_music_stereo.output_vsnd_finished"
		"execute_once"		"true"
		"import_stack"		"dota_not_worldmap"
		"operator_variables"
		{
			"soundevent_name"
			{
				"value"		"valve_dota_001.music.ui_main"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_ui_main"
			CResourceString m_StackKV = ""dota_update_ui_main"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.500000"
			}
		}
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo_random"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"3.000000"
			}
		}
	}
	"import_dota_not_world_map"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"@import_dota_update_music_stereo.output_vsnd_finished"
		"execute_once"		"false"
		"import_stack"		"dota_not_worldmap"
		"operator_variables"
		{
			"soundevent_name"
			{
				"value"		"valve_dota_001.music.ui_main"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_hero_select"
			CResourceString m_StackKV = ""dota_update_hero_select"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.500000"
			}
			"mixgroup"
			{
				"data_type"		"string"
				"value"		"Music"
			}
		}
	}
	"test_soundevent_block"
	{
		"operator"		"soundevent_block_test"
		"execute_once"		"true"
		"match_this_event"		"true"
		"input_execute"		"1.000000"
	}
	"hero_select_info"
	{
		"operator"		"soundevent_get_info"
		"input_execute"		"1.000000"
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"main"
		"priority_override"		"false"
		"block_equal_priority"		"false"
		"input_priority"		"1"
	}
	"init_music_TEST"
	{
		"execute_once"		"true"
		"operator"		"opvar_set_float"
		"input"		"0"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"current_music"
		"input_use_namespace"		"false"
	}
	"get_spectator_music_convar"
	{
		"operator"		"convar_get"
		"execute_once"		"true"
		"convar"		"dota_music_enable_spectator_mode"
	}
	"get_current_spectator_status"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_is_spectator"
		"input_use_namespace"		"false"
	}
	"get_current_spectator_status_invert"
	{
		"operator"		"math_float"
		"execute_once"		"true"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@get_current_spectator_status.output"
	}
	"check_play_spectator_music"
	{
		"operator"		"math_float"
		"execute_once"		"true"
		"apply"		"min"
		"input1"		"@get_spectator_music_convar.output"
		"input2"		"@get_current_spectator_status.output"
	}
	"check_play_music_not_spectator"
	{
		"operator"		"math_float"
		"execute_once"		"true"
		"apply"		"max"
		"input1"		"@check_play_spectator_music.output"
		"input2"		"@get_current_spectator_status_invert.output"
	}
	"hero_select_music_stop"
	{
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		".music.ui_hero_select"
	}
	"import_music_type_tracker_add"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"true"
		"import_stack"		"dota_music_type_tracker_add"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"65536"
			}
		}
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"2.000000"
			}
			"mixgroup"
			{
				"value"		"@public.mixgroup"
			}
		}
	}
	"block_hero_picker_entries"
	{
		"operator"		"soundevent_block"
		"input_active"		"1.000000"
		"input_duration"		"3.000000"
		"match_substring"		"true"
		"match_event_name"		".music.ui_hero_select"
	}
	"hero_select_end_and_stop_max"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input1"		"@hero_select_info.output_stopped"
		"input2"		"@import_dota_update_music_stereo.output_vsnd_finished"
	}
	"get_vsnd_finished_invert"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@import_dota_update_music_stereo.output_vsnd_finished"
	}
	"import_music_type_tracker_remove"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"@hero_select_end_and_stop_max.output"
		"import_stack"		"dota_music_type_tracker_remove"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"65536"
			}
		}
	}
	"get_spectator_music_convar_end"
	{
		"input_execute"		"@hero_select_end_and_stop_max.output"
		"operator"		"convar_get"
		"execute_once"		"true"
		"convar"		"dota_music_enable_spectator_mode"
	}
	"get_current_spectator_status_end"
	{
		"operator"		"opvar_get_float"
		"input_execute"		"@hero_select_end_and_stop_max.output"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_is_spectator"
		"input_use_namespace"		"false"
	}
	"check_play_spectator_music_countdown"
	{
		"operator"		"math_float"
		"input_execute"		"1.000000"
		"apply"		"min"
		"input1"		"@get_spectator_music_convar_end.output"
		"input2"		"@get_current_spectator_status_end.output"
	}
	"get_game_state"
	{
		"operator"		"opvar_get_float"
		"input_execute"		"@check_play_spectator_music_countdown.output"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_game_state"
		"input_use_namespace"		"false"
	}
	"check_not_main_game"
	{
		"operator"		"math_float"
		"input_execute"		"@check_play_spectator_music_countdown.output"
		"apply"		"less_than"
		"input1"		"@get_game_state.output"
		"input2"		"5.000000"
	}
	"start_music_prehorn"
	{
		"operator"		"soundevent_start"
		"econ_replacement"		"dota2"
		"execute_once"		"true"
		"input_execute"		"@check_not_main_game.output"
		"input_start"		"1"
		"input_spawn_oneshots"		"1.000000"
		"soundevent_name"		"valve_dota_001.music.countdown"
	}
	"remove_dependents"
	{
		"operator"		"soundevent_control"
		"input_execute"		"@hero_select_end_and_stop_max.output"
	}
	"**************HERO_SELECT_KILLED**************"
	{
		"execute_once"		"true"
		"input_execute"		"0.000000"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
	"**************HERO_SELECT_ENDED**************"
	{
		"execute_once"		"true"
		"input_execute"		"0.000000"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_killed"
			CResourceString m_StackKV = ""dota_update_killed"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.800000"
			}
		}
	}
	"test_soundevent_block"
	{
		"operator"		"soundevent_block_test"
		"execute_once"		"true"
		"match_this_event"		"true"
		"input_execute"		"1.000000"
	}
	"elapsed_time"
	{
		"operator"		"soundevent_get_info"
	}
	"music_track_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"dead"
		"priority_override"		"false"
		"block_equal_priority"		"false"
		"input_priority"		"55"
	}
	"get_debug_printing_opvar"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"**************TRANSITION TO DEATH MUSIC STARTED**************"
	{
		"execute_once"		"true"
		"input_execute"		"@get_debug_printing_opvar.output"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
	"limit_sound_laning"
	{
		"operator"		"soundevent_limiter"
		"execute_once"		"true"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		".music.laning"
	}
	"limit_sound_battle"
	{
		"operator"		"soundevent_limiter"
		"execute_once"		"true"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		".music.battle"
	}
	"stop_main_track"
	{
		"operator"		"track_stop"
		"input_track_name"		"main"
	}
	"import_music_type_tracker_add"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"true"
		"import_stack"		"dota_music_type_tracker_add"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"16"
			}
		}
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"4.000000"
			}
		}
	}
	"block_entries"
	{
		"operator"		"soundevent_block"
		"input_active"		"1.000000"
		"input_duration"		"0.500000"
		"match_substring"		"true"
		"match_event_name"		".music.killed"
	}
	"vsnd_finished_invert"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@import_dota_update_music_stereo.output_vsnd_finished"
	}
	"import_music_type_tracker_remove"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"@import_dota_update_music_stereo.output_vsnd_finished"
		"import_stack"		"dota_music_type_tracker_remove"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"16"
			}
		}
	}
	"print_death_music_min"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@get_debug_printing_opvar.output"
		"input2"		"@import_dota_update_music_stereo.output_vsnd_finished"
	}
	"**************DEATH MUSIC KILLED**************"
	{
		"execute_once"		"false"
		"input_execute"		"@print_death_music_min.output"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_ganked_music"
			CResourceString m_StackKV = ""dota_update_ganked_music"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"remap_vol_x1"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_vol_y1"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_vol_x2"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_vol_y2"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_vol_x3"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_vol_y3"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_vol_x4"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"remap_vol_y4"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.800000"
			}
		}
	}
	"gank_music_request_opvar"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"music_probability_gank"
		"input_index"		"0.000000"
		"input_use_namespace"		"false"
	}
	"remap_gank_opvar_value"
	{
		"operator"		"math_curve_2d_4knot"
		"curve_type"		"linear"
		"input"		"@gank_music_request_opvar.output"
		"input_X1"		"@public.remap_vol_x1"
		"input_Y1"		"@public.remap_vol_y1"
		"input_X2"		"@public.remap_vol_x2"
		"input_Y2"		"@public.remap_vol_y2"
		"input_X3"		"@public.remap_vol_x3"
		"input_Y3"		"@public.remap_vol_y3"
		"input_X4"		"@public.remap_vol_x4"
		"input_Y4"		"@public.remap_vol_y4"
	}
	"import_dota_update_music_stereo"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_update_music_stereo_random"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"volume_adjust"
			{
				"value"		"@remap_gank_opvar_value.output"
			}
			"fade_in"
			{
				"value"		"0.000000"
			}
			"fade_out"
			{
				"value"		"3.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_music_death_request"
			CResourceString m_StackKV = ""dota_music_death_request"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"set_death_request_opvar"
	{
		"operator"		"opvar_set_float"
		"input"		"1.000000"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"state_death_music_request"
		"input_use_namespace"		"false"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_music_respawn"
			CResourceString m_StackKV = ""dota_music_respawn"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"0.800000"
			}
		}
	}
	"import_music_type_tracker_add"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"true"
		"import_stack"		"dota_music_type_tracker_add"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"32"
			}
		}
	}
	"stop_death_track"
	{
		"execute_once"		"true"
		"operator"		"track_stop"
		"input_track_name"		"dead"
	}
	"stop_stinger_track"
	{
		"execute_once"		"true"
		"operator"		"track_stop"
		"input_track_name"		"stinger_high_priority"
	}
	"get_debug_printing_opvar"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"true"
		"input_stack_name"		"dota_music_opvars"
		"input_operator_name"		"opvars"
		"input_field_name"		"debug_print_music"
		"input_use_namespace"		"false"
	}
	"**************RESPAWN MUSIC STARTED**************"
	{
		"execute_once"		"true"
		"input_execute"		"@get_debug_printing_opvar.output"
		"operator"		"util_print_float"
		"input"		"1.000000"
	}
	"import_dota_src1_2d"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"1.000000"
		"execute_once"		"false"
		"import_stack"		"dota_src1_2d"
		"operator_variables"
		{
			"volume"
			{
				"value"		"@public.volume"
			}
			"mixgroup"
			{
				"value"		"Stingers"
			}
			"game_convar_index"
			{
				"value"		"0.000000"
			}
		}
	}
	"import_music_type_tracker_remove"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"@import_dota_src1_2d.output_vsnd_finished"
		"import_stack"		"dota_music_type_tracker_remove"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"32"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_music_stinger_stoptracks"
			CResourceString m_StackKV = ""dota_music_stinger_stoptracks"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"track1"
			{
				"data_type"		"string"
				"value"		"dead"
			}
			"track2"
			{
				"data_type"		"string"
				"value"		"stinger_high_priority"
			}
		}
	}
	"stop_death_track"
	{
		"execute_once"		"true"
		"operator"		"track_stop"
		"input_track_name"		"@public.track1"
	}
	"stop_stinger_track"
	{
		"execute_once"		"true"
		"operator"		"track_stop"
		"input_track_name"		"@public.track2"
	}
	"import_2d_stack"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"dota_src1_2d"
		"operator_variables"
		{
			"vsnd_files"
			{
				"value"		"@public.vsnd_files"
			}
			"volume"
			{
				"value"		"@public.volume"
			}
			"pitch"
			{
				"value"		"1.000000"
			}
			"event_type"
			{
				"value"		"0"
			}
			"memory_type"
			{
				"value"		"0"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_music_test_import"
			CResourceString m_StackKV = ""dota_music_test_import"
{
	"_system_properties"
	{
		"display_game"		"dota2"
		"display_group"		"utility"
	}
	"private_opvars"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"execute"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
	"import_music_type_tracker_add"
	{
		"operator"		"sos_import_stack"
		"input_execute"		"@private_opvars.execute"
		"execute_once"		"true"
		"import_stack"		"dota_music_type_tracker_add"
		"operator_variables"
		{
			"music_value"
			{
				"value"		"4"
			}
		}
	}
	"hold_invert"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@private_opvars.execute"
	}
	"set_music_not_playing_opvar"
	{
		"operator"		"opvar_set_float"
		"input"		"1.000000"
		"input_operator_name"		"private_opvars"
		"input_field_name"		"execute"
		"input_use_namespace"		"true"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@hold_invert.output"
	}
}
"
		}
	]
}
