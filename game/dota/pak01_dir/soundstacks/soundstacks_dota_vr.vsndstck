VSoundStackScript_t
{
	Struct m_SoundStacks[5] =
	[
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_default_multi"
			CResourceString m_StackKV = ""dota_update_default_multi"
{
	"_system_properties"
	{
		"display_game"		"dotaVR"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"mixgroup"
			{
				"data_type"		"string"
				"value"		"USEPATHMATCH"
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_rand_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_rand_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_fade_in"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_fade_out"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_move_vel"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_move_vol"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_move_filter_vel"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_falloff_min"
			{
				"data_type"		"float"
				"value"		"750.000000"
			}
			"volume_falloff_max"
			{
				"data_type"		"float"
				"value"		"4500.000000"
			}
			"volume_atten"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"pitch"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"pitch_rand_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"pitch_rand_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundlevel"
			{
				"data_type"		"float"
				"value"		"70"
			}
			"soundlevel_rand_min"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"soundlevel_rand_max"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"delay"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"rand_delay_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"rand_delay_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"num_entities"
			{
				"data_type"		"float"
				"value"		"8.000000"
			}
			"entities"
			{
				"data_type"		"float"
				"value"
				{
					"value"		"0.000000"
					"value"		"1.000000"
					"value"		"2.000000"
					"value"		"3.000000"
					"value"		"4.000000"
					"value"		"5.000000"
					"value"		"6.000000"
					"value"		"7.000000"
				}
			}
			"distance_max"
			{
				"data_type"		"float"
				"value"		"-1.000000"
			}
			"spread_radius"
			{
				"data_type"		"float"
				"value"		"300"
			}
			"send_dsp"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"limiter_on"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_event_name"
			{
				"data_type"		"string"
				"value"		"0"
			}
			"limiter_max"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_match_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_match_entity"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_match_substring"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_stop_oldest"
			{
				"data_type"		"bool"
				"value"		"true"
			}
			"limiter_match_event_duration"
			{
				"data_type"		"float"
				"value"		"-1.000000"
			}
			"stop_at_time"
			{
				"data_type"		"float"
				"value"		"-1"
			}
			"event_type"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"dont_stop_layers"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"soundevent_layer2_on"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundevent_layer2"
			{
				"data_type"		"string"
				"value"		"Default.Null"
			}
			"soundevent_layer3_on"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundevent_layer3"
			{
				"data_type"		"string"
				"value"		"Default.Null"
			}
			"block_duration"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"test_soundevent_block"
	{
		"operator"		"soundevent_block_test"
		"execute_once"		"true"
		"input_execute"		"@public.block_duration"
		"match_this_event"		"true"
	}
	"set_soundevent_block"
	{
		"operator"		"soundevent_block"
		"execute_once"		"true"
		"input_execute"		"@public.block_duration"
		"input_duration"		"@public.block_duration"
		"match_this_event"		"true"
	}
	"soundevent_limit_type_switch"
	{
		"operator"		"ctrl_switch_float"
		"input_switch"		"@public.limiter_match_type"
		"input1"		"-1"
		"input2"		"@public.event_type"
	}
	"soundevent_limit"
	{
		"execute_once"		"true"
		"operator"		"soundevent_limiter"
		"input_execute"		"@public.limiter_on"
		"input_max_events"		"@public.limiter_max"
		"match_event_type"		"@soundevent_limit_type_switch.output"
		"match_entity"		"@public.limiter_match_entity"
		"match_substring"		"@public.limiter_match_substring"
		"match_event_name"		"@public.limiter_event_name"
		"stop_oldest"		"@public.limiter_stop_oldest"
		"match_duration_type"		"greater_than_or_equal"
		"match_event_duration"		"@public.limiter_match_event_duration"
	}
	"globals"
	{
		"operator"		"get_system_globals"
		"input_execute"		"1"
		"input_listener_index"		"0"
	}
	"source_info"
	{
		"operator"		"game_get_source_info"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"volume_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"1.000000"
		"input_rand_min"		"@public.volume_rand_min"
		"input_rand_max"		"@public.volume_rand_max"
	}
	"level_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"@public.soundlevel"
		"input_rand_min"		"@public.soundlevel_rand_min"
		"input_rand_max"		"@public.soundlevel_rand_max"
	}
	"pitch_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"@public.pitch"
		"input_rand_min"		"@public.pitch_rand_min"
		"input_rand_max"		"@public.pitch_rand_max"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_exclusive"
	}
	"mixer"
	{
		"operator"		"soundmixer_get_mixgroup"
		"execute_once"		"true"
		"mixgroup"		"@public.mixgroup"
		"input_vsnd"		"@get_vsnd.output"
		"input_class_name"		"@source_info.output_entity_classname"
		"input_is_player"		"false"
		"input_soundlevel"		"@public.soundlevel"
		"input_event_type"		"@public.event_type"
	}
	"mixer_mixgraph"
	{
		"operator"		"soundmixer_set_vmix"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"level_apply_mixer"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@mixer.output_level"
		"input2"		"@level_random.output"
	}
	"delay_random"
	{
		"operator"		"math_random_float"
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"input_min"		"@public.rand_delay_min"
		"input_max"		"@public.rand_delay_max"
	}
	"delay_total"
	{
		"operator"		"math_float"
		"execute_once"		"true"
		"apply"		"add"
		"input1"		"@public.delay"
		"input2"		"@delay_random.output"
	}
	"listener_pos_xy"
	{
		"operator"		"math_float3"
		"apply"		"mult"
		"input1"		"@globals.output_listener_position"
		"input2"		"[ 1.0, 1.0, 1.0]"
	}
	"get_entity"
	{
		"operator"		"opvar_get_float"
		"execute_once"		"false"
		"check_event_data"		"false"
		"input_index"		"@goto_operator.output_goto_count"
		"input_operator_name"		"public"
		"input_field_name"		"entities"
		"input_use_namespace"		"false"
		"array_selection_type"		"index"
	}
	"get_entity_info"
	{
		"input_execute"		"1"
		"operator"		"game_entity_info"
		"input_entity_index"		"@get_entity.output"
		"input_default_local_position"		"@globals.output_listener_front"
	}
	"source_pos_xy"
	{
		"operator"		"math_float3"
		"apply"		"mult"
		"input1"		"@get_entity_info.output_position"
		"input2"		"[ 1.0, 1.0, 1.0]"
	}
	"distance_to_source"
	{
		"operator"		"calc_distance"
		"input_position1"		"@source_pos_xy.output"
		"input_position2"		"@listener_pos_xy.output"
	}
	"import_dist_limit"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"core_distance_limiter"
		"execute_once"		"true"
		"operator_variables"
		{
			"distance"
			{
				"data_type"		"float"
				"value"		"@distance_to_source.output"
			}
			"distance_max"
			{
				"data_type"		"float"
				"value"		"@public.distance_max"
			}
		}
	}
	"volume_falloff_linear"
	{
		"operator"		"math_remap_float"
		"input"		"@distance_to_source.output"
		"input_min"		"@public.volume_falloff_min"
		"input_max"		"@public.volume_falloff_max"
		"input_map_min"		"1.000000"
		"input_map_max"		"0.010000"
		"default_to_max"		"false"
	}
	"volume_fade_in"
	{
		"operator"		"math_remap_float"
		"input"		"@get_event_info.output_elapsed_time"
		"input_min"		"0.000000"
		"input_max"		"@public.volume_fade_in"
		"input_map_min"		"0.050000"
		"input_map_max"		"1.000000"
		"default_to_max"		"true"
	}
	"volume_accumulate"
	{
		"operator"		"math_accumulate12_float"
		"apply"		"mult"
		"input1"		"@volume_random.output"
		"input2"		"@mixer.output_volume"
		"input3"		"@public.volume"
		"input4"		"@volume_falloff_linear.output"
		"input5"		"@volume_fade_in.output"
		"input6"		"@globals.output_snd_gain_convar"
		"input7"		"1.000000"
		"input8"		"1.000000"
		"input9"		"@public.volume_atten"
		"input10"		"@globals.output_snd_gamesound_convar"
		"input11"		"1.000000"
		"input12"		"1.000000"
	}
	"mixer_trigger"
	{
		"operator"		"soundmixer_set_trigger"
		"input_trigger"		"@volume_accumulate.output"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"speakers_spatialize"
	{
		"operator"		"calc_spatialize_vr"
		"input_master_volume"		"@volume_accumulate.output"
		"input_distance"		"@distance_to_source.output"
		"input_source_position"		"@get_entity_info.output_position"
		"input_listener_position"		"@globals.output_listener_position"
		"input_listener_left"		"@globals.output_listener_left"
		"input_listener_forward"		"@globals.output_listener_forward"
		"input_listener_up"		"@globals.output_listener_up"
		"input_spread_min"		"0"
		"input_spread_max"		"30"
		"input_spread_max_value"		"0.300000"
		"input_spread_min_value"		"0.000000"
	}
	"accumulate_speakers"
	{
		"operator"		"accumulate_indexed_speakers"
		"input_index"		"@goto_operator.output_goto_count"
		"input"		"@speakers_spatialize.output"
	}
	"goto_operator"
	{
		"operator"		"sos_goto"
		"input_execute"		"1"
		"input_goto_operator"		"get_entity"
		"input_max_loop_count"		"@public.num_entities"
	}
	"stop_time_off"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@public.stop_at_time"
		"input2"		"0"
	}
	"stop_time_not_elapsed"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@get_event_info.output_elapsed_time"
		"input2"		"@public.stop_at_time"
	}
	"stop_time_or"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input2"		"@stop_time_off.output"
		"input1"		"@stop_time_not_elapsed.output"
	}
	"stop_time_and_unstopped"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input2"		"@stop_time_or.output"
		"input1"		"@get_event_info.output_unstopped"
	}
	"start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"execute_once"		"false"
		"input_execute"		"1.000000"
		"input_start"		"@stop_time_and_unstopped.output"
		"input_speaker_volumes"		"@accumulate_speakers.output"
		"input_pitch"		"@pitch_random.output"
		"input_delay"		"@delay_total.output"
		"input_fade_out"		"@public.volume_fade_out"
		"input_memory_type"		"@public.memory_type"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_update_default"
			CResourceString m_StackKV = ""dota_update_default"
{
	"_system_properties"
	{
		"display_game"		"dotaVR"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"mixgroup"
			{
				"data_type"		"string"
				"value"		"USEPATHMATCH"
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_rand_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_rand_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_fade_in"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_fade_out"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_move_vel"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_move_vol"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_move_filter_vel"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_falloff_min"
			{
				"data_type"		"float"
				"value"		"750.000000"
			}
			"volume_falloff_max"
			{
				"data_type"		"float"
				"value"		"4500.000000"
			}
			"volume_atten"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_use_FOW"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_FOW_filter_vel"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_FOW_radius"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"pitch"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"pitch_rand_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"pitch_rand_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundlevel"
			{
				"data_type"		"float"
				"value"		"70"
			}
			"soundlevel_rand_min"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"soundlevel_rand_max"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"delay"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"rand_delay_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"rand_delay_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"position"
			{
				"data_type"		"float3"
				"value"		"[0.0, 0.0, 0.0]"
			}
			"use_entity_position"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"distance_max"
			{
				"data_type"		"float"
				"value"		"-1.000000"
			}
			"spread_radius"
			{
				"data_type"		"float"
				"value"		"300"
			}
			"send_dsp"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"limiter_on"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_event_name"
			{
				"data_type"		"string"
				"value"		"0"
			}
			"limiter_max"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_match_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_match_entity"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_match_substring"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_stop_oldest"
			{
				"data_type"		"bool"
				"value"		"true"
			}
			"limiter_match_event_duration"
			{
				"data_type"		"float"
				"value"		"-1.000000"
			}
			"stop_at_time"
			{
				"data_type"		"float"
				"value"		"-1"
			}
			"event_type"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"dont_stop_layers"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"soundevent_layer2_on"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundevent_layer2"
			{
				"data_type"		"string"
				"value"		"Default.Null"
			}
			"soundevent_layer3_on"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundevent_layer3"
			{
				"data_type"		"string"
				"value"		"Default.Null"
			}
			"block_duration"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"test_soundevent_block"
	{
		"operator"		"soundevent_block_test"
		"execute_once"		"true"
		"input_execute"		"@public.block_duration"
		"match_this_event"		"true"
	}
	"set_soundevent_block"
	{
		"operator"		"soundevent_block"
		"execute_once"		"true"
		"input_execute"		"@public.block_duration"
		"input_duration"		"@public.block_duration"
		"match_this_event"		"true"
	}
	"soundevent_limit_type_switch"
	{
		"operator"		"ctrl_switch_float"
		"input_switch"		"@public.limiter_match_type"
		"input1"		"-1"
		"input2"		"@public.event_type"
	}
	"soundevent_limit"
	{
		"execute_once"		"true"
		"operator"		"soundevent_limiter"
		"input_execute"		"@public.limiter_on"
		"input_max_events"		"@public.limiter_max"
		"match_event_type"		"@soundevent_limit_type_switch.output"
		"match_entity"		"@public.limiter_match_entity"
		"match_substring"		"@public.limiter_match_substring"
		"match_event_name"		"@public.limiter_event_name"
		"stop_oldest"		"@public.limiter_stop_oldest"
		"match_duration_type"		"greater_than_or_equal"
		"match_event_duration"		"@public.limiter_match_event_duration"
	}
	"globals"
	{
		"operator"		"get_system_globals"
		"input_execute"		"1"
		"input_listener_index"		"0"
	}
	"source_info"
	{
		"operator"		"game_get_source_info"
		"source"		"entity"
	}
	"get_entity_info"
	{
		"input_execute"		"1"
		"operator"		"game_entity_info"
		"input_entity_index"		"@source_info.output_entity_index"
		"input_default_world_position"		"@public.position"
		"input_default_local_position"		"@globals.output_listener_front"
	}
	"use_entity_success"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@public.use_entity_position"
		"input2"		"@get_entity_info.output_success"
	}
	"position_switch"
	{
		"operator"		"ctrl_switch_float3"
		"input_switch"		"@use_entity_success.output"
		"input1"		"@public.position"
		"input2"		"@get_entity_info.output_position"
	}
	"source_pos_xy"
	{
		"operator"		"math_float3"
		"apply"		"mult"
		"input1"		"@position_switch.output"
		"input2"		"[ 1.0, 1.0, 1.0]"
	}
	"listener_pos_xy"
	{
		"operator"		"math_float3"
		"apply"		"mult"
		"input1"		"@globals.output_listener_position"
		"input2"		"[ 1.0, 1.0, 1.0]"
	}
	"distance_to_source"
	{
		"operator"		"calc_distance"
		"input_position1"		"@source_pos_xy.output"
		"input_position2"		"@listener_pos_xy.output"
	}
	"import_dist_limit"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"core_distance_limiter"
		"operator_variables"
		{
			"distance"
			{
				"data_type"		"float"
				"value"		"@distance_to_source.output"
			}
			"distance_max"
			{
				"data_type"		"float"
				"value"		"@public.distance_max"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"volume_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"1.000000"
		"input_rand_min"		"@public.volume_rand_min"
		"input_rand_max"		"@public.volume_rand_max"
	}
	"level_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"@public.soundlevel"
		"input_rand_min"		"@public.soundlevel_rand_min"
		"input_rand_max"		"@public.soundlevel_rand_max"
	}
	"pitch_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"@public.pitch"
		"input_rand_min"		"@public.pitch_rand_min"
		"input_rand_max"		"@public.pitch_rand_max"
	}
	"delay_random"
	{
		"operator"		"math_random_float"
		"input_execute"		"1.000000"
		"input_min"		"@public.rand_delay_min"
		"input_max"		"@public.rand_delay_max"
	}
	"delay_total"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@public.delay"
		"input2"		"@delay_random.output"
	}
	"volume_adjust_local_player"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@get_entity_info.output_is_selected_by_local_player"
		"input2"		"0.300000"
	}
	"volume_add_local_player"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@volume_adjust_local_player.output"
		"input2"		"1.000000"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_exclusive"
	}
	"mixer"
	{
		"operator"		"soundmixer_get_mixgroup"
		"mixgroup"		"@public.mixgroup"
		"input_vsnd"		"@get_vsnd.output"
		"input_class_name"		"@source_info.output_entity_classname"
		"input_is_player"		"false"
		"input_soundlevel"		"@level_random.output"
		"input_event_type"		"@public.event_type"
	}
	"mixer_mixgraph"
	{
		"operator"		"soundmixer_set_vmix"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"level_apply_mixer"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@mixer.output_level"
		"input2"		"@level_random.output"
	}
	"volume_falloff_linear"
	{
		"operator"		"math_remap_float"
		"input"		"@distance_to_source.output"
		"input_min"		"@public.volume_falloff_min"
		"input_max"		"@public.volume_falloff_max"
		"input_map_min"		"1.000000"
		"input_map_max"		"0.010000"
		"default_to_max"		"false"
	}
	"volume_fade_in"
	{
		"operator"		"math_remap_float"
		"input"		"@get_event_info.output_elapsed_time"
		"input_min"		"0.000000"
		"input_max"		"@public.volume_fade_in"
		"input_map_min"		"0.050000"
		"input_map_max"		"1.000000"
		"default_to_max"		"true"
	}
	"volume_move"
	{
		"input_execute"		"1"
		"operator"		"math_remap_float"
		"input"		"@get_entity_info.output_velocity"
		"input_min"		"0.000000"
		"input_max"		"@public.volume_move_vel"
		"input_map_min"		"@public.volume_move_vol"
		"input_map_max"		"1.000000"
		"default_to_max"		"true"
	}
	"volume_move_filter"
	{
		"operator"		"math_filter_float"
		"input"		"@volume_move.output"
		"input_max_velocity"		"@public.volume_move_filter_vel"
	}
	"volume_FOW"
	{
		"input_execute"		"@public.volume_use_FOW"
		"operator"		"calc_audibility"
		"input_source_position"		"@position_switch.output"
		"input_radius"		"@public.volume_FOW_radius"
	}
	"volume_dormant_and_use_FOW"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@get_entity_info.output_ent_dormant"
		"input2"		"@public.volume_use_FOW"
	}
	"volume_dormant_inv"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input1"		"1.000000"
		"input2"		"@volume_dormant_and_use_FOW.output"
	}
	"volume_dormant_and_FOW"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@volume_dormant_inv.output"
		"input2"		"@volume_FOW.output"
	}
	"volume_FOW_filter"
	{
		"operator"		"math_filter_float"
		"input"		"@volume_dormant_and_FOW.output"
		"input_max_velocity"		"@public.volume_FOW_filter_vel"
	}
	"volume_accumulate"
	{
		"operator"		"math_accumulate12_float"
		"apply"		"mult"
		"input1"		"@volume_random.output"
		"input2"		"@mixer.output_volume"
		"input3"		"@public.volume"
		"input4"		"@volume_falloff_linear.output"
		"input5"		"@volume_fade_in.output"
		"input6"		"@globals.output_snd_gain_convar"
		"input7"		"@volume_move_filter.output"
		"input8"		"@volume_add_local_player.output"
		"input9"		"@public.volume_atten"
		"input10"		"@globals.output_snd_gamesound_convar"
		"input11"		"@volume_FOW_filter.output"
		"input12"		"1.000000"
	}
	"mixer_trigger"
	{
		"operator"		"soundmixer_set_trigger"
		"input_trigger"		"@volume_accumulate.output"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"dsp_apply_mixer"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@mixer.output_dsp"
		"input2"		"@public.send_dsp"
	}
	"dsp_distantDSP"
	{
		"operator"		"calc_distant_dsp"
		"input_distance"		"@distance_to_source.output"
		"input_level"		"@level_apply_mixer.output"
	}
	"dsp_apply_distant"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@dsp_distantDSP.output"
		"input2"		"@dsp_apply_mixer.output"
	}
	"speakers_spatialize"
	{
		"operator"		"calc_spatialize_vr"
		"input_master_volume"		"@volume_accumulate.output"
		"input_distance"		"@distance_to_source.output"
		"input_source_position"		"@get_entity_info.output_position"
		"input_listener_position"		"@globals.output_listener_position"
		"input_listener_left"		"@globals.output_listener_left"
		"input_listener_forward"		"@globals.output_listener_forward"
		"input_listener_up"		"@globals.output_listener_up"
		"input_spread_min"		"0"
		"input_spread_max"		"30"
		"input_spread_max_value"		"0.300000"
		"input_spread_min_value"		"0.000000"
	}
	"stop_time_off"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@public.stop_at_time"
		"input2"		"0"
	}
	"stop_time_not_elapsed"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@get_event_info.output_elapsed_time"
		"input2"		"@public.stop_at_time"
	}
	"stop_time_or"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input2"		"@stop_time_off.output"
		"input1"		"@stop_time_not_elapsed.output"
	}
	"stop_time_and_unstopped"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input2"		"@stop_time_or.output"
		"input1"		"@get_event_info.output_unstopped"
	}
	"start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"execute_once"		"false"
		"input_execute"		"1.000000"
		"input_start"		"@stop_time_and_unstopped.output"
		"input_speaker_volumes"		"@speakers_spatialize.output"
		"input_pitch"		"@pitch_random.output"
		"input_delay"		"@delay_total.output"
		"input_fade_out"		"@public.volume_fade_out"
		"input_memory_type"		"@public.memory_type"
	}
	"vsnd_playing_and_unstopped"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input2"		"@start_vsnd.output_vsnd_playing"
		"input1"		"@get_event_info.output_unstopped"
	}
	"start_layer2"
	{
		"operator"		"soundevent_start"
		"input_spawn_oneshots"		"@public.dont_stop_layers"
		"execute_once"		"@public.dont_stop_layers"
		"input_execute"		"@public.soundevent_layer2_on"
		"input_start"		"@vsnd_playing_and_unstopped.output"
		"soundevent_name"		"@public.soundevent_layer2"
	}
	"start_layer3"
	{
		"operator"		"soundevent_start"
		"input_spawn_oneshots"		"@public.dont_stop_layers"
		"execute_once"		"@public.dont_stop_layers"
		"input_execute"		"@public.soundevent_layer3_on"
		"input_start"		"@vsnd_playing_and_unstopped.output"
		"soundevent_name"		"@public.soundevent_layer3"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_src1_3d"
			CResourceString m_StackKV = ""dota_src1_3d"
{
	"_system_properties"
	{
		"display_game"		"dotaVR"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"mixgroup"
			{
				"data_type"		"string"
				"value"		"USEPATHMATCH"
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_rand_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_rand_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_atten"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_fade_in"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_fade_out"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"pitch"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"pitch_rand_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"pitch_rand_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundlevel"
			{
				"data_type"		"float"
				"value"		"70"
			}
			"soundlevel_rand_min"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"soundlevel_rand_max"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"delay"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"rand_delay_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"rand_delay_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"limiter_on"
			{
				"data_type"		"float"
				"value"		"1"
			}
			"limiter_match_this"
			{
				"data_type"		"float"
				"value"		"1"
			}
			"limiter_event_name"
			{
				"data_type"		"string"
			}
			"limiter_max"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_match_type"
			{
				"data_type"		"float"
				"value"		"1"
			}
			"limiter_match_entity"
			{
				"data_type"		"float"
				"value"		"1"
			}
			"limiter_match_substring"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_stop_oldest"
			{
				"data_type"		"bool"
				"value"		"true"
			}
			"limiter_match_event_duration"
			{
				"data_type"		"float"
				"value"		"-1.000000"
			}
			"stop_at_time"
			{
				"data_type"		"float"
				"value"		"-1"
			}
			"event_type"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"game_convar_index"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"distance_max"
			{
				"data_type"		"float"
				"value"		"-1.000000"
			}
			"position"
			{
				"data_type"		"float3"
				"value"		"[0.0, 0.0, 0.0]"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"soundevent_layer2_on"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundevent_layer2"
			{
				"data_type"		"string"
				"value"		"Default.Null"
			}
			"soundevent_layer3_on"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"use_event_data"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"soundevent_layer3"
			{
				"data_type"		"string"
				"value"		"Default.Null"
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"globals"
	{
		"operator"		"get_system_globals"
		"input_execute"		"1"
		"input_listener_index"		"0"
	}
	"convar_switch"
	{
		"operator"		"ctrl_switch3_float"
		"input"		"@public.game_convar_index"
		"input0"		"@globals.output_snd_gamesound_convar"
		"input1"		"@globals.output_snd_musicvolume_convar"
		"input2"		"@globals.output_snd_gamevoice_convar"
	}
	"source_info"
	{
		"operator"		"game_get_source_info"
		"source"		"entity"
	}
	"get_entity_info"
	{
		"input_execute"		"1"
		"operator"		"game_entity_info"
		"input_entity_index"		"@source_info.output_entity_index"
		"input_default_world_position"		"@public.position"
		"input_default_local_position"		"@globals.output_listener_front"
	}
	"distance_to_source"
	{
		"operator"		"calc_distance"
		"input_position1"		"@get_entity_info.output_position"
		"input_position2"		"@globals.output_listener_position"
	}
	"import_dist_limit"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"core_distance_limiter"
		"operator_variables"
		{
			"distance"
			{
				"value"		"@distance_to_source.output"
			}
			"distance_max"
			{
				"value"		"@public.distance_max"
			}
		}
	}
	"soundevent_limit_type_switch"
	{
		"operator"		"ctrl_switch_float"
		"input_switch"		"@public.limiter_match_type"
		"input1"		"-1"
		"input2"		"@public.event_type"
	}
	"soundevent_limit"
	{
		"execute_once"		"true"
		"operator"		"soundevent_limiter"
		"input_execute"		"@public.limiter_on"
		"input_max_events"		"@public.limiter_max"
		"match_event_type"		"@soundevent_limit_type_switch.output"
		"match_entity"		"@public.limiter_match_entity"
		"match_substring"		"@public.limiter_match_substring"
		"match_event_name"		"@public.limiter_event_name"
		"match_this_event"		"@public.limiter_match_this"
		"stop_oldest"		"@public.limiter_stop_oldest"
		"match_duration_type"		"greater_than_or_equal"
		"match_event_duration"		"@public.limiter_match_event_duration"
	}
	"volume_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"1.000000"
		"input_rand_min"		"@public.volume_rand_min"
		"input_rand_max"		"@public.volume_rand_max"
	}
	"level_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"@public.soundlevel"
		"input_rand_min"		"@public.soundlevel_rand_min"
		"input_rand_max"		"@public.soundlevel_rand_max"
	}
	"pitch_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"@public.pitch"
		"input_rand_min"		"@public.pitch_rand_min"
		"input_rand_max"		"@public.pitch_rand_max"
	}
	"delay_random"
	{
		"operator"		"math_random_float"
		"input_execute"		"1.000000"
		"input_min"		"@public.rand_delay_min"
		"input_max"		"@public.rand_delay_max"
	}
	"delay_total"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@public.delay"
		"input2"		"@delay_random.output"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"@public.use_event_data"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_exclusive"
	}
	"mixer"
	{
		"operator"		"soundmixer_get_mixgroup"
		"mixgroup"		"@public.mixgroup"
		"input_vsnd"		"@get_vsnd.output"
		"input_class_name"		"@source_info.output_entity_classname"
		"input_is_player"		"@get_entity_info.output_entity_is_player"
		"input_soundlevel"		"@level_random.output"
		"input_event_type"		"@public.event_type"
	}
	"mixer_mixgraph"
	{
		"operator"		"soundmixer_set_vmix"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"occlusion"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"1.000000"
		"input2"		"1.000000"
	}
	"level_apply_mixer"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@mixer.output_level"
		"input2"		"@level_random.output"
	}
	"volume_falloff"
	{
		"operator"		"calc_falloff"
		"input_distance"		"@distance_to_source.output"
		"input_level"		"@level_apply_mixer.output"
		"input_folliage_loss"		"0.000000"
	}
	"volume_fade_in"
	{
		"operator"		"math_remap_float"
		"input"		"@get_event_info.output_elapsed_time"
		"input_min"		"0.000000"
		"input_max"		"@public.volume_fade_in"
		"input_map_min"		"0.050000"
		"input_map_max"		"1.000000"
		"default_to_max"		"true"
	}
	"volume_accumulate"
	{
		"operator"		"math_accumulate12_float"
		"apply"		"mult"
		"input1"		"@volume_random.output"
		"input2"		"@volume_falloff.output"
		"input3"		"@mixer.output_volume"
		"input4"		"@globals.output_snd_gain_convar"
		"input5"		"@occlusion.output"
		"input6"		"@convar_switch.output"
		"input7"		"@public.volume"
		"input8"		"@volume_fade_in.output"
		"input9"		"@public.volume_atten"
		"input10"		"1.000000"
		"input11"		"1.000000"
		"input12"		"1.000000"
	}
	"mixer_trigger"
	{
		"operator"		"soundmixer_set_trigger"
		"input_trigger"		"@volume_accumulate.output"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"dsp_emitter"
	{
		"operator"		"math_float"
		"apply"		"set"
		"input1"		"1.000000"
	}
	"dsp_apply_mixer"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@mixer.output_dsp"
		"input2"		"@dsp_emitter.output"
	}
	"dsp_distantDSP"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"1.000000"
		"input2"		"1.000000"
	}
	"dsp_apply_distant"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@dsp_distantDSP.output"
		"input2"		"@dsp_apply_mixer.output"
	}
	"speakers_spatialize"
	{
		"operator"		"calc_spatialize_vr"
		"input_master_volume"		"@volume_accumulate.output"
		"input_distance"		"@distance_to_source.output"
		"input_source_position"		"@get_entity_info.output_position"
		"input_listener_position"		"@globals.output_listener_position"
		"input_listener_left"		"@globals.output_listener_left"
		"input_listener_forward"		"@globals.output_listener_forward"
		"input_listener_up"		"@globals.output_listener_up"
		"input_spread_min"		"0"
		"input_spread_max"		"30"
		"input_spread_max_value"		"0.300000"
		"input_spread_min_value"		"0.000000"
	}
	"stop_time_off"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@public.stop_at_time"
		"input2"		"0"
	}
	"stop_time_not_elapsed"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@get_event_info.output_elapsed_time"
		"input2"		"@public.stop_at_time"
	}
	"stop_time_or"
	{
		"operator"		"math_float"
		"apply"		"max"
		"input2"		"@stop_time_off.output"
		"input1"		"@stop_time_not_elapsed.output"
	}
	"stop_time_and_unstopped"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input2"		"@stop_time_or.output"
		"input1"		"@get_event_info.output_unstopped"
	}
	"start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"execute_once"		"false"
		"input_execute"		"1.000000"
		"input_start"		"@stop_time_and_unstopped.output"
		"input_speaker_volumes"		"@speakers_spatialize.output"
		"input_pitch"		"@pitch_random.output"
		"input_delay"		"@delay_total.output"
		"input_fade_out"		"@public.volume_fade_out"
		"input_memory_type"		"@public.memory_type"
		"operator_variables"
		{
			"send_room_dsp"
			{
				"data_type"		"float"
				"value"		"@dsp_apply_distant.output"
			}
		}
	}
	"start_layer2"
	{
		"operator"		"soundevent_start"
		"input_spawn_oneshots"		"1.000000"
		"execute_once"		"true"
		"input_execute"		"@public.soundevent_layer2_on"
		"input_start"		"1"
		"soundevent_name"		"@public.soundevent_layer2"
	}
	"start_layer3"
	{
		"operator"		"soundevent_start"
		"input_spawn_oneshots"		"1.000000"
		"execute_once"		"true"
		"input_execute"		"@public.soundevent_layer3_on"
		"input_start"		"1"
		"soundevent_name"		"@public.soundevent_layer3"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_src1_3d_footsteps"
			CResourceString m_StackKV = ""dota_src1_3d_footsteps"
{
	"_system_properties"
	{
		"display_game"		"dotaVR"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"mixgroup"
			{
				"data_type"		"string"
				"value"		"USEPATHMATCH"
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_rand_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_rand_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"volume_atten"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"pitch"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"pitch_rand_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"pitch_rand_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundlevel"
			{
				"data_type"		"float"
				"value"		"70"
			}
			"soundlevel_rand_min"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"soundlevel_rand_max"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"delay"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"rand_delay_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"rand_delay_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"limiter_on"
			{
				"data_type"		"float"
				"value"		"1"
			}
			"limiter_match_this"
			{
				"data_type"		"float"
				"value"		"1"
			}
			"limiter_event_name"
			{
				"data_type"		"string"
			}
			"limiter_max"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"limiter_match_type"
			{
				"data_type"		"float"
				"value"		"1"
			}
			"limiter_match_entity"
			{
				"data_type"		"float"
				"value"		"1"
			}
			"limiter_match_substring"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"event_type"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"distance_max"
			{
				"data_type"		"float"
				"value"		"-1.000000"
			}
			"position"
			{
				"data_type"		"float3"
				"value"		"[0.0, 0.0, 0.0]"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
			"soundevent_layer2_on"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundevent_layer2"
			{
				"data_type"		"string"
				"value"		"Default.Null"
			}
			"soundevent_layer3_on"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"soundevent_layer3"
			{
				"data_type"		"string"
				"value"		"Default.Null"
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"globals"
	{
		"operator"		"get_system_globals"
		"input_execute"		"1"
		"input_listener_index"		"0"
	}
	"source_info"
	{
		"operator"		"game_get_source_info"
		"source"		"entity"
	}
	"get_entity_info"
	{
		"input_execute"		"1"
		"operator"		"game_entity_info"
		"input_entity_index"		"@source_info.output_entity_index"
		"input_default_world_position"		"@public.position"
		"input_default_local_position"		"@globals.output_listener_front"
	}
	"test_for_water"
	{
		"operator"		"dota_ground_under_water"
		"input_position"		"@get_entity_info.output_position"
	}
	"start_soundevent"
	{
		"operator"		"soundevent_start"
		"input_spawn_oneshots"		"0.000000"
		"input_start"		"@test_for_water.output"
		"soundevent_name"		"Hero_Shared.WaterFootsteps"
	}
	"water_exit"
	{
		"operator"		"sos_goto"
		"input_execute"		"@test_for_water.output"
		"input_goto_end"		"true"
	}
	"distance_to_source"
	{
		"operator"		"calc_distance"
		"input_position1"		"@get_entity_info.output_position"
		"input_position2"		"@globals.output_listener_position"
	}
	"import_dist_limit"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"core_distance_limiter"
		"operator_variables"
		{
			"distance"
			{
				"value"		"@distance_to_source.output"
			}
			"distance_max"
			{
				"value"		"@public.distance_max"
			}
		}
	}
	"soundevent_limit_type_switch"
	{
		"operator"		"ctrl_switch_float"
		"input_switch"		"@public.limiter_match_type"
		"input1"		"-1"
		"input2"		"@public.event_type"
	}
	"soundevent_limit"
	{
		"execute_once"		"true"
		"operator"		"soundevent_limiter"
		"input_execute"		"@public.limiter_on"
		"input_max_events"		"@public.limiter_max"
		"match_event_type"		"@soundevent_limit_type_switch.output"
		"match_entity"		"@public.limiter_match_entity"
		"match_substring"		"@public.limiter_match_substring"
		"match_event_name"		"@public.limiter_event_name"
		"match_this_event"		"@public.limiter_match_this"
	}
	"volume_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"1.000000"
		"input_rand_min"		"@public.volume_rand_min"
		"input_rand_max"		"@public.volume_rand_max"
	}
	"level_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"@public.soundlevel"
		"input_rand_min"		"@public.soundlevel_rand_min"
		"input_rand_max"		"@public.soundlevel_rand_max"
	}
	"pitch_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"@public.pitch"
		"input_rand_min"		"@public.pitch_rand_min"
		"input_rand_max"		"@public.pitch_rand_max"
	}
	"delay_random"
	{
		"operator"		"math_random_float"
		"input_execute"		"1.000000"
		"input_min"		"@public.rand_delay_min"
		"input_max"		"@public.rand_delay_max"
	}
	"delay_total"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@public.delay"
		"input2"		"@delay_random.output"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_exclusive"
	}
	"get_vsnd_water"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"false"
		"input_operator_name"		"dota_global_vsnds"
		"input_operator_name"		"water_vsnd_files"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_exclusive"
	}
	"mixer"
	{
		"operator"		"soundmixer_get_mixgroup"
		"mixgroup"		"@public.mixgroup"
		"input_vsnd"		"@get_vsnd.output"
		"input_class_name"		"@source_info.output_entity_classname"
		"input_is_player"		"@get_entity_info.output_entity_is_player"
		"input_soundlevel"		"@level_random.output"
		"input_event_type"		"@public.event_type"
	}
	"mixer_mixgraph"
	{
		"operator"		"soundmixer_set_vmix"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"occlusion"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"1.000000"
		"input2"		"1.000000"
	}
	"level_apply_mixer"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@mixer.output_level"
		"input2"		"@level_random.output"
	}
	"volume_falloff"
	{
		"operator"		"calc_falloff"
		"input_distance"		"@distance_to_source.output"
		"input_level"		"@level_apply_mixer.output"
		"input_folliage_loss"		"0.000000"
	}
	"volume_accumulate"
	{
		"operator"		"math_accumulate12_float"
		"apply"		"mult"
		"input1"		"@volume_random.output"
		"input2"		"@volume_falloff.output"
		"input3"		"@mixer.output_volume"
		"input4"		"@globals.output_snd_gain_convar"
		"input5"		"@occlusion.output"
		"input6"		"@globals.output_snd_gamesound_convar"
		"input7"		"@public.volume"
		"input8"		"1.000000"
		"input9"		"@public.volume_atten"
		"input10"		"1.000000"
		"input11"		"1.000000"
		"input12"		"1.000000"
	}
	"mixer_trigger"
	{
		"operator"		"soundmixer_set_trigger"
		"input_trigger"		"@volume_accumulate.output"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"dsp_emitter"
	{
		"operator"		"math_float"
		"apply"		"set"
		"input1"		"1.000000"
	}
	"dsp_apply_mixer"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@mixer.output_dsp"
		"input2"		"@dsp_emitter.output"
	}
	"dsp_distantDSP"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"1.000000"
		"input2"		"1.000000"
	}
	"dsp_apply_distant"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@dsp_distantDSP.output"
		"input2"		"@dsp_apply_mixer.output"
	}
	"speakers_spatialize"
	{
		"operator"		"calc_spatialize_vr"
		"input_master_volume"		"@volume_accumulate.output"
		"input_distance"		"@distance_to_source.output"
		"input_source_position"		"@get_entity_info.output_position"
		"input_listener_position"		"@globals.output_listener_position"
		"input_listener_left"		"@globals.output_listener_left"
		"input_listener_forward"		"@globals.output_listener_forward"
		"input_listener_up"		"@globals.output_listener_up"
		"input_spread_min"		"0"
		"input_spread_max"		"30"
		"input_spread_max_value"		"0.300000"
		"input_spread_min_value"		"0.000000"
	}
	"start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"execute_once"		"false"
		"input_execute"		"1.000000"
		"input_start"		"@get_event_info.output_unstopped"
		"input_speaker_volumes"		"@speakers_spatialize.output"
		"input_pitch"		"@pitch_random.output"
		"input_delay"		"@delay_total.output"
		"input_memory_type"		"@public.memory_type"
	}
	"start_layer2"
	{
		"operator"		"soundevent_start"
		"input_spawn_oneshots"		"1.000000"
		"execute_once"		"true"
		"input_execute"		"@public.soundevent_layer2_on"
		"input_start"		"1"
		"soundevent_name"		"@public.soundevent_layer2"
	}
	"start_layer3"
	{
		"operator"		"soundevent_start"
		"input_spawn_oneshots"		"1.000000"
		"execute_once"		"true"
		"input_execute"		"@public.soundevent_layer3_on"
		"input_start"		"1"
		"soundevent_name"		"@public.soundevent_layer3"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "dota_gamestart_horn"
			CResourceString m_StackKV = ""dota_gamestart_horn"
{
	"_system_properties"
	{
		"display_game"		"dotaVR"
		"display_group"		"advanced"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"volume_atten"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"position"
			{
				"data_type"		"float3"
				"value"		"[0.0, 0.0, 0.0]"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value0"		"sounds/common/null.vsnd"
				}
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"globals"
	{
		"operator"		"get_system_globals"
		"input_execute"		"1"
		"input_listener_index"		"0"
	}
	"distance_to_source"
	{
		"operator"		"calc_distance"
		"input_position1"		"@public.position"
		"input_position2"		"@globals.output_listener_position"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_exclusive"
	}
	"mixer"
	{
		"operator"		"soundmixer_get_mixgroup"
		"mixgroup"		"Ultimates"
	}
	"mixer_mixgraph"
	{
		"operator"		"soundmixer_set_vmix"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"level_apply_mixer"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@mixer.output_level"
		"input2"		"96"
	}
	"volume_falloff"
	{
		"operator"		"calc_falloff"
		"input_distance"		"@distance_to_source.output"
		"input_level"		"@level_apply_mixer.output"
		"input_folliage_loss"		"0.000000"
	}
	"volume_accumulate"
	{
		"operator"		"math_accumulate12_float"
		"apply"		"mult"
		"input1"		"1.000000"
		"input2"		"@volume_falloff.output"
		"input3"		"@mixer.output_volume"
		"input4"		"@globals.output_snd_gain_convar"
		"input5"		"@globals.output_snd_gamesound_convar"
		"input6"		"1.000000"
		"input7"		"1.000000"
		"input8"		"1.000000"
		"input9"		"@public.volume_atten"
		"input10"		"1.000000"
		"input11"		"1.000000"
		"input12"		"1.000000"
	}
	"mixer_trigger"
	{
		"operator"		"soundmixer_set_trigger"
		"input_trigger"		"@volume_accumulate.output"
		"input_mixgroups"		"@mixer.output_mixgroups"
	}
	"speakers_spatialize"
	{
		"operator"		"calc_spatialize_vr"
		"input_master_volume"		"@volume_accumulate.output"
		"input_distance"		"@distance_to_source.output"
		"input_source_position"		"@public.position"
		"input_listener_position"		"@globals.output_listener_position"
		"input_listener_left"		"@globals.output_listener_left"
		"input_listener_forward"		"@globals.output_listener_forward"
		"input_listener_up"		"@globals.output_listener_up"
		"input_spread_min"		"0"
		"input_spread_max"		"12000"
		"input_spread_max_value"		"0.600000"
		"input_spread_min_value"		"0.000000"
	}
	"start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"execute_once"		"false"
		"input_execute"		"1.000000"
		"input_start"		"@get_event_info.output_unstopped"
		"input_speaker_volumes"		"@speakers_spatialize.output"
		"input_pitch"		"1.000000"
		"input_delay"		"0.000000"
	}
	"stop_prehorn_music"
	{
		"execute_once"		"true"
		"input_execute"		"1.000000"
		"operator"		"soundevent_limiter"
		"input_max_events"		"0.000000"
		"match_entity"		"false"
		"match_substring"		"true"
		"match_event_name"		".music.countdown"
	}
}
"
		}
	]
}
